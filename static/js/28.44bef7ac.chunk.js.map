{"version":3,"sources":["_actions/guide.actions.ts","_actions/course.actions.ts","_actions/exercise.actions.ts","_actions/lesson.actions.ts","../node_modules/@material-ui/core/esm/ListItemAvatar/ListItemAvatar.js","components/LearningPages/Guide/GuideItems.tsx","components/LearningPages/Guide/index.tsx"],"names":["requestGuide","path","dispatch","getState","guide","newPath","found","bank","guides","data","find","id","guide_select","type","SUCCESS","GUIDE","SAVE","COURSES","addCourses","EXERCISES","addExercises","course","requestCourse","exercise","requestExercise","REQUEST","API","get","then","res","GUIDES","catch","err","errorHandler","FAILURE","added","map","lesson","push","courses","course_select","Compiler","lessons","exercises","COURSE","LESSONS","requestLesson","select","info","genre","name","ENTER_NOTEMODE","EXERCISE","LESSON","ListItemAvatar","React","props","ref","classes","className","other","_objectWithoutProperties","context","ListContext","_extends","clsx","root","alignItems","alignItemsFlexStart","withStyles","minWidth","flexShrink","marginTop","useStyles","makeStyles","theme","width","height","margin","spacing","cardAction","justifyContent","content","minHeight","rightChip","position","cursor","backgroundColor","leftChip","right","CourseItem","index","courseItem","title","thumbnails","Card","CardActionArea","onClick","e","store","Chip","label","grade","color","CardMedia","component","alt","image","thumbnailsFinder","CardContent","Typography","gutterBottom","variant","ExerciseItem","exerciseItem","Guide","pathFinder","this","pathname","loading","error","counter","Grid","container","justify","k","List","key","ListItem","Avatar","ListItemText","primary","season","secondary","exercise_description","Divider","guideItem","i","course_description","autoMargin","Component","connect","state","ownProps","router","location","single","bindActionCreators","createStyles","breakpoints","down","padding"],"mappings":"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","file":"static/js/28.44bef7ac.chunk.js","sourcesContent":["import { ThunkDispatch } from \"redux-thunk\";\r\nimport {\r\n  AppState,\r\n  ICardDetail,\r\n  SAVE,\r\n  FAILURE,\r\n  REQUEST,\r\n  SUCCESS,\r\n  GuideSelect,\r\n} from \"../_types\";\r\nimport { API } from \"../_helpers/api\";\r\nimport { AppActions } from \"../_types\";\r\nimport { requestCourse } from \"./course.actions\";\r\nimport { PathFinder } from \"../_helpers/constants\";\r\nimport { requestExercise } from \"./exercise.actions\";\r\nimport { errorHandler } from \"../components/Layout/SnackBar/alert\";\r\n\r\nexport const requestGuide = (path: PathFinder) => (\r\n  dispatch: ThunkDispatch<AppState, undefined, AppActions>,\r\n  getState: () => AppState\r\n) => {\r\n  const { guide, ...newPath } = path;\r\n  const found = getState().bank.guides.data.find(\r\n    (guide) => guide.id === path.guide\r\n  );\r\n  if (found?.guide_select) {\r\n    dispatch({ type: SUCCESS.GUIDE, data: found });\r\n    dispatch({ type: SAVE.COURSES, data: addCourses(found.guide_select) });\r\n    dispatch({ type: SAVE.EXERCISES, data: addExercises(found.guide_select) });\r\n    if (path.course) dispatch(requestCourse(newPath));\r\n    if (path.exercise) dispatch(requestExercise(newPath));\r\n  } else {\r\n    dispatch({ type: REQUEST.GUIDE });\r\n    API.get(`/lesson/v2/guide?id=${path.guide}`)\r\n      .then((res) => {\r\n        dispatch({ type: SUCCESS.GUIDE, data: res.data[0] });\r\n        dispatch({ type: SAVE.GUIDES, data: res.data });\r\n        dispatch({\r\n          type: SAVE.COURSES,\r\n          data: addCourses(res.data[0].guide_select),\r\n        });\r\n        dispatch({\r\n          type: SAVE.EXERCISES,\r\n          data: addExercises(res.data[0].guide_select),\r\n        });\r\n        if (path.course) dispatch(requestCourse(newPath));\r\n        if (path.exercise) dispatch(requestExercise(newPath));\r\n      })\r\n      .catch((err) => errorHandler(err, FAILURE.GUIDE));\r\n  }\r\n};\r\n\r\nconst addCourses = (guide_select: GuideSelect[]) => {\r\n  const added: ICardDetail[] = [];\r\n  guide_select.map((course) =>\r\n    course.course?.map((lesson) => added.push(lesson))\r\n  );\r\n  return added;\r\n};\r\nconst addExercises = (guide_select: GuideSelect[]) => {\r\n  const added: ICardDetail[] = [];\r\n  guide_select.map((course) =>\r\n    course.exercise?.map((exercise) => added.push(exercise))\r\n  );\r\n  return added;\r\n};\r\n","import { ThunkDispatch } from \"redux-thunk\";\r\nimport {\r\n  AppState,\r\n  CourseSelect,\r\n  FAILURE,\r\n  REQUEST,\r\n  SAVE,\r\n  SUCCESS,\r\n} from \"../_types\";\r\nimport { API } from \"../_helpers/api\";\r\nimport { requestGuide } from \"./guide.actions\";\r\nimport { requestLesson } from \"./lesson.actions\";\r\nimport { PathFinder } from \"../_helpers/constants\";\r\nimport { ICardDetail, AppActions } from \"../_types\";\r\nimport { requestExercise } from \"./exercise.actions\";\r\nimport { errorHandler } from \"../components/Layout/SnackBar/alert\";\r\n\r\nexport const requestCourse = (path: PathFinder) => (\r\n  dispatch: ThunkDispatch<AppState, undefined, AppActions>,\r\n  getState: () => AppState\r\n) => {\r\n  const found = getState().bank.courses.data.find(\r\n    (course) => course.id === path.course\r\n  );\r\n  const { course, ...newPath } = path;\r\n  if (found?.course_select) {\r\n    const { lessons, exercises } = Compiler(found.course_select);\r\n    dispatch({ type: SUCCESS.COURSE, data: found });\r\n    dispatch({ type: SAVE.LESSONS, data: lessons });\r\n    dispatch({ type: SAVE.EXERCISES, data: exercises });\r\n    if (path.lesson) dispatch(requestLesson(newPath));\r\n    if (path.exercise) dispatch(requestExercise(newPath));\r\n  } else if (path.guide) {\r\n    dispatch(requestGuide(path));\r\n  } else if (!found) {\r\n    dispatch({ type: REQUEST.COURSE });\r\n    API.get(`/lesson/v2/course?id=${path.course}`)\r\n      .then((res) => {\r\n        const { lessons, exercises } = Compiler(res.data[0].course_select);\r\n        dispatch({ type: SUCCESS.COURSE, data: res.data[0] });\r\n        dispatch({ type: SAVE.COURSES, data: res.data });\r\n        dispatch({ type: SAVE.LESSONS, data: lessons });\r\n        dispatch({ type: SAVE.EXERCISES, data: exercises });\r\n        if (path.lesson) dispatch(requestLesson(newPath));\r\n        if (path.exercise) dispatch(requestExercise(newPath));\r\n      })\r\n      .catch((err) => errorHandler(err, FAILURE.COURSE));\r\n  }\r\n};\r\n\r\nconst Compiler = (course_select: CourseSelect[]) => {\r\n  const lessons: ICardDetail[] = [];\r\n  const exercises: ICardDetail[] = [];\r\n  course_select.map((select) =>\r\n    select.info.genre?.name === \"Exercise\"\r\n      ? exercises.push(select)\r\n      : lessons.push(select)\r\n  );\r\n  return { lessons, exercises };\r\n};\r\n","import { ThunkDispatch } from \"redux-thunk\";\r\nimport { API } from \"../_helpers/api\";\r\nimport { AppActions } from \"../_types\";\r\nimport { requestGuide } from \"./guide.actions\";\r\nimport { requestCourse } from \"./course.actions\";\r\nimport { PathFinder } from \"../_helpers/constants\";\r\nimport { ENTER_NOTEMODE } from \"../_types/player.types\";\r\nimport { errorHandler } from \"../components/Layout/SnackBar/alert\";\r\nimport { FAILURE, REQUEST, SUCCESS, SAVE, AppState } from \"../_types\";\r\n\r\nexport const requestExercise = (path: PathFinder) => (\r\n  dispatch: ThunkDispatch<AppState, undefined, AppActions>,\r\n  getState: () => AppState\r\n) => {\r\n  const found = getState().bank.exercises.data.find(\r\n    (exercise) => exercise.id === path.exercise\r\n  );\r\n  if (found) {\r\n    dispatch({ type: ENTER_NOTEMODE });\r\n    dispatch({ type: SUCCESS.EXERCISE, data: found });\r\n  } else if (path.guide) {\r\n    dispatch(requestGuide(path));\r\n  } else if (path.course) {\r\n    dispatch(requestCourse(path));\r\n  } else if (!found) {\r\n    dispatch({ type: REQUEST.EXERCISE });\r\n    API.get(`/lesson/v2?id=${path.exercise}`)\r\n      .then((res) => {\r\n        dispatch({ type: ENTER_NOTEMODE });\r\n        dispatch({ type: SUCCESS.EXERCISE, data: res.data[0] });\r\n        dispatch({ type: SAVE.EXERCISES, data: res.data });\r\n      })\r\n      .catch((err) => errorHandler(err, FAILURE.EXERCISE));\r\n  }\r\n};\r\n","import { ThunkDispatch } from \"redux-thunk\";\r\nimport { API } from \"../_helpers/api\";\r\nimport { AppActions } from \"../_types\";\r\nimport { requestGuide } from \"./guide.actions\";\r\nimport { requestCourse } from \"./course.actions\";\r\nimport { PathFinder } from \"../_helpers/constants\";\r\nimport { errorHandler } from \"../components/Layout/SnackBar/alert\";\r\nimport { FAILURE, REQUEST, SUCCESS, SAVE, AppState } from \"../_types\";\r\n\r\nexport const requestLesson = (path: PathFinder) => (\r\n  dispatch: ThunkDispatch<AppState, undefined, AppActions>,\r\n  getState: () => AppState\r\n) => {\r\n  const found = getState().bank.lessons.data.find(\r\n    (lesson) => lesson.id === path.lesson\r\n  );\r\n\r\n  if (found) {\r\n    dispatch({ type: SUCCESS.LESSON, data: found });\r\n  } else if (path.guide) {\r\n    dispatch(requestGuide(path));\r\n  } else if (path.course) {\r\n    dispatch(requestCourse(path));\r\n  } else if (!found) {\r\n    dispatch({ type: REQUEST.LESSON });\r\n    API.get(`/lesson/v2?id=${path.lesson}`)\r\n      .then((res) => {\r\n        dispatch({ type: SUCCESS.LESSON, data: res.data[0] });\r\n        dispatch({ type: SAVE.LESSONS, data: res.data });\r\n      })\r\n      .catch((err) => errorHandler(err, FAILURE.LESSON));\r\n  }\r\n};\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport ListContext from '../List/ListContext';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    minWidth: 56,\n    flexShrink: 0\n  },\n\n  /* Styles applied to the root element when the parent `ListItem` uses `alignItems=\"flex-start\"`. */\n  alignItemsFlexStart: {\n    marginTop: 8\n  }\n};\n/**\n * A simple wrapper to apply `List` styles to an `Avatar`.\n */\n\nvar ListItemAvatar = /*#__PURE__*/React.forwardRef(function ListItemAvatar(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\"]);\n\n  var context = React.useContext(ListContext);\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, context.alignItems === 'flex-start' && classes.alignItemsFlexStart),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItemAvatar.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component – normally `Avatar`.\n   */\n  children: PropTypes.element.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiListItemAvatar'\n})(ListItemAvatar);","import React from \"react\";\r\nimport { push } from \"connected-react-router\";\r\nimport {\r\n  Card,\r\n  CardMedia,\r\n  Typography,\r\n  CardContent,\r\n  CardActionArea,\r\n  Chip,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles, Theme } from \"@material-ui/core/styles\";\r\nimport { thumbnailsFinder } from \"../../../_helpers/constants\";\r\nimport { store } from \"../../../_store/store.config\";\r\nimport { ICardDetail } from \"../../../_types\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    width: 300,\r\n    height: 260,\r\n    margin: theme.spacing(1),\r\n  },\r\n  cardAction: {\r\n    justifyContent: \"space-between\",\r\n    margin: \"inherit\",\r\n  },\r\n  content: {\r\n    minHeight: 130,\r\n  },\r\n  rightChip: {\r\n    position: \"absolute\",\r\n    cursor: \"pointer\",\r\n    margin: theme.spacing(1),\r\n    backgroundColor: \"green\",\r\n  },\r\n  leftChip: {\r\n    position: \"absolute\",\r\n    right: 0,\r\n    cursor: \"pointer\",\r\n    margin: theme.spacing(1),\r\n  },\r\n}));\r\n\r\ntype Props = {\r\n  courseItem: ICardDetail;\r\n  index: number;\r\n  type: string;\r\n  path: string;\r\n};\r\n\r\nexport const CourseItem: React.FC<Props> = ({\r\n  index,\r\n  type,\r\n  courseItem,\r\n  path,\r\n}) => {\r\n  const classes = useStyles();\r\n  const { title, id, thumbnails, info } = courseItem;\r\n\r\n  const clickHandler = (\r\n    e: React.MouseEvent<HTMLButtonElement, MouseEvent>\r\n  ): void => {\r\n    store.dispatch(push(path + \"/\" + type + id));\r\n  };\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardActionArea onClick={clickHandler}>\r\n        <Chip label={index + 1} className={classes.rightChip} />\r\n        <Chip\r\n          label={info.grade?.name}\r\n          className={classes.leftChip}\r\n          color=\"secondary\"\r\n        />\r\n        <CardMedia\r\n          component=\"img\"\r\n          alt={title}\r\n          height=\"130\"\r\n          image={thumbnailsFinder(thumbnails)}\r\n          title={title}\r\n        />\r\n        <CardContent className={classes.content}>\r\n          <Typography gutterBottom variant=\"body1\" component=\"h6\">\r\n            {title}\r\n          </Typography>\r\n        </CardContent>\r\n      </CardActionArea>\r\n    </Card>\r\n  );\r\n};\r\n\r\ntype ExerciseProps = {\r\n  exerciseItem: ICardDetail;\r\n  index: number;\r\n  type: string;\r\n  path: string;\r\n};\r\n\r\nexport const ExerciseItem: React.FC<ExerciseProps> = ({\r\n  exerciseItem,\r\n  index,\r\n  type,\r\n  path,\r\n}) => {\r\n  const classes = useStyles();\r\n  const { title, id, thumbnails, info } = exerciseItem;\r\n\r\n  const clickHandler = (\r\n    e: React.MouseEvent<HTMLButtonElement, MouseEvent>\r\n  ): void => {\r\n    store.dispatch(push(path + \"/\" + type + id));\r\n  };\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardActionArea onClick={clickHandler}>\r\n        <Chip label={index + 1} className={classes.rightChip} />\r\n        <Chip\r\n          label={info.grade?.name}\r\n          className={classes.leftChip}\r\n          color=\"secondary\"\r\n        />\r\n        <CardMedia\r\n          component=\"img\"\r\n          alt={title}\r\n          height=\"130\"\r\n          image={thumbnailsFinder(thumbnails)}\r\n          title={title}\r\n        />\r\n        <CardContent className={classes.content}>\r\n          <Typography gutterBottom variant=\"body1\" component=\"h6\">\r\n            {title}\r\n          </Typography>\r\n        </CardContent>\r\n      </CardActionArea>\r\n    </Card>\r\n  );\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { ThunkDispatch } from \"redux-thunk\";\r\nimport {\r\n  Grid,\r\n  createStyles,\r\n  Theme,\r\n  Typography,\r\n  WithStyles,\r\n  withStyles,\r\n  Divider,\r\n  Chip,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  ListItemAvatar,\r\n  Avatar,\r\n} from \"@material-ui/core\";\r\nimport { pathFinder, PathFinder, season } from \"../../../_helpers/constants\";\r\nimport { ICardDetail, AppActions, AppState } from \"../../../_types\";\r\nimport { requestGuide } from \"../../../_actions/guide.actions\";\r\nimport { CourseItem, ExerciseItem } from \"./GuideItems\";\r\nimport { LoadingCircle } from \"../../Layout/Loadings\";\r\n\r\nconst useStyles = (theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      width: \"99vw\",\r\n      minHeight: \"calc(100vh - 128px)\",\r\n      [theme.breakpoints.down(\"xs\")]: {\r\n        minHeight: \"calc(100vh - 112px)\",\r\n        padding: theme.spacing(1),\r\n      },\r\n      padding: theme.spacing(2),\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n    },\r\n    autoMargin: {\r\n      margin: \"auto\",\r\n    },\r\n  });\r\n\r\ninterface GuideProps extends WithStyles<typeof useStyles> {\r\n  data?: ICardDetail;\r\n  loading: boolean;\r\n  error: string;\r\n  pathname: string;\r\n}\r\n\r\ntype Props = GuideProps & LinkDispatchProps;\r\n\r\nclass Guide extends Component<Props> {\r\n  componentDidMount() {\r\n    const path = pathFinder(this.props.pathname);\r\n    if (path.guide) this.props.requestGuide(path);\r\n  }\r\n\r\n  render() {\r\n    const { classes, data, loading, error, pathname } = this.props;\r\n    let counter = 0;\r\n    return (\r\n      <Grid container justify=\"center\" className={classes.root}>\r\n        {loading ? (\r\n          <LoadingCircle />\r\n        ) : data ? (\r\n          data.guide_select?.map((guide, k) => (\r\n            <List key={k}>\r\n              {guide.exercise && (\r\n                <>\r\n                  <ListItem>\r\n                    <ListItemAvatar>\r\n                      <Avatar>\r\n                        <Chip label={++counter} color=\"secondary\" />\r\n                      </Avatar>\r\n                    </ListItemAvatar>\r\n                    <ListItemText\r\n                      primary={season[counter]}\r\n                      secondary={guide.exercise_description}\r\n                    />\r\n                  </ListItem>\r\n                  <Divider variant=\"inset\" component=\"li\" />\r\n                  <Grid container justify=\"center\">\r\n                    {guide.exercise.map((guideItem, i) => (\r\n                      <ExerciseItem\r\n                        key={i}\r\n                        index={i}\r\n                        type={\"exercise=\"}\r\n                        path={pathname}\r\n                        exerciseItem={guideItem}\r\n                      />\r\n                    ))}\r\n                  </Grid>\r\n                </>\r\n              )}\r\n              {guide.course && (\r\n                <>\r\n                  <ListItem>\r\n                    <ListItemAvatar>\r\n                      <Avatar>\r\n                        <Chip label={++counter} color=\"secondary\" />\r\n                      </Avatar>\r\n                    </ListItemAvatar>\r\n                    <ListItemText\r\n                      primary={season[counter]}\r\n                      secondary={guide.course_description}\r\n                    />\r\n                  </ListItem>\r\n                  <Divider variant=\"inset\" component=\"li\" />\r\n                  <Grid container justify=\"center\">\r\n                    {guide.course?.map((guideItem, i) => (\r\n                      <CourseItem\r\n                        key={i}\r\n                        index={i}\r\n                        type={\"course=\"}\r\n                        path={pathname}\r\n                        courseItem={guideItem}\r\n                      />\r\n                    ))}\r\n                  </Grid>\r\n                </>\r\n              )}\r\n            </List>\r\n          ))\r\n        ) : (\r\n          <Typography component=\"div\" className={classes.autoMargin}>\r\n            {error}\r\n          </Typography>\r\n        )}\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\ninterface LinkDispatchProps {\r\n  requestGuide: (path: PathFinder) => void;\r\n}\r\n\r\nconst mapStateToProps = (state: AppState, ownProps: Props): GuideProps => ({\r\n  pathname: state.router.location.pathname,\r\n  classes: ownProps.classes,\r\n  ...state.single.guide,\r\n});\r\n\r\nconst mapDispatchToProps = (\r\n  dispatch: ThunkDispatch<any, any, AppActions>\r\n): LinkDispatchProps => ({\r\n  requestGuide: bindActionCreators(requestGuide, dispatch),\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withStyles(useStyles)(Guide));\r\n"],"sourceRoot":""}