{"version":3,"sources":["router/Test.jsx"],"names":["colors","ColorBoxes","React","useState","sort","Math","random","boxes","setBoxes","Array","from","msg","setMsg","Fragment","map","color","i","ColorBox","key","onClick","index","console","log","randomColor","floor","prev","x","clickHandler","className","style","backgroundColor"],"mappings":"kNACMA,EAAS,CACb,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAGa,SAASC,IAAc,IAAD,EACTC,IAAMC,SAC9BH,EAAOI,MAAK,kBAAMC,KAAKC,SAAW,OAFD,mBAC5BC,EAD4B,KACrBC,EADqB,OAIbN,IAAMC,SAASM,MAAMC,KAAKD,MAAM,MAJnB,mBAI5BE,EAJ4B,KAIvBC,EAJuB,KAanC,OACE,kBAAC,IAAMC,SAAP,KACGN,EAAMO,KAAI,SAACC,EAAOC,GAAR,OACT,kBAACC,EAAD,CAAUC,IAAKF,EAAID,EAAOA,MAAOA,EAAOJ,IAAKA,EAAIK,QAEnD,4BAAQG,QAAS,kBAZA,SAACC,GACpBC,QAAQC,IAAIF,GACZ,IAAMG,EAAcvB,EAAOK,KAAKmB,MAAsB,GAAhBnB,KAAKC,WAC3CE,GAAS,SAACiB,GAAD,OAAUA,EAAKX,KAAI,SAACY,EAAGV,GAAJ,OAAWA,IAAMI,EAAQG,EAAcG,QACnEd,GAAO,SAACa,GAAD,OAAUA,EAAKX,KAAI,SAACY,EAAGV,GAAJ,OAAWA,IAAMI,EAAQ,WAAaM,QAQvCC,CAAatB,KAAKmB,MAAsB,GAAhBnB,KAAKC,aAApD,kBAMN,IAAMW,EAAW,SAAC,GAAD,IAAGF,EAAH,EAAGA,MAAOJ,EAAV,EAAUA,IAAV,OACf,yBAAKiB,UAAU,WAAWC,MAAO,CAAEC,gBAAiBf,IACjDA,EADH,IACWJ","file":"static/js/45.e747459c.chunk.js","sourcesContent":["import React from \"react\";\r\nconst colors = [\r\n  \"#8391B5\",\r\n  \"#290D11\",\r\n  \"#0C9ABC\",\r\n  \"#0E17F4\",\r\n  \"#97BC89\",\r\n  \"#6B48F7\",\r\n  \"#584A35\",\r\n  \"#669F15\",\r\n  \"#15FC93\",\r\n  \"#7C8329\",\r\n  \"#27D792\",\r\n  \"#4786C8\",\r\n];\r\n\r\nexport default function ColorBoxes() {\r\n  const [boxes, setBoxes] = React.useState(\r\n    colors.sort(() => Math.random() - 0.5)\r\n  );\r\n  const [msg, setMsg] = React.useState(Array.from(Array(12)));\r\n\r\n  const clickHandler = (index) => {\r\n    console.log(index);\r\n    const randomColor = colors[Math.floor(Math.random() * 12)];\r\n    setBoxes((prev) => prev.map((x, i) => (i === index ? randomColor : x)));\r\n    setMsg((prev) => prev.map((x, i) => (i === index ? \"changed!\" : x)));\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {boxes.map((color, i) => (\r\n        <ColorBox key={i + color} color={color} msg={msg[i]} />\r\n      ))}\r\n      <button onClick={() => clickHandler(Math.floor(Math.random() * 12))}>\r\n        Change Color!\r\n      </button>\r\n    </React.Fragment>\r\n  );\r\n}\r\nconst ColorBox = ({ color, msg }) => (\r\n  <div className=\"colorBox\" style={{ backgroundColor: color }}>\r\n    {color} {msg}\r\n  </div>\r\n);\r\n"],"sourceRoot":""}