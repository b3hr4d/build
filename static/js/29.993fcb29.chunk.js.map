{"version":3,"sources":["_actions/guide.actions.ts","_actions/course.actions.ts","_actions/exercise.actions.ts","_actions/lesson.actions.ts","../node_modules/@material-ui/core/esm/CardContent/CardContent.js","../node_modules/@material-ui/core/esm/CardActionArea/CardActionArea.js","../node_modules/@material-ui/core/esm/CardMedia/CardMedia.js","../node_modules/@material-ui/core/esm/ListItemAvatar/ListItemAvatar.js","components/LearningPages/Guide/GuideItems.tsx","components/LearningPages/Guide/index.tsx"],"names":["requestGuide","path","dispatch","getState","guide","newPath","found","bank","guides","data","find","id","type","SUCCESS_GUIDE","SAVE_COURSES","addCourses","guide_select","SAVE_EXERCISES","addExercises","course","requestCourse","exercise","requestExercise","REQUEST_GUIDE","API","get","then","res","SAVE_GUIDES","catch","err","errorHandler","FAILURE_GUIDE","added","map","lesson","push","courses","Compiler","course_select","lessons","exercises","SUCCESS_COURSE","SAVE_LESSONS","requestLesson","REQUEST_COURSE","FAILURE_COURSE","select","info","genre","name","ENTER_NOTEMODE","SUCCESS_EXERCISE","REQUEST_EXERCISE","FAILURE_EXERCISE","SUCCESS_LESSON","REQUEST_LESSON","FAILURE_LESSON","CardContent","React","props","ref","classes","className","_props$component","component","Component","other","_objectWithoutProperties","_extends","clsx","root","withStyles","padding","paddingBottom","CardActionArea","children","focusVisibleClassName","ButtonBase","focusVisible","focusHighlight","theme","display","textAlign","width","opacity","palette","action","hoverOpacity","overflow","pointerEvents","position","top","right","bottom","left","borderRadius","backgroundColor","transition","transitions","create","duration","short","MEDIA_COMPONENTS","CardMedia","image","src","style","isMediaComponent","indexOf","composedStyle","backgroundImage","concat","media","img","undefined","backgroundSize","backgroundRepeat","backgroundPosition","objectFit","ListItemAvatar","context","ListContext","alignItems","alignItemsFlexStart","minWidth","flexShrink","marginTop","useStyles","makeStyles","createStyles","height","margin","spacing","cardAction","justifyContent","content","minHeight","rightChip","cursor","leftChip","CourseItem","index","courseItem","title","thumbnails","grade","Card","onClick","e","store","Chip","label","color","alt","thumbnailsFinder","Typography","gutterBottom","variant","ExerciseItem","exerciseItem","featured_img","Guide","pathFinder","this","pathname","loading","error","counter","Grid","container","justify","k","List","key","ListItem","Avatar","ListItemText","primary","season","secondary","exercise_description","Divider","guideItem","i","course_description","autoMargin","connect","state","ownProps","router","location","single","bindActionCreators","breakpoints","down"],"mappings":"gPAmBaA,EAAe,SAACC,GAAD,OAAsB,SAChDC,EACAC,GAE8BF,EAAtBG,MADJ,IACcC,EADf,YAC2BJ,EAD3B,WAEGK,EAAQH,IAAWI,KAAKC,OAAOC,KAAKC,MACxC,SAACN,GAAD,OAAWA,EAAMO,KAAOV,EAAKG,SAE3BE,GACFJ,EAAS,CAAEU,KAAMC,IAAeJ,KAAMH,IACtCJ,EAAS,CAAEU,KAAME,IAAcL,KAAMM,EAAWT,EAAMU,gBACtDd,EAAS,CAAEU,KAAMK,IAAgBR,KAAMS,EAAaZ,EAAMU,gBACtDf,EAAKkB,QAAQjB,EAASkB,YAAcf,IACpCJ,EAAKoB,UAAUnB,EAASoB,YAAgBjB,MAE5CH,EAAS,CAAEU,KAAMW,MACjBC,IAAIC,IAAJ,8BAA+BxB,EAAKG,QACjCsB,MAAK,SAACC,GACLzB,EAAS,CAAEU,KAAMC,IAAeJ,KAAMkB,EAAIlB,KAAK,KAC/CP,EAAS,CAAEU,KAAMgB,IAAanB,KAAMkB,EAAIlB,OACxCP,EAAS,CACPU,KAAME,IACNL,KAAMM,EAAWY,EAAIlB,KAAK,GAAGO,gBAE/Bd,EAAS,CACPU,KAAMK,IACNR,KAAMS,EAAaS,EAAIlB,KAAK,GAAGO,gBAE7Bf,EAAKkB,QAAQjB,EAASkB,YAAcf,IACpCJ,EAAKoB,UAAUnB,EAASoB,YAAgBjB,OAE7CwB,OAAM,SAACC,GAAD,OAASC,YAAaD,EAAKE,WAIlCjB,EAAa,SAACC,GAClB,IAAMiB,EAAmB,GAIzB,OAHAjB,EAAakB,KAAI,SAACf,GAAD,uBACfA,EAAOA,cADQ,aACf,EAAee,KAAI,SAACC,GAAD,OAAYF,EAAMG,KAAKD,SAErCF,GAEHf,EAAe,SAACF,GACpB,IAAMiB,EAAmB,GAIzB,OAHAjB,EAAakB,KAAI,SAACf,GAAD,uBACfA,EAAOE,gBADQ,aACf,EAAiBa,KAAI,SAACb,GAAD,OAAcY,EAAMG,KAAKf,SAEzCY,I,mJChDIb,EAAgB,SAACnB,GAAD,OAAsB,SACjDC,EACAC,GAEA,IAAMG,EAAQH,IAAWI,KAAK8B,QAAQ5B,KAAKC,MACzC,SAACS,GAAD,OAAYA,EAAOR,KAAOV,EAAKkB,UAEdd,GAAYJ,EAAvBkB,OAJL,YAI4BlB,EAJ5B,aAKH,GAAIK,EAAO,CAAC,IAAD,EACsBgC,EAAShC,EAAMiC,eAAtCC,EADC,EACDA,QAASC,EADR,EACQA,UACjBvC,EAAS,CAAEU,KAAM8B,IAAgBjC,KAAMH,IACvCJ,EAAS,CAAEU,KAAM+B,IAAclC,KAAM+B,IACrCtC,EAAS,CAAEU,KAAMK,IAAgBR,KAAMgC,IACnCxC,EAAKkC,QAAQjC,EAAS0C,YAAcvC,IACpCJ,EAAKoB,UAAUnB,EAASoB,YAAgBjB,SACnCJ,EAAKG,MACdF,EAASF,YAAaC,IACZK,IACVJ,EAAS,CAAEU,KAAMiC,MACjBrB,IAAIC,IAAJ,+BAAgCxB,EAAKkB,SAClCO,MAAK,SAACC,GAAS,IAAD,EACkBW,EAASX,EAAIlB,KAAK,GAAG8B,eAA5CC,EADK,EACLA,QAASC,EADJ,EACIA,UACjBvC,EAAS,CAAEU,KAAM8B,IAAgBjC,KAAMkB,EAAIlB,KAAK,KAChDP,EAAS,CAAEU,KAAME,IAAcL,KAAMkB,EAAIlB,OACzCP,EAAS,CAAEU,KAAM+B,IAAclC,KAAM+B,IACrCtC,EAAS,CAAEU,KAAMK,IAAgBR,KAAMgC,IACnCxC,EAAKkC,QAAQjC,EAAS0C,YAAcvC,IACpCJ,EAAKoB,UAAUnB,EAASoB,YAAgBjB,OAE7CwB,OAAM,SAACC,GAAD,OAASC,YAAaD,EAAKgB,WAIlCR,EAAW,SAACC,GAChB,IAAMC,EAAqB,GACrBC,EAAuB,GAM7B,OALAF,EAAcL,KAAI,SAACa,GAAD,MACW,aAA3BA,EAAOC,KAAKC,MAAMC,KACdT,EAAUL,KAAKW,GACfP,EAAQJ,KAAKW,MAEZ,CAAEP,UAASC,e,iCC1DpB,wFAeanB,EAAkB,SAACrB,GAAD,OAAsB,SACnDC,EACAC,GAEA,IAAMG,EAAQH,IAAWI,KAAKkC,UAAUhC,KAAKC,MAC3C,SAACW,GAAD,OAAcA,EAASV,KAAOV,EAAKoB,YAEjCf,GACFJ,EAAS,CAAEU,KAAMuC,MACjBjD,EAAS,CAAEU,KAAMwC,IAAkB3C,KAAMH,KAChCL,EAAKG,MACdF,EAASF,YAAaC,IACbA,EAAKkB,OACdjB,EAASkB,YAAcnB,IACbK,IACVJ,EAAS,CAAEU,KAAMyC,MACjB7B,IAAIC,IAAJ,wBAAyBxB,EAAKoB,WAC3BK,MAAK,SAACC,GACLzB,EAAS,CAAEU,KAAMuC,MACjBjD,EAAS,CAAEU,KAAMwC,IAAkB3C,KAAMkB,EAAIlB,KAAK,KAClDP,EAAS,CAAEU,KAAMK,IAAgBR,KAAMkB,EAAIlB,UAE5CoB,OAAM,SAACC,GAAD,OAASC,YAAaD,EAAKwB,Y,iCCrCxC,gFAcaV,EAAgB,SAAC3C,GAAD,OAAsB,SACjDC,EACAC,GAEA,IAAMG,EAAQH,IAAWI,KAAKiC,QAAQ/B,KAAKC,MACzC,SAACyB,GAAD,OAAYA,EAAOxB,KAAOV,EAAKkC,UAG7B7B,EACFJ,EAAS,CAAEU,KAAM2C,IAAgB9C,KAAMH,IAC9BL,EAAKG,MACdF,EAASF,YAAaC,IACbA,EAAKkB,OACdjB,EAASkB,YAAcnB,IACbK,IACVJ,EAAS,CAAEU,KAAM4C,MACjBhC,IAAIC,IAAJ,wBAAyBxB,EAAKkC,SAC3BT,MAAK,SAACC,GACLzB,EAAS,CAAEU,KAAM2C,IAAgB9C,KAAMkB,EAAIlB,KAAK,KAChDP,EAAS,CAAEU,KAAM+B,IAAclC,KAAMkB,EAAIlB,UAE1CoB,OAAM,SAACC,GAAD,OAASC,YAAaD,EAAK2B,Y,iCCpCxC,8CAeIC,EAA2BC,cAAiB,SAAqBC,EAAOC,GAC1E,IAAIC,EAAUF,EAAME,QAChBC,EAAYH,EAAMG,UAClBC,EAAmBJ,EAAMK,UACzBC,OAAiC,IAArBF,EAA8B,MAAQA,EAClDG,EAAQC,YAAyBR,EAAO,CAAC,UAAW,YAAa,cAErE,OAAoBD,gBAAoBO,EAAWG,YAAS,CAC1DN,UAAWO,YAAKR,EAAQS,KAAMR,GAC9BF,IAAKA,GACJM,OAgCUK,gBAnDK,CAElBD,KAAM,CACJE,QAAS,GACT,eAAgB,CACdC,cAAe,MA8Ca,CAChCxB,KAAM,kBADOsB,CAEZd,I,iCC3DH,uDA2CIiB,EAA8BhB,cAAiB,SAAwBC,EAAOC,GAChF,IAAIe,EAAWhB,EAAMgB,SACjBd,EAAUF,EAAME,QAChBC,EAAYH,EAAMG,UAClBc,EAAwBjB,EAAMiB,sBAC9BV,EAAQC,YAAyBR,EAAO,CAAC,WAAY,UAAW,YAAa,0BAEjF,OAAoBD,gBAAoBmB,IAAYT,YAAS,CAC3DN,UAAWO,YAAKR,EAAQS,KAAMR,GAC9Bc,sBAAuBP,YAAKO,EAAuBf,EAAQiB,cAC3DlB,IAAKA,GACJM,GAAQS,EAAuBjB,gBAAoB,OAAQ,CAC5DI,UAAWD,EAAQkB,qBA8BRR,iBA9EK,SAAgBS,GAClC,MAAO,CAELV,KAAM,CACJW,QAAS,QACTC,UAAW,UACXC,MAAO,OACP,0BAA2B,CACzBC,QAASJ,EAAMK,QAAQC,OAAOC,cAEhC,iCAAkC,CAChCH,QAAS,MAKbN,aAAc,GAGdC,eAAgB,CACdS,SAAU,SACVC,cAAe,OACfC,SAAU,WACVC,IAAK,EACLC,MAAO,EACPC,OAAQ,EACRC,KAAM,EACNC,aAAc,UACdX,QAAS,EACTY,gBAAiB,eACjBC,WAAYjB,EAAMkB,YAAYC,OAAO,UAAW,CAC9CC,SAAUpB,EAAMkB,YAAYE,SAASC,YA+CX,CAChCpD,KAAM,qBADOsB,CAEZG,I,iCCvFH,8CA2BI4B,EAAmB,CAAC,QAAS,QAAS,UAAW,SAAU,OAC3DC,EAAyB7C,cAAiB,SAAmBC,EAAOC,GACtE,IAAIe,EAAWhB,EAAMgB,SACjBd,EAAUF,EAAME,QAChBC,EAAYH,EAAMG,UAClBC,EAAmBJ,EAAMK,UACzBC,OAAiC,IAArBF,EAA8B,MAAQA,EAClDyC,EAAQ7C,EAAM6C,MACdC,EAAM9C,EAAM8C,IACZC,EAAQ/C,EAAM+C,MACdxC,EAAQC,YAAyBR,EAAO,CAAC,WAAY,UAAW,YAAa,YAAa,QAAS,MAAO,UAE1GgD,GAA4D,IAAzCL,EAAiBM,QAAQ3C,GAC5C4C,GAAiBF,GAAoBH,EAAQpC,YAAS,CACxD0C,gBAAiB,QAASC,OAAOP,EAAO,OACvCE,GAASA,EACZ,OAAoBhD,gBAAoBO,EAAWG,YAAS,CAC1DN,UAAWO,YAAKR,EAAQS,KAAMR,EAAW6C,GAAoB9C,EAAQmD,OAA6C,IAAtC,cAAcJ,QAAQ3C,IAAqBJ,EAAQoD,KAC/HrD,IAAKA,EACL8C,MAAOG,EACPJ,IAAKE,EAAmBH,GAASC,OAAMS,GACtChD,GAAQS,MAyDEJ,gBAlGK,CAElBD,KAAM,CACJW,QAAS,QACTkC,eAAgB,QAChBC,iBAAkB,YAClBC,mBAAoB,UAItBL,MAAO,CACL7B,MAAO,QAIT8B,IAAK,CAEHK,UAAW,UAiFmB,CAChCrE,KAAM,gBADOsB,CAEZgC,I,0MCpFCgB,EAA8B7D,cAAiB,SAAwBC,EAAOC,GAChF,IAAIC,EAAUF,EAAME,QAChBC,EAAYH,EAAMG,UAClBI,EAAQC,YAAyBR,EAAO,CAAC,UAAW,cAEpD6D,EAAU9D,aAAiB+D,KAC/B,OAAoB/D,gBAAoB,MAAOU,YAAS,CACtDN,UAAWO,YAAKR,EAAQS,KAAMR,EAAkC,eAAvB0D,EAAQE,YAA+B7D,EAAQ8D,qBACxF/D,IAAKA,GACJM,OAwBUK,cAjDK,CAElBD,KAAM,CACJsD,SAAU,GACVC,WAAY,GAIdF,oBAAqB,CACnBG,UAAW,IAwCmB,CAChC7E,KAAM,qBADOsB,CAEZgD,G,0HCzCGQ,EAAYC,aAAW,SAAChD,GAAD,OAC3BiD,YAAa,CACX3D,KAAM,CACJa,MAAO,IACP+C,OAAQ,IACRC,OAAQnD,EAAMoD,QAAQ,IAExBC,WAAY,CACVC,eAAgB,gBAChBH,OAAQ,WAEVI,QAAS,CACPC,UAAW,KAEbC,UAAW,CACT/C,SAAU,WACVgD,OAAQ,UACRP,OAAQnD,EAAMoD,QAAQ,GACtBpC,gBAAiB,SAEnB2C,SAAU,CACRjD,SAAU,WACVE,MAAO,EACP8C,OAAQ,UACRP,OAAQnD,EAAMoD,QAAQ,SAYfQ,EAA8B,SAAC,GAKrC,IAJLC,EAII,EAJJA,MACAlI,EAGI,EAHJA,KACAmI,EAEI,EAFJA,WACA9I,EACI,EADJA,KAEM6D,EAAUkE,IACRgB,EAAiCD,EAAjCC,MAAOrI,EAA0BoI,EAA1BpI,GAAIsI,EAAsBF,EAAtBE,WAAYC,EAAUH,EAAVG,MAO/B,OACE,kBAACC,EAAA,EAAD,CAAMpF,UAAWD,EAAQS,MACvB,kBAACI,EAAA,EAAD,CAAgByE,QAPC,SACnBC,GAEAC,IAAMpJ,SAASkC,YAAKnC,EAAO,IAAMW,EAAOD,MAKpC,kBAAC4I,EAAA,EAAD,CAAMC,MAAOV,EAAQ,EAAG/E,UAAWD,EAAQ4E,YAC3C,kBAACa,EAAA,EAAD,CAAMC,MAAON,EAAOnF,UAAWD,EAAQ8E,SAAUa,MAAM,cACvD,kBAACjD,EAAA,EAAD,CACEvC,UAAU,MACVyF,IAAKV,EACLb,OAAO,MACP1B,MAAOkD,YAAiBV,GACxBD,MAAOA,IAET,kBAACtF,EAAA,EAAD,CAAaK,UAAWD,EAAQ0E,SAC9B,kBAACoB,EAAA,EAAD,CAAYC,cAAY,EAACC,QAAQ,QAAQ7F,UAAU,MAChD+E,OAeAe,EAAwC,SAAC,GAK/C,IAJLC,EAII,EAJJA,aACAlB,EAGI,EAHJA,MACAlI,EAEI,EAFJA,KACAX,EACI,EADJA,KAEM6D,EAAUkE,IACRgB,EAAkCgB,EAAlChB,MAAOrI,EAA2BqJ,EAA3BrJ,GAAIsJ,EAAuBD,EAAvBC,aAAcjH,EAASgH,EAAThH,KAOjC,OACE,kBAACmG,EAAA,EAAD,CAAMpF,UAAWD,EAAQS,MACvB,kBAACI,EAAA,EAAD,CAAgByE,QAPC,SACnBC,GAEAC,IAAMpJ,SAASkC,YAAKnC,EAAO,IAAMW,EAAOD,MAKpC,kBAAC4I,EAAA,EAAD,CAAMC,MAAOV,EAAQ,EAAG/E,UAAWD,EAAQ4E,YAC3C,kBAACa,EAAA,EAAD,CACEC,MAAOxG,EAAKkG,MAAMhG,KAClBa,UAAWD,EAAQ8E,SACnBa,MAAM,cAER,kBAACjD,EAAA,EAAD,CACEvC,UAAU,MACVyF,IAAKV,EACLb,OAAO,MACP1B,MAAOkD,YAAiBM,GACxBjB,MAAOA,IAET,kBAACtF,EAAA,EAAD,CAAaK,UAAWD,EAAQ0E,SAC9B,kBAACoB,EAAA,EAAD,CAAYC,cAAY,EAACC,QAAQ,QAAQ7F,UAAU,MAChD+E,O,QC3EPkB,E,kLAEF,IAAMjK,EAAOkK,YAAWC,KAAKxG,MAAMyG,UAC/BpK,EAAKG,OAAOgK,KAAKxG,MAAM5D,aAAaC,K,+BAGhC,IAAD,EAC6CmK,KAAKxG,MAAjDE,EADD,EACCA,QAASrD,EADV,EACUA,KAAM6J,EADhB,EACgBA,QAASC,EADzB,EACyBA,MAAOF,EADhC,EACgCA,SACnCG,EAAU,EACd,OACE,kBAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,SAAS5G,UAAWD,EAAQS,MACjD+F,EACC,kBAAC,IAAD,MACE7J,EACFA,EAAKO,aAAakB,KAAI,SAAC9B,EAAOwK,GAAR,aACpB,kBAACC,EAAA,EAAD,CAAMC,IAAKF,GACRxK,EAAMiB,UACL,oCACE,kBAAC0J,EAAA,EAAD,KACE,kBAAC,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACzB,EAAA,EAAD,CAAMC,QAASgB,EAASf,MAAM,gBAGlC,kBAACwB,EAAA,EAAD,CACEC,QAASC,IAAOX,GAChBY,UAAWhL,EAAMiL,wBAGrB,kBAACC,EAAA,EAAD,CAASxB,QAAQ,QAAQ7F,UAAU,OACnC,kBAACwG,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,UACrBvK,EAAMiB,SAASa,KAAI,SAACqJ,EAAWC,GAAZ,OAClB,kBAAC,EAAD,CACEV,IAAKU,EACL1C,MAAO0C,EACP5K,KAAM,YACNX,KAAMoK,EACNL,aAAcuB,SAMvBnL,EAAMe,QACL,oCACE,kBAAC4J,EAAA,EAAD,KACE,kBAAC,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACzB,EAAA,EAAD,CAAMC,QAASgB,EAASf,MAAM,gBAGlC,kBAACwB,EAAA,EAAD,CACEC,QAASC,IAAOX,GAChBY,UAAWhL,EAAMqL,sBAGrB,kBAACH,EAAA,EAAD,CAASxB,QAAQ,QAAQ7F,UAAU,OACnC,kBAACwG,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,UAAxB,UACGvK,EAAMe,cADT,aACG,EAAce,KAAI,SAACqJ,EAAWC,GAAZ,OACjB,kBAAC,EAAD,CACEV,IAAKU,EACL1C,MAAO0C,EACP5K,KAAM,UACNX,KAAMoK,EACNtB,WAAYwC,aAS1B,kBAAC3B,EAAA,EAAD,CAAY3F,UAAU,MAAMF,UAAWD,EAAQ4H,YAC5CnB,Q,GA1EOrG,aAkGLyH,uBAZS,SAACC,EAAiBC,GAAlB,oBACtBxB,SAAUuB,EAAME,OAAOC,SAAS1B,SAChCvG,QAAS+H,EAAS/H,SACf8H,EAAMI,OAAO5L,UAGS,SACzBF,GADyB,MAEF,CACvBF,aAAciM,YAAmBjM,IAAcE,MAGlCyL,CAGbnH,aAhIgB,SAACS,GAAD,aAChBiD,YAAa,CACX3D,MAAI,GACFa,MAAO,OACPqD,UAAW,uBAFT,cAGDxD,EAAMiH,YAAYC,KAAK,MAAQ,CAC9B1D,UAAW,sBACXhE,QAASQ,EAAMoD,QAAQ,KALvB,wBAOOpD,EAAMoD,QAAQ,IAPrB,wBAQO,QARP,8BASa,UATb,GAWJqD,WAAY,CACVtD,OAAQ,YAkHZ5D,CAAsB0F","file":"static/js/29.993fcb29.chunk.js","sourcesContent":["import { ThunkDispatch } from \"redux-thunk\";\r\nimport {\r\n  SAVE_GUIDES,\r\n  FAILURE_GUIDE,\r\n  REQUEST_GUIDE,\r\n  SUCCESS_GUIDE,\r\n  GuideSelect,\r\n} from \"../_types/guide.types\";\r\nimport { AppState } from \"../_types\";\r\nimport { API } from \"../_helpers/api\";\r\nimport { AppActions } from \"../_types\";\r\nimport { requestCourse } from \"./course.actions\";\r\nimport { ILesson } from \"../_types/lesson.types\";\r\nimport { PathFinder } from \"../_helpers/constants\";\r\nimport { requestExercise } from \"./exercise.actions\";\r\nimport { SAVE_EXERCISES } from \"../_types/exercise.types\";\r\nimport { ICourse, SAVE_COURSES } from \"../_types/course.types\";\r\nimport { errorHandler } from \"../components/Layout/SnackBar/alert\";\r\n\r\nexport const requestGuide = (path: PathFinder) => (\r\n  dispatch: ThunkDispatch<AppState, undefined, AppActions>,\r\n  getState: () => AppState\r\n) => {\r\n  const { guide, ...newPath } = path;\r\n  const found = getState().bank.guides.data.find(\r\n    (guide) => guide.id === path.guide\r\n  );\r\n  if (found) {\r\n    dispatch({ type: SUCCESS_GUIDE, data: found });\r\n    dispatch({ type: SAVE_COURSES, data: addCourses(found.guide_select) });\r\n    dispatch({ type: SAVE_EXERCISES, data: addExercises(found.guide_select) });\r\n    if (path.course) dispatch(requestCourse(newPath));\r\n    if (path.exercise) dispatch(requestExercise(newPath));\r\n  } else {\r\n    dispatch({ type: REQUEST_GUIDE });\r\n    API.get(`/lesson/v2/guide?id=${path.guide}`)\r\n      .then((res) => {\r\n        dispatch({ type: SUCCESS_GUIDE, data: res.data[0] });\r\n        dispatch({ type: SAVE_GUIDES, data: res.data });\r\n        dispatch({\r\n          type: SAVE_COURSES,\r\n          data: addCourses(res.data[0].guide_select),\r\n        });\r\n        dispatch({\r\n          type: SAVE_EXERCISES,\r\n          data: addExercises(res.data[0].guide_select),\r\n        });\r\n        if (path.course) dispatch(requestCourse(newPath));\r\n        if (path.exercise) dispatch(requestExercise(newPath));\r\n      })\r\n      .catch((err) => errorHandler(err, FAILURE_GUIDE));\r\n  }\r\n};\r\n\r\nconst addCourses = (guide_select: GuideSelect[]) => {\r\n  const added: ICourse[] = [];\r\n  guide_select.map((course) =>\r\n    course.course?.map((lesson) => added.push(lesson))\r\n  );\r\n  return added;\r\n};\r\nconst addExercises = (guide_select: GuideSelect[]) => {\r\n  const added: ILesson[] = [];\r\n  guide_select.map((course) =>\r\n    course.exercise?.map((exercise) => added.push(exercise))\r\n  );\r\n  return added;\r\n};\r\n","import { ThunkDispatch } from \"redux-thunk\";\r\nimport {\r\n  SAVE_COURSES,\r\n  FAILURE_COURSE,\r\n  REQUEST_COURSE,\r\n  SUCCESS_COURSE,\r\n} from \"../_types/course.types\";\r\nimport { AppState } from \"../_types\";\r\nimport { API } from \"../_helpers/api\";\r\nimport { AppActions } from \"../_types\";\r\nimport { requestGuide } from \"./guide.actions\";\r\nimport { requestLesson } from \"./lesson.actions\";\r\nimport { PathFinder } from \"../_helpers/constants\";\r\nimport { requestExercise } from \"./exercise.actions\";\r\nimport { SAVE_EXERCISES } from \"../_types/exercise.types\";\r\nimport { ILesson, SAVE_LESSONS } from \"../_types/lesson.types\";\r\nimport { errorHandler } from \"../components/Layout/SnackBar/alert\";\r\n\r\nexport const requestCourse = (path: PathFinder) => (\r\n  dispatch: ThunkDispatch<AppState, undefined, AppActions>,\r\n  getState: () => AppState\r\n) => {\r\n  const found = getState().bank.courses.data.find(\r\n    (course) => course.id === path.course\r\n  );\r\n  const { course, ...newPath } = path;\r\n  if (found) {\r\n    const { lessons, exercises } = Compiler(found.course_select);\r\n    dispatch({ type: SUCCESS_COURSE, data: found });\r\n    dispatch({ type: SAVE_LESSONS, data: lessons });\r\n    dispatch({ type: SAVE_EXERCISES, data: exercises });\r\n    if (path.lesson) dispatch(requestLesson(newPath));\r\n    if (path.exercise) dispatch(requestExercise(newPath));\r\n  } else if (path.guide) {\r\n    dispatch(requestGuide(path));\r\n  } else if (!found) {\r\n    dispatch({ type: REQUEST_COURSE });\r\n    API.get(`/lesson/v2/course?id=${path.course}`)\r\n      .then((res) => {\r\n        const { lessons, exercises } = Compiler(res.data[0].course_select);\r\n        dispatch({ type: SUCCESS_COURSE, data: res.data[0] });\r\n        dispatch({ type: SAVE_COURSES, data: res.data });\r\n        dispatch({ type: SAVE_LESSONS, data: lessons });\r\n        dispatch({ type: SAVE_EXERCISES, data: exercises });\r\n        if (path.lesson) dispatch(requestLesson(newPath));\r\n        if (path.exercise) dispatch(requestExercise(newPath));\r\n      })\r\n      .catch((err) => errorHandler(err, FAILURE_COURSE));\r\n  }\r\n};\r\n\r\nconst Compiler = (course_select: ILesson[]) => {\r\n  const lessons: ILesson[] = [];\r\n  const exercises: ILesson[] = [];\r\n  course_select.map((select) =>\r\n    select.info.genre.name === \"Exercise\"\r\n      ? exercises.push(select)\r\n      : lessons.push(select)\r\n  );\r\n  return { lessons, exercises };\r\n};\r\n","import { ThunkDispatch } from \"redux-thunk\";\r\nimport {\r\n  FAILURE_EXERCISE,\r\n  REQUEST_EXERCISE,\r\n  SUCCESS_EXERCISE,\r\n  SAVE_EXERCISES,\r\n} from \"../_types/exercise.types\";\r\nimport { AppState } from \"../_types\";\r\nimport { API } from \"../_helpers/api\";\r\nimport { AppActions } from \"../_types\";\r\nimport { requestGuide } from \"./guide.actions\";\r\nimport { requestCourse } from \"./course.actions\";\r\nimport { PathFinder } from \"../_helpers/constants\";\r\nimport { ENTER_NOTEMODE } from \"../_types/player.types\";\r\nimport { errorHandler } from \"../components/Layout/SnackBar/alert\";\r\n\r\nexport const requestExercise = (path: PathFinder) => (\r\n  dispatch: ThunkDispatch<AppState, undefined, AppActions>,\r\n  getState: () => AppState\r\n) => {\r\n  const found = getState().bank.exercises.data.find(\r\n    (exercise) => exercise.id === path.exercise\r\n  );\r\n  if (found) {\r\n    dispatch({ type: ENTER_NOTEMODE });\r\n    dispatch({ type: SUCCESS_EXERCISE, data: found });\r\n  } else if (path.guide) {\r\n    dispatch(requestGuide(path));\r\n  } else if (path.course) {\r\n    dispatch(requestCourse(path));\r\n  } else if (!found) {\r\n    dispatch({ type: REQUEST_EXERCISE });\r\n    API.get(`/lesson/v2?id=${path.exercise}`)\r\n      .then((res) => {\r\n        dispatch({ type: ENTER_NOTEMODE });\r\n        dispatch({ type: SUCCESS_EXERCISE, data: res.data[0] });\r\n        dispatch({ type: SAVE_EXERCISES, data: res.data });\r\n      })\r\n      .catch((err) => errorHandler(err, FAILURE_EXERCISE));\r\n  }\r\n};\r\n","import { ThunkDispatch } from \"redux-thunk\";\r\nimport {\r\n  FAILURE_LESSON,\r\n  REQUEST_LESSON,\r\n  SUCCESS_LESSON,\r\n  SAVE_LESSONS,\r\n} from \"../_types/lesson.types\";\r\nimport { API } from \"../_helpers/api\";\r\nimport { AppState } from \"../_types\";\r\nimport { AppActions } from \"../_types\";\r\nimport { requestGuide } from \"./guide.actions\";\r\nimport { requestCourse } from \"./course.actions\";\r\nimport { PathFinder } from \"../_helpers/constants\";\r\nimport { errorHandler } from \"../components/Layout/SnackBar/alert\";\r\n\r\nexport const requestLesson = (path: PathFinder) => (\r\n  dispatch: ThunkDispatch<AppState, undefined, AppActions>,\r\n  getState: () => AppState\r\n) => {\r\n  const found = getState().bank.lessons.data.find(\r\n    (lesson) => lesson.id === path.lesson\r\n  );\r\n\r\n  if (found) {\r\n    dispatch({ type: SUCCESS_LESSON, data: found });\r\n  } else if (path.guide) {\r\n    dispatch(requestGuide(path));\r\n  } else if (path.course) {\r\n    dispatch(requestCourse(path));\r\n  } else if (!found) {\r\n    dispatch({ type: REQUEST_LESSON });\r\n    API.get(`/lesson/v2?id=${path.lesson}`)\r\n      .then((res) => {\r\n        dispatch({ type: SUCCESS_LESSON, data: res.data[0] });\r\n        dispatch({ type: SAVE_LESSONS, data: res.data });\r\n      })\r\n      .catch((err) => errorHandler(err, FAILURE_LESSON));\r\n  }\r\n};\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  }\n};\nvar CardContent = /*#__PURE__*/React.forwardRef(function CardContent(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardContent'\n})(CardContent);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport ButtonBase from '../ButtonBase';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'block',\n      textAlign: 'inherit',\n      width: '100%',\n      '&:hover $focusHighlight': {\n        opacity: theme.palette.action.hoverOpacity\n      },\n      '&$focusVisible $focusHighlight': {\n        opacity: 0.12\n      }\n    },\n\n    /* Pseudo-class applied to the ButtonBase root element if the action area is keyboard focused. */\n    focusVisible: {},\n\n    /* Styles applied to the overlay that covers the action area when it is keyboard focused. */\n    focusHighlight: {\n      overflow: 'hidden',\n      pointerEvents: 'none',\n      position: 'absolute',\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0,\n      borderRadius: 'inherit',\n      opacity: 0,\n      backgroundColor: 'currentcolor',\n      transition: theme.transitions.create('opacity', {\n        duration: theme.transitions.duration.short\n      })\n    }\n  };\n};\nvar CardActionArea = /*#__PURE__*/React.forwardRef(function CardActionArea(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      focusVisibleClassName = props.focusVisibleClassName,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"focusVisibleClassName\"]);\n\n  return /*#__PURE__*/React.createElement(ButtonBase, _extends({\n    className: clsx(classes.root, className),\n    focusVisibleClassName: clsx(focusVisibleClassName, classes.focusVisible),\n    ref: ref\n  }, other), children, /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.focusHighlight\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardActionArea.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  focusVisibleClassName: PropTypes.string\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardActionArea'\n})(CardActionArea);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport { chainPropTypes } from '@material-ui/utils';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'block',\n    backgroundSize: 'cover',\n    backgroundRepeat: 'no-repeat',\n    backgroundPosition: 'center'\n  },\n\n  /* Styles applied to the root element if `component=\"video, audio, picture, iframe, or img\"`. */\n  media: {\n    width: '100%'\n  },\n\n  /* Styles applied to the root element if `component=\"picture or img\"`. */\n  img: {\n    // ⚠️ object-fit is not supported by IE 11.\n    objectFit: 'cover'\n  }\n};\nvar MEDIA_COMPONENTS = ['video', 'audio', 'picture', 'iframe', 'img'];\nvar CardMedia = /*#__PURE__*/React.forwardRef(function CardMedia(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      image = props.image,\n      src = props.src,\n      style = props.style,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"component\", \"image\", \"src\", \"style\"]);\n\n  var isMediaComponent = MEDIA_COMPONENTS.indexOf(Component) !== -1;\n  var composedStyle = !isMediaComponent && image ? _extends({\n    backgroundImage: \"url(\\\"\".concat(image, \"\\\")\")\n  }, style) : style;\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, isMediaComponent && classes.media, \"picture img\".indexOf(Component) !== -1 && classes.img),\n    ref: ref,\n    style: composedStyle,\n    src: isMediaComponent ? image || src : undefined\n  }, other), children);\n});\nprocess.env.NODE_ENV !== \"production\" ? CardMedia.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: chainPropTypes(PropTypes.node, function (props) {\n    if (!props.children && !props.image && !props.src && !props.component) {\n      return new Error('Material-UI: Either `children`, `image`, `src` or `component` prop must be specified.');\n    }\n\n    return null;\n  }),\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Image to be displayed as a background image.\n   * Either `image` or `src` prop must be specified.\n   * Note that caller must specify height otherwise the image will not be visible.\n   */\n  image: PropTypes.string,\n\n  /**\n   * An alias for `image` property.\n   * Available only with media components.\n   * Media components: `video`, `audio`, `picture`, `iframe`, `img`.\n   */\n  src: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  style: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardMedia'\n})(CardMedia);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport ListContext from '../List/ListContext';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    minWidth: 56,\n    flexShrink: 0\n  },\n\n  /* Styles applied to the root element when the parent `ListItem` uses `alignItems=\"flex-start\"`. */\n  alignItemsFlexStart: {\n    marginTop: 8\n  }\n};\n/**\n * A simple wrapper to apply `List` styles to an `Avatar`.\n */\n\nvar ListItemAvatar = /*#__PURE__*/React.forwardRef(function ListItemAvatar(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\"]);\n\n  var context = React.useContext(ListContext);\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, context.alignItems === 'flex-start' && classes.alignItemsFlexStart),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItemAvatar.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component – normally `Avatar`.\n   */\n  children: PropTypes.element.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiListItemAvatar'\n})(ListItemAvatar);","import React from \"react\";\r\nimport { push } from \"connected-react-router\";\r\nimport {\r\n  Card,\r\n  CardMedia,\r\n  Typography,\r\n  CardContent,\r\n  CardActionArea,\r\n  Chip,\r\n} from \"@material-ui/core\";\r\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\r\n\r\nimport { store } from \"../../../_store/store.config\";\r\nimport { thumbnailsFinder } from \"../../../_helpers/constants\";\r\nimport { ILesson } from \"../../../_types/lesson.types\";\r\nimport { ICourse } from \"../../../_types/course.types\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      width: 300,\r\n      height: 260,\r\n      margin: theme.spacing(1),\r\n    },\r\n    cardAction: {\r\n      justifyContent: \"space-between\",\r\n      margin: \"inherit\",\r\n    },\r\n    content: {\r\n      minHeight: 130,\r\n    },\r\n    rightChip: {\r\n      position: \"absolute\",\r\n      cursor: \"pointer\",\r\n      margin: theme.spacing(1),\r\n      backgroundColor: \"green\",\r\n    },\r\n    leftChip: {\r\n      position: \"absolute\",\r\n      right: 0,\r\n      cursor: \"pointer\",\r\n      margin: theme.spacing(1),\r\n    },\r\n  })\r\n);\r\n\r\ntype Props = {\r\n  courseItem: ICourse;\r\n  index: number;\r\n  type: string;\r\n  path: string;\r\n};\r\n\r\nexport const CourseItem: React.FC<Props> = ({\r\n  index,\r\n  type,\r\n  courseItem,\r\n  path,\r\n}) => {\r\n  const classes = useStyles();\r\n  const { title, id, thumbnails, grade } = courseItem;\r\n\r\n  const clickHandler = (\r\n    e: React.MouseEvent<HTMLButtonElement, MouseEvent>\r\n  ): void => {\r\n    store.dispatch(push(path + \"/\" + type + id));\r\n  };\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardActionArea onClick={clickHandler}>\r\n        <Chip label={index + 1} className={classes.rightChip} />\r\n        <Chip label={grade} className={classes.leftChip} color=\"secondary\" />\r\n        <CardMedia\r\n          component=\"img\"\r\n          alt={title}\r\n          height=\"130\"\r\n          image={thumbnailsFinder(thumbnails)}\r\n          title={title}\r\n        />\r\n        <CardContent className={classes.content}>\r\n          <Typography gutterBottom variant=\"body1\" component=\"h6\">\r\n            {title}\r\n          </Typography>\r\n        </CardContent>\r\n      </CardActionArea>\r\n    </Card>\r\n  );\r\n};\r\n\r\ntype ExerciseProps = {\r\n  exerciseItem: ILesson;\r\n  index: number;\r\n  type: string;\r\n  path: string;\r\n};\r\n\r\nexport const ExerciseItem: React.FC<ExerciseProps> = ({\r\n  exerciseItem,\r\n  index,\r\n  type,\r\n  path,\r\n}) => {\r\n  const classes = useStyles();\r\n  const { title, id, featured_img, info } = exerciseItem;\r\n\r\n  const clickHandler = (\r\n    e: React.MouseEvent<HTMLButtonElement, MouseEvent>\r\n  ): void => {\r\n    store.dispatch(push(path + \"/\" + type + id));\r\n  };\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardActionArea onClick={clickHandler}>\r\n        <Chip label={index + 1} className={classes.rightChip} />\r\n        <Chip\r\n          label={info.grade.name}\r\n          className={classes.leftChip}\r\n          color=\"secondary\"\r\n        />\r\n        <CardMedia\r\n          component=\"img\"\r\n          alt={title}\r\n          height=\"130\"\r\n          image={thumbnailsFinder(featured_img)}\r\n          title={title}\r\n        />\r\n        <CardContent className={classes.content}>\r\n          <Typography gutterBottom variant=\"body1\" component=\"h6\">\r\n            {title}\r\n          </Typography>\r\n        </CardContent>\r\n      </CardActionArea>\r\n    </Card>\r\n  );\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { ThunkDispatch } from \"redux-thunk\";\r\nimport {\r\n  Grid,\r\n  createStyles,\r\n  Theme,\r\n  Typography,\r\n  WithStyles,\r\n  withStyles,\r\n  Divider,\r\n  Chip,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  ListItemAvatar,\r\n  Avatar,\r\n} from \"@material-ui/core\";\r\nimport { AppActions, AppState } from \"../../../_types\";\r\nimport { IGuide } from \"../../../_types/guide.types\";\r\nimport { pathFinder, PathFinder, season } from \"../../../_helpers/constants\";\r\nimport { requestGuide } from \"../../../_actions/guide.actions\";\r\nimport { CourseItem, ExerciseItem } from \"./GuideItems\";\r\nimport { LoadingCircle } from \"../../Layout/Loadings\";\r\n\r\nconst useStyles = (theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      width: \"99vw\",\r\n      minHeight: \"calc(100vh - 128px)\",\r\n      [theme.breakpoints.down(\"xs\")]: {\r\n        minHeight: \"calc(100vh - 112px)\",\r\n        padding: theme.spacing(1),\r\n      },\r\n      padding: theme.spacing(2),\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n    },\r\n    autoMargin: {\r\n      margin: \"auto\",\r\n    },\r\n  });\r\n\r\ninterface GuideProps extends WithStyles<typeof useStyles> {\r\n  data?: IGuide;\r\n  loading: boolean;\r\n  error: string;\r\n  pathname: string;\r\n}\r\n\r\ntype Props = GuideProps & LinkDispatchProps;\r\n\r\nclass Guide extends Component<Props> {\r\n  componentDidMount() {\r\n    const path = pathFinder(this.props.pathname);\r\n    if (path.guide) this.props.requestGuide(path);\r\n  }\r\n\r\n  render() {\r\n    const { classes, data, loading, error, pathname } = this.props;\r\n    let counter = 0;\r\n    return (\r\n      <Grid container justify=\"center\" className={classes.root}>\r\n        {loading ? (\r\n          <LoadingCircle />\r\n        ) : data ? (\r\n          data.guide_select.map((guide, k) => (\r\n            <List key={k}>\r\n              {guide.exercise && (\r\n                <>\r\n                  <ListItem>\r\n                    <ListItemAvatar>\r\n                      <Avatar>\r\n                        <Chip label={++counter} color=\"secondary\" />\r\n                      </Avatar>\r\n                    </ListItemAvatar>\r\n                    <ListItemText\r\n                      primary={season[counter]}\r\n                      secondary={guide.exercise_description}\r\n                    />\r\n                  </ListItem>\r\n                  <Divider variant=\"inset\" component=\"li\" />\r\n                  <Grid container justify=\"center\">\r\n                    {guide.exercise.map((guideItem, i) => (\r\n                      <ExerciseItem\r\n                        key={i}\r\n                        index={i}\r\n                        type={\"exercise=\"}\r\n                        path={pathname}\r\n                        exerciseItem={guideItem}\r\n                      />\r\n                    ))}\r\n                  </Grid>\r\n                </>\r\n              )}\r\n              {guide.course && (\r\n                <>\r\n                  <ListItem>\r\n                    <ListItemAvatar>\r\n                      <Avatar>\r\n                        <Chip label={++counter} color=\"secondary\" />\r\n                      </Avatar>\r\n                    </ListItemAvatar>\r\n                    <ListItemText\r\n                      primary={season[counter]}\r\n                      secondary={guide.course_description}\r\n                    />\r\n                  </ListItem>\r\n                  <Divider variant=\"inset\" component=\"li\" />\r\n                  <Grid container justify=\"center\">\r\n                    {guide.course?.map((guideItem, i) => (\r\n                      <CourseItem\r\n                        key={i}\r\n                        index={i}\r\n                        type={\"course=\"}\r\n                        path={pathname}\r\n                        courseItem={guideItem}\r\n                      />\r\n                    ))}\r\n                  </Grid>\r\n                </>\r\n              )}\r\n            </List>\r\n          ))\r\n        ) : (\r\n          <Typography component=\"div\" className={classes.autoMargin}>\r\n            {error}\r\n          </Typography>\r\n        )}\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\ninterface LinkDispatchProps {\r\n  requestGuide: (path: PathFinder) => void;\r\n}\r\n\r\nconst mapStateToProps = (state: AppState, ownProps: Props): GuideProps => ({\r\n  pathname: state.router.location.pathname,\r\n  classes: ownProps.classes,\r\n  ...state.single.guide,\r\n});\r\n\r\nconst mapDispatchToProps = (\r\n  dispatch: ThunkDispatch<any, any, AppActions>\r\n): LinkDispatchProps => ({\r\n  requestGuide: bindActionCreators(requestGuide, dispatch),\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withStyles(useStyles)(Guide));\r\n"],"sourceRoot":""}