{"version":3,"sources":["components/UserPages/Profile/ImageInput.tsx","components/UserPages/Profile/index.tsx"],"names":["ImageInput","props","fileUpload","showFileUpload","current","click","handleImageChange","e","preventDefault","reader","FileReader","files","target","length","file","onloadend","setState","imagePreviewUrl","result","readAsDataURL","setFieldValue","field","name","state","undefined","React","createRef","this","errorMessage","classes","image","avatarStyle","clsx","bigAvatar","whiteBack","primaryBack","errorBack","className","container","hidden","id","type","onChange","ref","accept","Badge","overlap","anchorOrigin","vertical","horizontal","badgeContent","primaryColor","onClick","Avatar","alt","src","ErrorOutline","style","fontSize","AccountCircle","Typography","variant","color","Component","withStyles","theme","createStyles","display","margin","spacing","textAlign","width","height","borderColor","palette","secondary","main","borderStyle","cursor","background","error","phoneRegExp","Profile","loading","getProfile","data","image_select","first_name","last_name","nickname","mobile","initData","Container","maxWidth","root","Grid","item","lg","md","xl","xs","component","initialValues","validationSchema","Yup","shape","test","Math","floor","FILE_SIZE","value","size","max","required","matches","onSubmit","resetForm","val","updateProfile","values","errors","Box","mb","align","TextField","fullWidth","label","LinearProgress","my","Button","disabled","connect","ownProps","user","auth","dispatch","bindActionCreators","profileRequest","minHeight","breakpoints","down","padding","flexDirection","justifyContent","form"],"mappings":"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","file":"static/js/42.9602fd3a.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport clsx from \"clsx\";\r\n\r\nimport withStyles, { WithStyles } from \"@material-ui/core/styles/withStyles\";\r\nimport {\r\n  createStyles,\r\n  Theme,\r\n  Typography,\r\n  Avatar,\r\n  Badge,\r\n} from \"@material-ui/core\";\r\nimport AddAPhotoIcon from \"@material-ui/icons/AddAPhoto\";\r\nimport { AccountCircle, ErrorOutline } from \"@material-ui/icons\";\r\n\r\nconst useStyles = (theme: Theme) =>\r\n  createStyles({\r\n    hidden: { display: \"none\" },\r\n\r\n    container: {\r\n      margin: theme.spacing(2, 0),\r\n      textAlign: \"center\",\r\n    },\r\n    bigAvatar: {\r\n      margin: \"auto\",\r\n      width: 128,\r\n      height: 128,\r\n      borderColor: theme.palette.secondary.main,\r\n      borderStyle: \"solid\",\r\n      cursor: \"pointer\",\r\n    },\r\n    primaryBack: {\r\n      background: theme.palette.secondary.main,\r\n    },\r\n    primaryColor: {\r\n      color: theme.palette.secondary.main,\r\n      cursor: \"pointer\",\r\n    },\r\n    whiteBack: {\r\n      background: \"white\",\r\n    },\r\n    errorBack: { background: theme.palette.error.main },\r\n  });\r\n\r\ninterface Props extends WithStyles<typeof useStyles> {\r\n  errorMessage: string;\r\n  title: string;\r\n  field: any;\r\n  image: string;\r\n  setFieldValue: (name: string, file: File) => void;\r\n}\r\ninterface State {\r\n  file?: any;\r\n  imagePreviewUrl: any;\r\n}\r\nclass ImageInput extends Component<Props, State> {\r\n  fileUpload: React.RefObject<HTMLInputElement>;\r\n  constructor(props: Props) {\r\n    super(props);\r\n    this.state = {\r\n      file: undefined,\r\n      imagePreviewUrl: null,\r\n    };\r\n    this.fileUpload = React.createRef();\r\n  }\r\n\r\n  showFileUpload = () => {\r\n    this.fileUpload.current?.click();\r\n  };\r\n\r\n  handleImageChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    e.preventDefault();\r\n    let reader = new FileReader();\r\n    const files = e.target.files;\r\n    if (files?.length) {\r\n      const file = files[0];\r\n      reader.onloadend = () => {\r\n        this.setState({\r\n          file,\r\n          imagePreviewUrl: reader.result,\r\n        });\r\n      };\r\n      reader.readAsDataURL(file);\r\n      this.props.setFieldValue(this.props.field.name, file);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { errorMessage, classes, image } = this.props;\r\n    const { name } = this.props.field;\r\n    const { file, imagePreviewUrl } = this.state;\r\n\r\n    const avatarStyle = clsx(\r\n      classes.bigAvatar,\r\n      this.state.file ? [classes.whiteBack] : [classes.primaryBack],\r\n      { [classes.errorBack]: errorMessage }\r\n    );\r\n\r\n    return (\r\n      <div className={classes.container}>\r\n        <input\r\n          className={classes.hidden}\r\n          id={name}\r\n          name={name}\r\n          type=\"file\"\r\n          onChange={this.handleImageChange}\r\n          ref={this.fileUpload}\r\n          accept=\"image/png, image/jpeg\"\r\n        />\r\n        <Badge\r\n          overlap=\"circle\"\r\n          anchorOrigin={{\r\n            vertical: \"bottom\",\r\n            horizontal: \"left\",\r\n          }}\r\n          badgeContent={\r\n            <AddAPhotoIcon\r\n              className={classes.primaryColor}\r\n              onClick={this.showFileUpload}\r\n            />\r\n          }\r\n        >\r\n          <Avatar\r\n            className={avatarStyle}\r\n            onClick={this.showFileUpload}\r\n            alt=\"avatar\"\r\n            src={\r\n              errorMessage\r\n                ? undefined\r\n                : file\r\n                ? imagePreviewUrl\r\n                : image\r\n                ? image\r\n                : undefined\r\n            }\r\n          >\r\n            {errorMessage ? (\r\n              <ErrorOutline style={{ fontSize: 36 }} />\r\n            ) : (\r\n              <AccountCircle style={{ fontSize: 36 }} />\r\n            )}\r\n          </Avatar>\r\n        </Badge>\r\n\r\n        {errorMessage ? (\r\n          <Typography variant=\"caption\" color=\"error\">\r\n            {errorMessage}\r\n          </Typography>\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(useStyles)(ImageInput);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { ThunkDispatch } from \"redux-thunk\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Container,\r\n  createStyles,\r\n  Grid,\r\n  LinearProgress,\r\n  Theme,\r\n  Typography,\r\n  withStyles,\r\n  WithStyles,\r\n} from \"@material-ui/core\";\r\nimport * as Yup from \"yup\";\r\nimport { Field, Form, Formik } from \"formik\";\r\nimport { TextField } from \"formik-material-ui\";\r\nimport {\r\n  profileRequest,\r\n  updateProfile,\r\n} from \"../../../_actions/profile.actions\";\r\nimport { DefaultProfileState } from \"../../../_types/profile.types\";\r\nimport { DefaultUserState } from \"../../../_types/auth.types\";\r\nimport { AppActions } from \"../../../_types\";\r\nimport { AppState } from \"../../../_types\";\r\nimport ImageInput from \"./ImageInput\";\r\nimport { LoadingCircle } from \"../../Layout/Loadings\";\r\n\r\nconst phoneRegExp = /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/;\r\n\r\nconst useStyles = (theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      width: \"99vw\",\r\n      minHeight: \"calc(100vh - 64px)\",\r\n      [theme.breakpoints.down(\"xs\")]: {\r\n        minHeight: \"calc(100vh - 48px)\",\r\n        padding: theme.spacing(1),\r\n      },\r\n    },\r\n    container: {\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      justifyContent: \"space-between\",\r\n    },\r\n    form: {\r\n      margin: theme.spacing(2),\r\n      display: \"flex\",\r\n      justifyContent: \"space-between\",\r\n      \"& > div\": {\r\n        width: \"100%\",\r\n      },\r\n    },\r\n  });\r\n\r\ninterface ProfilePageProps extends WithStyles<typeof useStyles> {\r\n  auth: DefaultUserState;\r\n}\r\n\r\ntype Props = ProfilePageProps &\r\n  DefaultProfileState &\r\n  ReturnType<typeof mapDispatchToProps>;\r\n\r\nclass Profile extends Component<Props> {\r\n  componentDidMount() {\r\n    if (!this.props.loading) this.props.getProfile();\r\n  }\r\n  render() {\r\n    const { data, loading, classes } = this.props;\r\n    const FILE_SIZE = 160 * 1024;\r\n    if (!data) {\r\n      return <LoadingCircle />;\r\n    } else {\r\n      const { image_select, first_name, last_name, nickname, mobile } = data;\r\n      const initData = {\r\n        image_select,\r\n        first_name,\r\n        last_name,\r\n        nickname,\r\n        mobile: mobile ? mobile : \"\",\r\n      };\r\n      return (\r\n        <Container maxWidth={false} className={classes.root}>\r\n          <Grid container spacing={3}>\r\n            <Grid\r\n              item\r\n              lg={12}\r\n              md={12}\r\n              xl={12}\r\n              xs={12}\r\n              className={classes.container}\r\n            >\r\n              <Container component=\"main\" maxWidth=\"xs\">\r\n                <Formik\r\n                  initialValues={initData}\r\n                  validationSchema={Yup.object().shape({\r\n                    image_select: Yup.mixed().test(\r\n                      \"fileSize\",\r\n                      `File too large ,should be lower than ${Math.floor(\r\n                        FILE_SIZE / 1000\r\n                      )}kb`,\r\n                      (value) =>\r\n                        value && typeof value === \"object\"\r\n                          ? value.size <= FILE_SIZE\r\n                          : true\r\n                    ),\r\n                    first_name: Yup.string()\r\n                      .max(255)\r\n                      .required(\"First name is required\"),\r\n                    last_name: Yup.string()\r\n                      .max(255)\r\n                      .required(\"Last name is required\"),\r\n                    nickname: Yup.string()\r\n                      .max(255)\r\n                      .required(\"User name is required\"),\r\n                    mobile: Yup.string().matches(\r\n                      phoneRegExp,\r\n                      \"Phone number is not valid\"\r\n                    ),\r\n                  })}\r\n                  onSubmit={(e: typeof initData, { resetForm }) => {\r\n                    let val: any = e;\r\n                    if (typeof e.image_select === \"string\")\r\n                      val = { ...e, image_select: undefined };\r\n                    this.props.updateProfile({\r\n                      ...val,\r\n                    });\r\n                    resetForm({\r\n                      values: {\r\n                        ...e,\r\n                        image_select: data.image_select,\r\n                      },\r\n                    });\r\n                  }}\r\n                >\r\n                  {({ setFieldValue, initialValues, errors }) => (\r\n                    <Form>\r\n                      <Box mb={3}>\r\n                        <Field\r\n                          name=\"image_select\"\r\n                          component={ImageInput}\r\n                          image={initialValues.image_select}\r\n                          setFieldValue={setFieldValue}\r\n                          margin=\"normal\"\r\n                          errorMessage={\r\n                            errors[\"image_select\"]\r\n                              ? errors[\"image_select\"]\r\n                              : undefined\r\n                          }\r\n                        />\r\n                        <Typography\r\n                          color=\"textSecondary\"\r\n                          align=\"center\"\r\n                          variant=\"h5\"\r\n                        >\r\n                          Personal Information\r\n                        </Typography>\r\n                        <Field\r\n                          component={TextField}\r\n                          color=\"secondary\"\r\n                          fullWidth\r\n                          label=\"نام نمایشی\"\r\n                          margin=\"normal\"\r\n                          name=\"nickname\"\r\n                          variant=\"outlined\"\r\n                        />\r\n                        <Field\r\n                          component={TextField}\r\n                          color=\"secondary\"\r\n                          fullWidth\r\n                          label=\"نام\"\r\n                          margin=\"normal\"\r\n                          name=\"first_name\"\r\n                          variant=\"outlined\"\r\n                        />\r\n                        <Field\r\n                          component={TextField}\r\n                          color=\"secondary\"\r\n                          fullWidth\r\n                          label=\"نام خانوادگی\"\r\n                          margin=\"normal\"\r\n                          name=\"last_name\"\r\n                          variant=\"outlined\"\r\n                        />\r\n                        <Field\r\n                          component={TextField}\r\n                          color=\"secondary\"\r\n                          fullWidth\r\n                          label=\"موبایل\"\r\n                          margin=\"normal\"\r\n                          name=\"mobile\"\r\n                          type=\"mobile\"\r\n                          variant=\"outlined\"\r\n                        />\r\n                        {loading && <LinearProgress color=\"secondary\" />}\r\n                        <Box my={2}>\r\n                          <Button\r\n                            color=\"secondary\"\r\n                            disabled={loading}\r\n                            fullWidth\r\n                            size=\"large\"\r\n                            type=\"submit\"\r\n                            variant=\"contained\"\r\n                          >\r\n                            Save\r\n                          </Button>\r\n                        </Box>\r\n                      </Box>\r\n                    </Form>\r\n                  )}\r\n                </Formik>\r\n              </Container>\r\n            </Grid>\r\n          </Grid>\r\n        </Container>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (\r\n  state: AppState,\r\n  ownProps: Props\r\n): ProfilePageProps => {\r\n  return {\r\n    ...state.user,\r\n    auth: state.auth,\r\n    classes: ownProps.classes,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: ThunkDispatch<any, any, AppActions>) => ({\r\n  getProfile: bindActionCreators(profileRequest, dispatch),\r\n  updateProfile: bindActionCreators(updateProfile, dispatch),\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withStyles(useStyles)(Profile));\r\n"],"sourceRoot":""}