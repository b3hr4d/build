{"version":3,"sources":["components/UserPages/Dashboard/LatestSongs.js","components/UserPages/Dashboard/index.tsx"],"names":["useStyles1","makeStyles","theme","root","flexShrink","marginLeft","spacing","TablePaginationActions","props","classes","useTheme","count","page","rowsPerPage","onChangePage","className","IconButton","onClick","event","disabled","aria-label","direction","LastPage","FirstPage","KeyboardArrowRight","KeyboardArrowLeft","Math","ceil","max","useStyles2","table","minWidth","toolbar","flexFlow","justifyContent","breakpoints","only","LatestSongs","res","React","useState","setPage","setRowsPerPage","emptyRows","min","length","sel","dateChanger","d","t","date","time","Card","clsx","CardHeader","title","Divider","Box","Table","TableHead","TableRow","TableCell","TableBody","slice","map","row","key","UniqId","song","id","Link","to","color","component","RouterLink","name","Chip","label","progress","size","style","height","colSpan","TableFooter","TablePagination","rowsPerPageOptions","lower","value","low","average","high","higher","SelectProps","inputProps","native","newPage","onChangeRowsPerPage","parseInt","target","ActionsComponent","Dashboard","this","playtime","getPlayTimes","loading","Container","maxWidth","paddingTop","Grid","container","item","lg","md","xl","xs","Component","connect","state","ownProps","user","dispatch","bindActionCreators"],"mappings":"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","file":"static/js/41.17f295ff.chunk.js","sourcesContent":["import React from \"react\";\r\nimport clsx from \"clsx\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  Box,\r\n  Card,\r\n  CardHeader,\r\n  Chip,\r\n  Divider,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableFooter,\r\n  TableRow,\r\n  makeStyles,\r\n  Link,\r\n  useTheme,\r\n  IconButton,\r\n  TablePagination,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  KeyboardArrowLeft,\r\n  KeyboardArrowRight,\r\n  FirstPage,\r\n  LastPage,\r\n} from \"@material-ui/icons\";\r\nimport { UniqId } from \"../../../_helpers/constants\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\n\r\nconst useStyles1 = makeStyles((theme) => ({\r\n  root: {\r\n    flexShrink: 0,\r\n    marginLeft: theme.spacing(2.5),\r\n  },\r\n}));\r\n\r\nfunction TablePaginationActions(props) {\r\n  const classes = useStyles1();\r\n  const theme = useTheme();\r\n  const { count, page, rowsPerPage, onChangePage } = props;\r\n  const handleFirstPageButtonClick = (event) => {\r\n    onChangePage(event, 0);\r\n  };\r\n\r\n  const handleBackButtonClick = (event) => {\r\n    onChangePage(event, page - 1);\r\n  };\r\n\r\n  const handleNextButtonClick = (event) => {\r\n    onChangePage(event, page + 1);\r\n  };\r\n\r\n  const handleLastPageButtonClick = (event) => {\r\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <IconButton\r\n        onClick={handleFirstPageButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"first page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? <LastPage /> : <FirstPage />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleBackButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"previous page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? (\r\n          <KeyboardArrowRight />\r\n        ) : (\r\n          <KeyboardArrowLeft />\r\n        )}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleNextButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"next page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? (\r\n          <KeyboardArrowLeft />\r\n        ) : (\r\n          <KeyboardArrowRight />\r\n        )}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleLastPageButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"last page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? <FirstPage /> : <LastPage />}\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\nTablePaginationActions.propTypes = {\r\n  count: PropTypes.number.isRequired,\r\n  onChangePage: PropTypes.func.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  rowsPerPage: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles2 = makeStyles((theme) => ({\r\n  table: {\r\n    minWidth: 300,\r\n  },\r\n  toolbar: {\r\n    \"& div\": {\r\n      flexFlow: \"wrap\",\r\n      justifyContent: \"flex-end\",\r\n      [theme.breakpoints.only(\"xs\")]: {\r\n        justifyContent: \"space-around\",\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function LatestSongs({ res }) {\r\n  const classes = useStyles2();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  const emptyRows =\r\n    rowsPerPage - Math.min(rowsPerPage, res.length - page * rowsPerPage);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n  const pagination = {\r\n    lower: [{ label: \"همه\", value: -1 }],\r\n    low: [\r\n      { label: \"۵\", value: 5 },\r\n      { label: \"همه\", value: -1 },\r\n    ],\r\n    average: [\r\n      { label: \"۵\", value: 5 },\r\n      { label: \"۱۰\", value: 10 },\r\n      { label: \"همه\", value: -1 },\r\n    ],\r\n    high: [\r\n      { label: \"۵\", value: 5 },\r\n      { label: \"۱۰\", value: 10 },\r\n      { label: \"۲۵\", value: 25 },\r\n      { label: \"همه\", value: -1 },\r\n    ],\r\n    higher: [\r\n      { label: \"۵\", value: 5 },\r\n      { label: \"۱۰\", value: 10 },\r\n      { label: \"۲۵\", value: 25 },\r\n      { label: \"۵۰\", value: 50 },\r\n      { label: \"همه\", value: -1 },\r\n    ],\r\n  };\r\n  const sel =\r\n    res.length > 500\r\n      ? \"higher\"\r\n      : res.length >= 100\r\n      ? \"high\"\r\n      : res.length >= 30\r\n      ? \"average\"\r\n      : res.length > 5\r\n      ? \"low\"\r\n      : \"lower\";\r\n  const dateChanger = (d, t) => {\r\n    let date, time;\r\n    if (d) date = d;\r\n    if (t) time = t;\r\n    return date ? date : time;\r\n  };\r\n  return (\r\n    <Card className={clsx(classes.root)}>\r\n      <CardHeader title=\"آخرین آهنگ ها\" />\r\n      <Divider />\r\n      <Box>\r\n        <Table className={classes.table} aria-label=\"custom pagination table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>نام آهنگ</TableCell>\r\n              <TableCell>ساعت</TableCell>\r\n              <TableCell>تاریخ</TableCell>\r\n              <TableCell>دقت</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {(rowsPerPage > 0\r\n              ? res.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n              : res\r\n            ).map((row) => (\r\n              <TableRow key={UniqId()}>\r\n                {row.song.id !== 0 ? (\r\n                  <TableCell>\r\n                    <Link\r\n                      to={`/lesson/${row.song.id}`}\r\n                      color=\"secondary\"\r\n                      component={RouterLink}\r\n                    >\r\n                      {row.song.name}\r\n                    </Link>\r\n                  </TableCell>\r\n                ) : (\r\n                  <TableCell>\r\n                    <Link to=\"/guide\" color=\"secondary\" component={RouterLink}>\r\n                      {row.song.name}\r\n                    </Link>\r\n                  </TableCell>\r\n                )}\r\n                <TableCell>{dateChanger(false, row.time)}</TableCell>\r\n                <TableCell>{dateChanger(row.date)}</TableCell>\r\n                <TableCell>\r\n                  <Chip color=\"secondary\" label={row.progress} size=\"small\" />\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n            {emptyRows > 0 && (\r\n              <TableRow style={{ height: 57 * emptyRows }}>\r\n                <TableCell colSpan={6} />\r\n              </TableRow>\r\n            )}\r\n          </TableBody>\r\n          <TableFooter>\r\n            <TableRow>\r\n              <TablePagination\r\n                className={classes.toolbar}\r\n                rowsPerPageOptions={pagination[sel]}\r\n                colSpan={4}\r\n                count={res.length}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                SelectProps={{\r\n                  inputProps: { \"aria-label\": \"row per page\" },\r\n                  native: true,\r\n                }}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                ActionsComponent={TablePaginationActions}\r\n              />\r\n            </TableRow>\r\n          </TableFooter>\r\n        </Table>\r\n      </Box>\r\n    </Card>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { ThunkDispatch } from \"redux-thunk\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { Container, Grid } from \"@material-ui/core\";\r\nimport { getPlayTimes } from \"../../../_actions/profile.actions\";\r\nimport { DefaultProfileState } from \"../../../_types/profile.types\";\r\nimport LatestSongs from \"./LatestSongs\";\r\nimport { LoadingCircle } from \"../../Layout/Loadings\";\r\nimport { AppActions, AppState } from \"../../../_types\";\r\n\r\ninterface ProfilePageProps {}\r\n\r\ntype Props = ProfilePageProps & LinkDispatchProps & DefaultProfileState;\r\n\r\nclass Dashboard extends React.Component<Props> {\r\n  componentDidMount() {\r\n    if (!this.props.playtime) this.props.getPlayTimes();\r\n  }\r\n\r\n  render() {\r\n    const { playtime, loading } = this.props;\r\n    if (loading) {\r\n      return <LoadingCircle />;\r\n    }\r\n    if (!playtime) {\r\n      return <div>not signed...</div>;\r\n    } else {\r\n      return (\r\n        <Container maxWidth={false} style={{ paddingTop: \"10px\" }}>\r\n          <Grid container spacing={3}>\r\n            <Grid item lg={12} md={12} xl={12} xs={12}>\r\n              <LatestSongs res={playtime} />\r\n            </Grid>\r\n            {/* <Grid item lg={4} md={12} xl={4} xs={12}>\r\n              <InstrumentTraffic />\r\n            </Grid>\r\n            <Grid\r\n              container\r\n              spacing={3}\r\n              item\r\n              lg={8}\r\n              md={12}\r\n              xl={8}\r\n              xs={12}\r\n              style={{ margin: 0, padding: 0 }}\r\n            > */}\r\n            {/* <Grid item lg={6} md={6} xl={6} xs={12}>\r\n                <TotalLevel />\r\n              </Grid>\r\n              <Grid item lg={6} md={6} xl={6} xs={12}>\r\n                <Budget  />\r\n              </Grid>\r\n              <Grid item lg={6} md={6} xl={6} xs={12}>\r\n                <TotalCustomers  />\r\n              </Grid>\r\n              <Grid item lg={6} md={6} xl={6} xs={12}>\r\n                <TotalProfit /> */}\r\n            {/* </Grid> */}\r\n            {/* </Grid> */}\r\n          </Grid>\r\n        </Container>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\ninterface LinkDispatchProps {\r\n  getPlayTimes: () => void;\r\n}\r\n\r\nconst mapStateToProps = (\r\n  state: AppState,\r\n  ownProps: Props\r\n): ProfilePageProps => {\r\n  return { ...state.user };\r\n};\r\n\r\nconst mapDispatchToProps = (\r\n  dispatch: ThunkDispatch<any, any, AppActions>,\r\n  ownProps: ProfilePageProps\r\n): LinkDispatchProps => ({\r\n  getPlayTimes: bindActionCreators(getPlayTimes, dispatch),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Dashboard);\r\n"],"sourceRoot":""}