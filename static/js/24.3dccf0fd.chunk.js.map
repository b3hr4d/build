{"version":3,"sources":["components/PostPages/index.tsx"],"names":["Post","path","pathFinder","this","props","pathname","post","requestPost","classes","data","loading","error","className","root","bank","dangerouslySetInnerHTML","__html","content","component","autoMargin","Component","connect","state","ownProps","router","location","single","dispatch","bindActionCreators","withStyles","theme","createStyles","width","minHeight","breakpoints","down","padding","spacing","margin","textAlign","backgroundColor","palette","background","paper","border","secondary","main","fontWeight","maxWidth","display"],"mappings":"2RAyFMA,E,kLAEF,IAAMC,EAAOC,YAAWC,KAAKC,MAAMC,UAC/BJ,EAAKK,MAAMH,KAAKC,MAAMG,YAAYN,EAAKK,Q,+BAGnC,IAAD,EACmCH,KAAKC,MAAvCI,EADD,EACCA,QAASC,EADV,EACUA,KAAMC,EADhB,EACgBA,QAASC,EADzB,EACyBA,MAChC,OACE,kBAAC,IAAD,CAAWC,UAAWJ,EAAQK,MAC3BH,EACC,kBAAC,IAAD,MACED,EACF,yBACEG,UAAWJ,EAAQM,KACnBC,wBAAyB,CAAEC,OAAQP,EAAKQ,WAG1C,kBAAC,IAAD,CAAYC,UAAU,MAAMN,UAAWJ,EAAQW,YAC5CR,Q,GAnBMS,aA2CJC,uBAZS,SAACC,EAAiBC,GAAlB,oBACtBlB,SAAUiB,EAAME,OAAOC,SAASpB,SAChCG,QAASe,EAASf,SACfc,EAAMI,OAAOpB,SAGS,SACzBqB,GADyB,MAEF,CACvBpB,YAAaqB,YAAmBrB,IAAaoB,MAGhCN,CAGbQ,aArHgB,SAACC,GAAD,aAChBC,YAAa,CACXlB,MAAI,GACFmB,MAAO,OACPC,UAAW,uBAFT,cAGDH,EAAMI,YAAYC,KAAK,MAAQ,CAC9BF,UAAW,sBACXG,QAASN,EAAMO,QAAQ,KALvB,wBAOOP,EAAMO,QAAQ,IAPrB,wBAQO,QARP,8BASa,UATb,GAWJlB,WAAY,CACVmB,OAAQ,QAEVxB,KAAM,CACJyB,UAAW,SACXP,MAAO,OACPI,QAAS,GACTI,gBAAiBV,EAAMW,QAAQC,WAAWC,MAC1CC,OAAO,aAAD,OAAed,EAAMW,QAAQI,UAAUC,MAC7C,SAAU,CACRV,QAAS,GACTE,OAAQ,GACRS,WAAY,IACZP,gBAAiBV,EAAMW,QAAQI,UAAUC,MAE3C,SAAU,CACRV,QAAS,GACTE,OAAQ,GACRS,WAAY,KAEd,SAAU,CACRX,QAAS,EACTE,OAAQ,EACRS,WAAY,KAEd,UAAW,CACTC,SAAU,QAEZ,cAAe,CACbA,SAAU,QAEZ,SAAU,CACRZ,QAAS,EACTE,OAAQ,EACRS,WAAY,KAEd,aAAc,CACZT,OAAQ,OACRF,QAAS,GACT,iBAAkB,CAChBa,QAAS,SAGb,iBAAkB,CAChBF,WAAY,UA4DlBlB,CAAsB7B","file":"static/js/24.3dccf0fd.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { ThunkDispatch } from \"redux-thunk\";\r\nimport {\r\n  Container,\r\n  createStyles,\r\n  Theme,\r\n  Typography,\r\n  WithStyles,\r\n  withStyles,\r\n} from \"@material-ui/core\";\r\nimport { pathFinder } from \"../../_helpers/constants\";\r\nimport { requestPost } from \"../../_actions/post.actions\";\r\nimport { AppActions, AppState } from \"../../_types\";\r\nimport { IPost } from \"../../_types/post.types\";\r\nimport { LoadingCircle } from \"../Layout/Loadings\";\r\n\r\nconst useStyles = (theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      width: \"99vw\",\r\n      minHeight: \"calc(100vh - 128px)\",\r\n      [theme.breakpoints.down(\"xs\")]: {\r\n        minHeight: \"calc(100vh - 112px)\",\r\n        padding: theme.spacing(1),\r\n      },\r\n      padding: theme.spacing(2),\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n    },\r\n    autoMargin: {\r\n      margin: \"auto\",\r\n    },\r\n    bank: {\r\n      textAlign: \"center\",\r\n      width: \"100%\",\r\n      padding: 10,\r\n      backgroundColor: theme.palette.background.paper,\r\n      border: `1px solid ${theme.palette.secondary.main}`,\r\n      \"& > h1\": {\r\n        padding: 10,\r\n        margin: 10,\r\n        fontWeight: 900,\r\n        backgroundColor: theme.palette.secondary.main,\r\n      },\r\n      \"& > h2\": {\r\n        padding: 10,\r\n        margin: 10,\r\n        fontWeight: 800,\r\n      },\r\n      \"& > h3\": {\r\n        padding: 7,\r\n        margin: 7,\r\n        fontWeight: 800,\r\n      },\r\n      \"& > img\": {\r\n        maxWidth: \"100%\",\r\n      },\r\n      \"& > * > img\": {\r\n        maxWidth: \"100%\",\r\n      },\r\n      \"& > h4\": {\r\n        padding: 5,\r\n        margin: 5,\r\n        fontWeight: 800,\r\n      },\r\n      \"& > figure\": {\r\n        margin: \"auto\",\r\n        padding: 10,\r\n        \"& > figcaption\": {\r\n          display: \"none\",\r\n        },\r\n      },\r\n      \"& > * > strong\": {\r\n        fontWeight: 800,\r\n      },\r\n    },\r\n  });\r\n\r\ninterface PostProps extends WithStyles<typeof useStyles> {\r\n  data?: IPost;\r\n  loading: boolean;\r\n  error: string;\r\n  pathname: string;\r\n}\r\n\r\ntype Props = PostProps & LinkDispatchProps;\r\n\r\nclass Post extends Component<Props> {\r\n  componentDidMount() {\r\n    const path = pathFinder(this.props.pathname);\r\n    if (path.post) this.props.requestPost(path.post);\r\n  }\r\n\r\n  render() {\r\n    const { classes, data, loading, error } = this.props;\r\n    return (\r\n      <Container className={classes.root}>\r\n        {loading ? (\r\n          <LoadingCircle />\r\n        ) : data ? (\r\n          <div\r\n            className={classes.bank}\r\n            dangerouslySetInnerHTML={{ __html: data.content }}\r\n          />\r\n        ) : (\r\n          <Typography component=\"div\" className={classes.autoMargin}>\r\n            {error}\r\n          </Typography>\r\n        )}\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\ninterface LinkDispatchProps {\r\n  requestPost: (id: number) => void;\r\n}\r\n\r\nconst mapStateToProps = (state: AppState, ownProps: Props): PostProps => ({\r\n  pathname: state.router.location.pathname,\r\n  classes: ownProps.classes,\r\n  ...state.single.post,\r\n});\r\n\r\nconst mapDispatchToProps = (\r\n  dispatch: ThunkDispatch<any, any, AppActions>\r\n): LinkDispatchProps => ({\r\n  requestPost: bindActionCreators(requestPost, dispatch),\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withStyles(useStyles)(Post));\r\n"],"sourceRoot":""}