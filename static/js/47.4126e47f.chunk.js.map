{"version":3,"sources":["router/Test.jsx"],"names":["inputChange","e","console","log","currentTarget","value","inspectArray","name","element","type","key","onChange","Inspector","index","style","width","display","flexDirection","map","child","Test","React","useState","inspect","setInspect","item","i","onClick"],"mappings":"kNA+BMA,EAAc,SAACC,GACnBC,QAAQC,IAAIF,EAAEG,cAAcC,QAExBC,EAAe,CACnB,CACEC,KAAM,YACNC,QAAS,CACP,2BAAOC,KAAK,OAAOC,IAAI,MACvB,2BAAOD,KAAK,QAAQC,IAAI,MACxB,2BAAOD,KAAK,QAAQC,IAAI,IAAIC,SAAUX,MAG1C,CACEO,KAAM,QACNC,QAAS,CACP,yBAAKE,IAAI,KACP,2BAAOD,KAAK,OAAOC,IAAI,MAAML,MAAM,eACnC,2BAAOI,KAAK,OAAOC,IAAI,SAEzB,2BAAOD,KAAK,QAAQC,IAAI,MACxB,2BAAOD,KAAK,QAAQC,IAAI,IAAIC,SAAUX,OAItCY,EAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACN,OAAVA,GACE,yBACEC,MAAO,CACLC,MAAO,IACPC,QAAS,OACTC,cAAe,WAGjB,4BAAKX,EAAaO,GAAON,MACxBD,EAAaO,GAAOL,QAAQU,KAAI,SAACC,GAAD,OAAWA,OAGnC,SAASC,IAAQ,IAAD,EACCC,IAAMC,SAAS,MADhB,mBACtBC,EADsB,KACbC,EADa,KAE7B,OACE,6BACGlB,EAAaY,KAAI,SAACO,EAAMC,GAAP,OAChB,4BAAQhB,IAAKgB,EAAGC,QAAS,kBAAMH,EAAWE,KACvCD,EAAKlB,SAGV,kBAACK,EAAD,CAAWC,MAAOU","file":"static/js/47.4126e47f.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\n// const useKeyEvent = (target) => {\r\n//   const [keyTarget, setKeyTarget] = React.useState(target);\r\n//   const [playedKey, setPlayedKey] = React.useState(null);\r\n//   const [keyDone, setKeyDone] = React.useState(false);\r\n\r\n//   React.useEffect(() => {\r\n//     const keyUp = (e) => {\r\n//       setPlayedKey(null);\r\n//     };\r\n//     const keyDown = (e) => {\r\n//       const key = e.key;\r\n//       if (key !== playedKey) {\r\n//         if (key === keyTarget) {\r\n//           setKeyDone(true);\r\n//         }\r\n//         setPlayedKey(key);\r\n//       }\r\n//     };\r\n\r\n//     document.addEventListener(\"keydown\", keyDown);\r\n//     document.addEventListener(\"keyup\", keyUp);\r\n//     return () => {\r\n//       document.removeEventListener(\"keydown\", keyDown);\r\n//       document.removeEventListener(\"keyup\", keyUp);\r\n//     };\r\n//   }, [playedKey, keyTarget]);\r\n\r\n//   return [setKeyTarget, playedKey, keyDone];\r\n// };\r\nconst inputChange = (e) => {\r\n  console.log(e.currentTarget.value);\r\n};\r\nconst inspectArray = [\r\n  {\r\n    name: \"Rectangle\",\r\n    element: [\r\n      <input type=\"text\" key=\"1\" />,\r\n      <input type=\"range\" key=\"2\" />,\r\n      <input type=\"color\" key=\"3\" onChange={inputChange} />,\r\n    ],\r\n  },\r\n  {\r\n    name: \"Image\",\r\n    element: [\r\n      <div key=\"1\">\r\n        <input type=\"text\" key=\"1.1\" value=\"Some Value\" />\r\n        <input type=\"text\" key=\"1.2\" />\r\n      </div>,\r\n      <input type=\"range\" key=\"2\" />,\r\n      <input type=\"color\" key=\"3\" onChange={inputChange} />,\r\n    ],\r\n  },\r\n];\r\nconst Inspector = ({ index }) =>\r\n  index !== null && (\r\n    <div\r\n      style={{\r\n        width: 300,\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n      }}\r\n    >\r\n      <h1>{inspectArray[index].name}</h1>\r\n      {inspectArray[index].element.map((child) => child)}\r\n    </div>\r\n  );\r\nexport default function Test() {\r\n  const [inspect, setInspect] = React.useState(null);\r\n  return (\r\n    <div>\r\n      {inspectArray.map((item, i) => (\r\n        <button key={i} onClick={() => setInspect(i)}>\r\n          {item.name}\r\n        </button>\r\n      ))}\r\n      <Inspector index={inspect} />\r\n    </div>\r\n  );\r\n}\r\n"],"sourceRoot":""}