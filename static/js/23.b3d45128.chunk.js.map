{"version":3,"sources":["components/LearningPages/Lesson/index.tsx"],"names":["Lesson","svgWidth","i","playModeChanger","props","changeMode","nextProps","data","this","id","requestPlayer","console","log","path","pathFinder","pathname","requestLesson","lesson","resetPlayer","setState","classes","theme","melodition","error","rest","className","root","loading","playMode","container","main","item","xs","direction","justify","alignItems","content","doubleGrid","variant","title","centerText","excerpt","component","autoMargin","Component","connectedLesson","connect","state","ownProps","single","auth","course","router","location","dispatch","bindActionCreators","withStyles","createStyles","width","minHeight","overflow","breakpoints","down","margin","height","flexWrap","maxWidth","padding","textAlign"],"mappings":"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","file":"static/js/23.b3d45128.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { ThunkDispatch } from \"redux-thunk\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  createStyles,\r\n  Grid,\r\n  Theme,\r\n  Typography,\r\n  WithStyles,\r\n  withStyles,\r\n} from \"@material-ui/core\";\r\nimport { requestLesson } from \"../../../_actions/lesson.actions\";\r\nimport {\r\n  requestPlayer,\r\n  resetPlayer,\r\n  changeMode,\r\n} from \"../../../_actions/player.actions\";\r\nimport { pathFinder } from \"../../../_helpers/constants\";\r\nimport { ICourse } from \"../../../_types/course.types\";\r\nimport { AppActions, AppState } from \"../../../_types\";\r\nimport { ILesson } from \"../../../_types/lesson.types\";\r\nimport {\r\n  PlayerLeftSide,\r\n  PlayerRightSide,\r\n} from \"../../Layout/Player/PlayerSides\";\r\nimport { IMelodition } from \"../../../_types/player.types\";\r\nimport Fingers from \"../../Layout/Instruments/Finger/Fingers\";\r\nimport Piano from \"../../Layout/Instruments/Piano\";\r\nimport { PlayButton } from \"../../Layout/Player/Buttons\";\r\nimport { LoadingCircle } from \"../../Layout/Loadings\";\r\n\r\nconst useStyles = (theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      width: \"100vw\",\r\n      minHeight: \"calc(100vh - 128px)\",\r\n      overflow: \"hidden\",\r\n      [theme.breakpoints.down(\"xs\")]: {\r\n        minHeight: \"calc(100vh - 113px)\",\r\n      },\r\n      display: \"flex\",\r\n    },\r\n    autoMargin: {\r\n      margin: \"auto\",\r\n    },\r\n    main: {\r\n      width: \"100vw\",\r\n      minHeight: \"calc(100vh - 128px)\",\r\n      overflow: \"hidden\",\r\n      [theme.breakpoints.down(\"xs\")]: {\r\n        minHeight: \"calc(100vh - 113px)\",\r\n      },\r\n      display: \"flex\",\r\n    },\r\n    content: {\r\n      height: \"100%\",\r\n      width: \"100%\",\r\n      flexWrap: \"nowrap\",\r\n    },\r\n    doubleGrid: {\r\n      flexWrap: \"nowrap\",\r\n      width: \"100%\",\r\n      maxWidth: \"100%\",\r\n      \"& > div\": {\r\n        margin: \"auto\",\r\n        padding: 0,\r\n        height: \"100%\",\r\n      },\r\n    },\r\n    centerText: {\r\n      textAlign: \"center\",\r\n    },\r\n  });\r\n\r\ninterface LessonProps extends WithStyles<typeof useStyles> {\r\n  error: string;\r\n  data?: ILesson;\r\n  course?: ICourse;\r\n  pathname: string;\r\n  melodition: IMelodition;\r\n  theme: \"light\" | \"dark\";\r\n}\r\n\r\ninterface States {}\r\n\r\ntype Props = LessonProps & ReturnType<typeof mapDispatchToProps>;\r\n\r\nclass Lesson extends Component<Props, States> {\r\n  shouldComponentUpdate(nextProps: Props) {\r\n    if (nextProps.data && this.props.data?.id !== nextProps.data.id) {\r\n      this.props.requestPlayer(nextProps.data);\r\n    }\r\n    return true;\r\n  }\r\n  componentDidMount() {\r\n    console.log(\"mounted\");\r\n    const path = pathFinder(this.props.pathname);\r\n    this.props.requestLesson(path);\r\n    if (this.props.data && this.props.data.id === path.lesson) {\r\n      this.props.requestPlayer(this.props.data);\r\n    }\r\n  }\r\n  componentWillUnmount() {\r\n    console.log(\"dismount\");\r\n    this.props.resetPlayer();\r\n    this.setState = () => {\r\n      return;\r\n    };\r\n  }\r\n\r\n  svgWidth = (i: number): number => {\r\n    const num = i === 1 ? 668 : 584;\r\n    return num;\r\n  };\r\n\r\n  playModeChanger = () => {\r\n    this.props.changeMode(true);\r\n  };\r\n  render() {\r\n    const { theme, classes, data, melodition, error, ...rest } = this.props;\r\n    return (\r\n      <div className={classes.root}>\r\n        {melodition.loading || melodition.playMode ? (\r\n          <LoadingCircle />\r\n        ) : data ? (\r\n          <Grid container className={classes.main}>\r\n            <Grid item xs={1}>\r\n              <PlayerLeftSide {...rest} data={data} />\r\n            </Grid>\r\n            <Grid item xs={10}>\r\n              <Grid\r\n                container\r\n                direction=\"column\"\r\n                justify=\"center\"\r\n                alignItems=\"center\"\r\n                className={classes.content}\r\n              >\r\n                <Grid item xs={3} className={classes.doubleGrid}>\r\n                  <Grid container justify=\"center\" alignItems=\"center\">\r\n                    <Grid item xs={9}>\r\n                      <Typography variant=\"h4\">{data.title}</Typography>\r\n                    </Grid>\r\n                    <Grid item xs={3} className={classes.centerText}>\r\n                      <PlayButton loading={melodition.loading} />\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n                <Grid item xs={6} className={classes.doubleGrid}>\r\n                  <Grid container justify=\"center\" alignItems=\"center\">\r\n                    <Grid item xs={12}>\r\n                      <Piano />\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n                <Grid item xs={3} className={classes.doubleGrid}>\r\n                  <Grid container justify=\"center\" alignItems=\"center\">\r\n                    <Grid item xs={6}>\r\n                      <Typography>{data.excerpt}</Typography>\r\n                    </Grid>\r\n                    <Grid item xs={6} className={classes.centerText}>\r\n                      <Fingers />\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item xs={1}>\r\n              <PlayerRightSide playModeChanger={this.playModeChanger} />\r\n            </Grid>\r\n          </Grid>\r\n        ) : (\r\n          <Typography component=\"div\" className={classes.autoMargin}>\r\n            {error}\r\n          </Typography>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: AppState, ownProps: Props) => ({\r\n  ...state.single.lesson,\r\n  melodition: state.melodition,\r\n  theme: state.auth.theme,\r\n  classes: ownProps.classes,\r\n  course: state.single.course.data,\r\n  pathname: state.router.location.pathname,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: ThunkDispatch<any, any, AppActions>) => ({\r\n  changeMode: bindActionCreators(changeMode, dispatch),\r\n  requestLesson: bindActionCreators(requestLesson, dispatch),\r\n  requestPlayer: bindActionCreators(requestPlayer, dispatch),\r\n  resetPlayer: bindActionCreators(resetPlayer, dispatch),\r\n});\r\n\r\nconst connectedLesson = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withStyles(useStyles)(Lesson));\r\n\r\nexport default connectedLesson;\r\n"],"sourceRoot":""}