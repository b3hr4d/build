{"version":3,"sources":["_actions/guide.actions.ts","_actions/course.actions.ts","_actions/exercise.actions.ts","_actions/lesson.actions.ts","components/LearningPages/Course/CourseItems.tsx","components/LearningPages/Course/index.tsx"],"names":["requestGuide","path","dispatch","getState","guide","newPath","found","bank","guides","data","find","id","guide_select","type","SUCCESS","GUIDE","SAVE","COURSES","addCourses","EXERCISES","addExercises","course","requestCourse","exercise","requestExercise","REQUEST","API","get","then","res","GUIDES","catch","err","errorHandler","FAILURE","added","map","lesson","push","courses","course_select","Compiler","lessons","exercises","COURSE","LESSONS","requestLesson","select","info","genre","name","ENTER_NOTEMODE","EXERCISE","LESSON","useStyles","makeStyles","theme","root","maxHeight","width","margin","spacing","content","minHeight","rightChip","position","cursor","backgroundColor","CourseItem","courseItem","classes","title","thumbnails","Card","className","CardActionArea","onClick","e","typer","store","Grid","container","item","lg","xs","sm","xl","Chip","label","grade","CardMedia","component","alt","height","image","thumbnailsFinder","CardContent","Typography","gutterBottom","variant","Course","pathFinder","this","props","pathname","loading","error","justify","md","text","description","k","key","autoMargin","Component","connect","state","ownProps","router","location","single","bindActionCreators","withStyles","createStyles","breakpoints","down","padding","palette","secondary","main","opacity"],"mappings":"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","file":"static/js/27.cedd12a8.chunk.js","sourcesContent":["import { ThunkDispatch } from \"redux-thunk\";\r\nimport {\r\n  AppState,\r\n  ICardDetail,\r\n  SAVE,\r\n  FAILURE,\r\n  REQUEST,\r\n  SUCCESS,\r\n  GuideSelect,\r\n} from \"../_types\";\r\nimport { API } from \"../_helpers/api\";\r\nimport { AppActions } from \"../_types\";\r\nimport { requestCourse } from \"./course.actions\";\r\nimport { PathFinder } from \"../_helpers/constants\";\r\nimport { requestExercise } from \"./exercise.actions\";\r\nimport { errorHandler } from \"../components/Layout/SnackBar/alert\";\r\n\r\nexport const requestGuide = (path: PathFinder) => (\r\n  dispatch: ThunkDispatch<AppState, undefined, AppActions>,\r\n  getState: () => AppState\r\n) => {\r\n  const { guide, ...newPath } = path;\r\n  const found = getState().bank.guides.data.find(\r\n    (guide) => guide.id === path.guide\r\n  );\r\n  if (found?.guide_select) {\r\n    dispatch({ type: SUCCESS.GUIDE, data: found });\r\n    dispatch({ type: SAVE.COURSES, data: addCourses(found.guide_select) });\r\n    dispatch({ type: SAVE.EXERCISES, data: addExercises(found.guide_select) });\r\n    if (path.course) dispatch(requestCourse(newPath));\r\n    if (path.exercise) dispatch(requestExercise(newPath));\r\n  } else {\r\n    dispatch({ type: REQUEST.GUIDE });\r\n    API.get(`/lesson/v2/guide?id=${path.guide}`)\r\n      .then((res) => {\r\n        dispatch({ type: SUCCESS.GUIDE, data: res.data[0] });\r\n        dispatch({ type: SAVE.GUIDES, data: res.data });\r\n        dispatch({\r\n          type: SAVE.COURSES,\r\n          data: addCourses(res.data[0].guide_select),\r\n        });\r\n        dispatch({\r\n          type: SAVE.EXERCISES,\r\n          data: addExercises(res.data[0].guide_select),\r\n        });\r\n        if (path.course) dispatch(requestCourse(newPath));\r\n        if (path.exercise) dispatch(requestExercise(newPath));\r\n      })\r\n      .catch((err) => errorHandler(err, FAILURE.GUIDE));\r\n  }\r\n};\r\n\r\nconst addCourses = (guide_select: GuideSelect[]) => {\r\n  const added: ICardDetail[] = [];\r\n  guide_select.map((course) =>\r\n    course.course?.map((lesson) => added.push(lesson))\r\n  );\r\n  return added;\r\n};\r\nconst addExercises = (guide_select: GuideSelect[]) => {\r\n  const added: ICardDetail[] = [];\r\n  guide_select.map((course) =>\r\n    course.exercise?.map((exercise) => added.push(exercise))\r\n  );\r\n  return added;\r\n};\r\n","import { ThunkDispatch } from \"redux-thunk\";\r\nimport {\r\n  AppState,\r\n  CourseSelect,\r\n  FAILURE,\r\n  REQUEST,\r\n  SAVE,\r\n  SUCCESS,\r\n} from \"../_types\";\r\nimport { API } from \"../_helpers/api\";\r\nimport { requestGuide } from \"./guide.actions\";\r\nimport { requestLesson } from \"./lesson.actions\";\r\nimport { PathFinder } from \"../_helpers/constants\";\r\nimport { ICardDetail, AppActions } from \"../_types\";\r\nimport { requestExercise } from \"./exercise.actions\";\r\nimport { errorHandler } from \"../components/Layout/SnackBar/alert\";\r\n\r\nexport const requestCourse = (path: PathFinder) => (\r\n  dispatch: ThunkDispatch<AppState, undefined, AppActions>,\r\n  getState: () => AppState\r\n) => {\r\n  const found = getState().bank.courses.data.find(\r\n    (course) => course.id === path.course\r\n  );\r\n  const { course, ...newPath } = path;\r\n  if (found?.course_select) {\r\n    const { lessons, exercises } = Compiler(found.course_select);\r\n    dispatch({ type: SUCCESS.COURSE, data: found });\r\n    dispatch({ type: SAVE.LESSONS, data: lessons });\r\n    dispatch({ type: SAVE.EXERCISES, data: exercises });\r\n    if (path.lesson) dispatch(requestLesson(newPath));\r\n    if (path.exercise) dispatch(requestExercise(newPath));\r\n  } else if (path.guide) {\r\n    dispatch(requestGuide(path));\r\n  } else if (!found) {\r\n    dispatch({ type: REQUEST.COURSE });\r\n    API.get(`/lesson/v2/course?id=${path.course}`)\r\n      .then((res) => {\r\n        const { lessons, exercises } = Compiler(res.data[0].course_select);\r\n        dispatch({ type: SUCCESS.COURSE, data: res.data[0] });\r\n        dispatch({ type: SAVE.COURSES, data: res.data });\r\n        dispatch({ type: SAVE.LESSONS, data: lessons });\r\n        dispatch({ type: SAVE.EXERCISES, data: exercises });\r\n        if (path.lesson) dispatch(requestLesson(newPath));\r\n        if (path.exercise) dispatch(requestExercise(newPath));\r\n      })\r\n      .catch((err) => errorHandler(err, FAILURE.COURSE));\r\n  }\r\n};\r\n\r\nconst Compiler = (course_select: CourseSelect[]) => {\r\n  const lessons: ICardDetail[] = [];\r\n  const exercises: ICardDetail[] = [];\r\n  course_select.map((select) =>\r\n    select.info.genre?.name === \"Exercise\"\r\n      ? exercises.push(select)\r\n      : lessons.push(select)\r\n  );\r\n  return { lessons, exercises };\r\n};\r\n","import { ThunkDispatch } from \"redux-thunk\";\r\nimport { API } from \"../_helpers/api\";\r\nimport { AppActions } from \"../_types\";\r\nimport { requestGuide } from \"./guide.actions\";\r\nimport { requestCourse } from \"./course.actions\";\r\nimport { PathFinder } from \"../_helpers/constants\";\r\nimport { ENTER_NOTEMODE } from \"../_types/player.types\";\r\nimport { errorHandler } from \"../components/Layout/SnackBar/alert\";\r\nimport { FAILURE, REQUEST, SUCCESS, SAVE, AppState } from \"../_types\";\r\n\r\nexport const requestExercise = (path: PathFinder) => (\r\n  dispatch: ThunkDispatch<AppState, undefined, AppActions>,\r\n  getState: () => AppState\r\n) => {\r\n  const found = getState().bank.exercises.data.find(\r\n    (exercise) => exercise.id === path.exercise\r\n  );\r\n  if (found) {\r\n    dispatch({ type: ENTER_NOTEMODE });\r\n    dispatch({ type: SUCCESS.EXERCISE, data: found });\r\n  } else if (path.guide) {\r\n    dispatch(requestGuide(path));\r\n  } else if (path.course) {\r\n    dispatch(requestCourse(path));\r\n  } else if (!found) {\r\n    dispatch({ type: REQUEST.EXERCISE });\r\n    API.get(`/lesson/v2?id=${path.exercise}`)\r\n      .then((res) => {\r\n        dispatch({ type: ENTER_NOTEMODE });\r\n        dispatch({ type: SUCCESS.EXERCISE, data: res.data[0] });\r\n        dispatch({ type: SAVE.EXERCISES, data: res.data });\r\n      })\r\n      .catch((err) => errorHandler(err, FAILURE.EXERCISE));\r\n  }\r\n};\r\n","import { ThunkDispatch } from \"redux-thunk\";\r\nimport { API } from \"../_helpers/api\";\r\nimport { AppActions } from \"../_types\";\r\nimport { requestGuide } from \"./guide.actions\";\r\nimport { requestCourse } from \"./course.actions\";\r\nimport { PathFinder } from \"../_helpers/constants\";\r\nimport { errorHandler } from \"../components/Layout/SnackBar/alert\";\r\nimport { FAILURE, REQUEST, SUCCESS, SAVE, AppState } from \"../_types\";\r\n\r\nexport const requestLesson = (path: PathFinder) => (\r\n  dispatch: ThunkDispatch<AppState, undefined, AppActions>,\r\n  getState: () => AppState\r\n) => {\r\n  const found = getState().bank.lessons.data.find(\r\n    (lesson) => lesson.id === path.lesson\r\n  );\r\n\r\n  if (found) {\r\n    dispatch({ type: SUCCESS.LESSON, data: found });\r\n  } else if (path.guide) {\r\n    dispatch(requestGuide(path));\r\n  } else if (path.course) {\r\n    dispatch(requestCourse(path));\r\n  } else if (!found) {\r\n    dispatch({ type: REQUEST.LESSON });\r\n    API.get(`/lesson/v2?id=${path.lesson}`)\r\n      .then((res) => {\r\n        dispatch({ type: SUCCESS.LESSON, data: res.data[0] });\r\n        dispatch({ type: SAVE.LESSONS, data: res.data });\r\n      })\r\n      .catch((err) => errorHandler(err, FAILURE.LESSON));\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport { push } from \"connected-react-router\";\r\nimport {\r\n  Card,\r\n  CardMedia,\r\n  Typography,\r\n  CardContent,\r\n  CardActionArea,\r\n  Chip,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles, Theme } from \"@material-ui/core/styles\";\r\n\r\nimport { store } from \"../../../_store/store.config\";\r\nimport { thumbnailsFinder } from \"../../../_helpers/constants\";\r\nimport { CourseSelect } from \"../../../_types\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    maxHeight: 280,\r\n    width: \"100%\",\r\n    margin: theme.spacing(1),\r\n  },\r\n  content: {\r\n    minHeight: 130,\r\n  },\r\n  rightChip: {\r\n    position: \"absolute\",\r\n    cursor: \"pointer\",\r\n    margin: theme.spacing(1),\r\n    backgroundColor: \"green\",\r\n  },\r\n}));\r\n\r\ntype Props = {\r\n  courseItem: CourseSelect;\r\n  type: string | number;\r\n  path: string;\r\n};\r\n\r\nexport const CourseItem: React.FC<Props> = ({ type, courseItem, path }) => {\r\n  const classes = useStyles();\r\n  const { title, id, thumbnails, info } = courseItem;\r\n\r\n  const clickHandler = (\r\n    e: React.MouseEvent<HTMLButtonElement, MouseEvent>\r\n  ): void => {\r\n    const typer = type === \"Exercise\" ? \"exercise\" : \"lesson\";\r\n    store.dispatch(push(path + \"/\" + typer + \"=\" + id));\r\n  };\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardActionArea onClick={clickHandler}>\r\n        <Grid container>\r\n          <Grid item lg={4} xs={4} sm={4} xl={4}>\r\n            <Chip label={info.grade?.name} className={classes.rightChip} />\r\n            <CardMedia\r\n              component=\"img\"\r\n              alt={title}\r\n              height=\"200\"\r\n              image={thumbnailsFinder(thumbnails)}\r\n              title={title}\r\n            />\r\n          </Grid>\r\n          <Grid item lg={8} xs={8} sm={8} xl={8}>\r\n            <CardContent className={classes.content}>\r\n              <Typography gutterBottom variant=\"body1\" component=\"h6\">\r\n                {title}\r\n              </Typography>\r\n            </CardContent>\r\n          </Grid>\r\n        </Grid>\r\n      </CardActionArea>\r\n    </Card>\r\n  );\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { ThunkDispatch } from \"redux-thunk\";\r\nimport {\r\n  Grid,\r\n  createStyles,\r\n  Theme,\r\n  Typography,\r\n  WithStyles,\r\n  withStyles,\r\n  CardMedia,\r\n} from \"@material-ui/core\";\r\n\r\nimport { ICardDetail, AppActions, AppState } from \"../../../_types\";\r\nimport {\r\n  PathFinder,\r\n  pathFinder,\r\n  thumbnailsFinder,\r\n} from \"../../../_helpers/constants\";\r\nimport { requestCourse } from \"../../../_actions/course.actions\";\r\nimport { CourseItem } from \"./CourseItems\";\r\nimport { LoadingCircle } from \"../../Layout/Loadings\";\r\n\r\nconst useStyles = (theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      width: \"99vw\",\r\n      minHeight: \"calc(100vh - 128px)\",\r\n      [theme.breakpoints.down(\"xs\")]: {\r\n        minHeight: \"calc(100vh - 112px)\",\r\n        padding: theme.spacing(1),\r\n      },\r\n      padding: theme.spacing(2),\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      justifyContent: \"flex-start\",\r\n    },\r\n    autoMargin: {\r\n      margin: \"auto\",\r\n    },\r\n    content: {\r\n      position: \"relative\",\r\n      minHeight: \"calc(100vh - 160px)\",\r\n      [theme.breakpoints.down(\"sm\")]: {\r\n        minHeight: \"100%\",\r\n      },\r\n      border: `1px solid ${theme.palette.secondary.main}`,\r\n      height: \"100%\",\r\n      width: \"100%\",\r\n    },\r\n    text: {\r\n      padding: 20,\r\n    },\r\n    image: {\r\n      width: \"100%\",\r\n      height: \"100%\",\r\n      opacity: \"0.3\",\r\n      position: \"absolute\",\r\n    },\r\n  });\r\n\r\ninterface CourseProps extends WithStyles<typeof useStyles> {\r\n  data?: ICardDetail;\r\n  loading: boolean;\r\n  error: string;\r\n  pathname: string;\r\n}\r\n\r\ntype Props = CourseProps & LinkDispatchProps;\r\n\r\nclass Course extends Component<Props> {\r\n  componentDidMount() {\r\n    const path = pathFinder(this.props.pathname);\r\n    this.props.requestCourse(path);\r\n  }\r\n\r\n  render() {\r\n    const { classes, data, loading, error, pathname } = this.props;\r\n    return (\r\n      <Grid container justify=\"center\" className={classes.root}>\r\n        {loading ? (\r\n          <LoadingCircle />\r\n        ) : data ? (\r\n          <Grid container spacing={2}>\r\n            <Grid item lg={6} md={6} xl={6} xs={12}>\r\n              <div className={classes.content}>\r\n                <CardMedia\r\n                  image={thumbnailsFinder(data.thumbnails)}\r\n                  className={classes.image}\r\n                />\r\n                <Typography\r\n                  gutterBottom\r\n                  variant=\"body1\"\r\n                  component=\"h6\"\r\n                  className={classes.text}\r\n                >\r\n                  {data.description}\r\n                </Typography>\r\n              </div>\r\n            </Grid>\r\n            <Grid item lg={6} md={6} xl={6} xs={12}>\r\n              <Grid container justify=\"flex-end\">\r\n                {data.course_select?.map((course, k) => (\r\n                  <CourseItem\r\n                    key={k}\r\n                    type={course.info.genre.name}\r\n                    path={pathname}\r\n                    courseItem={course}\r\n                  />\r\n                ))}\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        ) : (\r\n          <Typography component=\"div\" className={classes.autoMargin}>\r\n            {error}\r\n          </Typography>\r\n        )}\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\ninterface LinkDispatchProps {\r\n  requestCourse: (path: PathFinder) => void;\r\n}\r\n\r\nconst mapStateToProps = (state: AppState, ownProps: Props): CourseProps => ({\r\n  classes: ownProps.classes,\r\n  pathname: state.router.location.pathname,\r\n  ...state.single.course,\r\n});\r\n\r\nconst mapDispatchToProps = (\r\n  dispatch: ThunkDispatch<any, any, AppActions>\r\n): LinkDispatchProps => ({\r\n  requestCourse: bindActionCreators(requestCourse, dispatch),\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withStyles(useStyles)(Course));\r\n"],"sourceRoot":""}