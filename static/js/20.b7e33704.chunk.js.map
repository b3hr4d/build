{"version":3,"sources":["components/LearningPages/Course/CourseItems.tsx","components/LearningPages/Course/index.tsx"],"names":["useStyles","makeStyles","theme","createStyles","root","maxHeight","width","margin","spacing","content","minHeight","rightChip","position","cursor","backgroundColor","CourseItem","type","courseItem","path","classes","title","id","featured_img","info","Card","className","CardActionArea","onClick","e","typer","store","dispatch","push","Grid","container","item","lg","xs","sm","xl","Chip","label","grade","name","CardMedia","component","alt","height","image","thumbnailsFinder","CardContent","Typography","gutterBottom","variant","Course","pathFinder","this","props","pathname","requestCourse","data","loading","error","justify","md","thumbnails","text","description","course_select","map","course","k","key","genre","autoMargin","Component","connect","state","ownProps","router","location","single","bindActionCreators","withStyles","breakpoints","down","padding","palette","secondary","main","opacity"],"mappings":"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","file":"static/js/20.b7e33704.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { push } from \"connected-react-router\";\r\nimport {\r\n  Card,\r\n  CardMedia,\r\n  Typography,\r\n  CardContent,\r\n  CardActionArea,\r\n  Chip,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\r\n\r\nimport { store } from \"../../../_store/store.config\";\r\nimport { thumbnailsFinder } from \"../../../_helpers/constants\";\r\nimport { ILesson } from \"../../../_types/lesson.types\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      maxHeight: 280,\r\n      width: \"100%\",\r\n      margin: theme.spacing(1),\r\n    },\r\n    content: {\r\n      minHeight: 130,\r\n    },\r\n    rightChip: {\r\n      position: \"absolute\",\r\n      cursor: \"pointer\",\r\n      margin: theme.spacing(1),\r\n      backgroundColor: \"green\",\r\n    },\r\n  })\r\n);\r\n\r\ntype Props = {\r\n  courseItem: ILesson;\r\n  type: string;\r\n  path: string;\r\n};\r\n\r\nexport const CourseItem: React.FC<Props> = ({ type, courseItem, path }) => {\r\n  const classes = useStyles();\r\n  const { title, id, featured_img, info } = courseItem;\r\n\r\n  const clickHandler = (\r\n    e: React.MouseEvent<HTMLButtonElement, MouseEvent>\r\n  ): void => {\r\n    const typer = type === \"Exercise\" ? \"exercise\" : \"lesson\";\r\n    store.dispatch(push(path + \"/\" + typer + \"=\" + id));\r\n  };\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardActionArea onClick={clickHandler}>\r\n        <Grid container>\r\n          <Grid item lg={4} xs={4} sm={4} xl={4}>\r\n            <Chip label={info.grade.name} className={classes.rightChip} />\r\n            <CardMedia\r\n              component=\"img\"\r\n              alt={title}\r\n              height=\"200\"\r\n              image={thumbnailsFinder(featured_img)}\r\n              title={title}\r\n            />\r\n          </Grid>\r\n          <Grid item lg={8} xs={8} sm={8} xl={8}>\r\n            <CardContent className={classes.content}>\r\n              <Typography gutterBottom variant=\"body1\" component=\"h6\">\r\n                {title}\r\n              </Typography>\r\n            </CardContent>\r\n          </Grid>\r\n        </Grid>\r\n      </CardActionArea>\r\n    </Card>\r\n  );\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { ThunkDispatch } from \"redux-thunk\";\r\nimport {\r\n  Grid,\r\n  createStyles,\r\n  Theme,\r\n  Typography,\r\n  WithStyles,\r\n  withStyles,\r\n  CardMedia,\r\n} from \"@material-ui/core\";\r\n\r\nimport { AppActions, AppState } from \"../../../_types\";\r\nimport { ICourse } from \"../../../_types/course.types\";\r\nimport {\r\n  PathFinder,\r\n  pathFinder,\r\n  thumbnailsFinder,\r\n} from \"../../../_helpers/constants\";\r\nimport { requestCourse } from \"../../../_actions/course.actions\";\r\nimport { CourseItem } from \"./CourseItems\";\r\nimport { LoadingCircle } from \"../../Layout/Loadings\";\r\n\r\nconst useStyles = (theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      width: \"99vw\",\r\n      minHeight: \"calc(100vh - 128px)\",\r\n      [theme.breakpoints.down(\"xs\")]: {\r\n        minHeight: \"calc(100vh - 112px)\",\r\n        padding: theme.spacing(1),\r\n      },\r\n      padding: theme.spacing(2),\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      justifyContent: \"flex-start\",\r\n    },\r\n    autoMargin: {\r\n      margin: \"auto\",\r\n    },\r\n    content: {\r\n      position: \"relative\",\r\n      minHeight: \"calc(100vh - 160px)\",\r\n      [theme.breakpoints.down(\"sm\")]: {\r\n        minHeight: \"100%\",\r\n      },\r\n      border: `1px solid ${theme.palette.secondary.main}`,\r\n      height: \"100%\",\r\n      width: \"100%\",\r\n    },\r\n    text: {\r\n      padding: 20,\r\n    },\r\n    image: {\r\n      width: \"100%\",\r\n      height: \"100%\",\r\n      opacity: \"0.3\",\r\n      position: \"absolute\",\r\n    },\r\n  });\r\n\r\ninterface CourseProps extends WithStyles<typeof useStyles> {\r\n  data?: ICourse;\r\n  loading: boolean;\r\n  error: string;\r\n  pathname: string;\r\n}\r\n\r\ntype Props = CourseProps & LinkDispatchProps;\r\n\r\nclass Course extends Component<Props> {\r\n  componentDidMount() {\r\n    const path = pathFinder(this.props.pathname);\r\n    this.props.requestCourse(path);\r\n  }\r\n\r\n  render() {\r\n    const { classes, data, loading, error, pathname } = this.props;\r\n    return (\r\n      <Grid container justify=\"center\" className={classes.root}>\r\n        {loading ? (\r\n          <LoadingCircle />\r\n        ) : data ? (\r\n          <Grid container spacing={2}>\r\n            <Grid item lg={6} md={6} xl={6} xs={12}>\r\n              <div className={classes.content}>\r\n                <CardMedia\r\n                  image={thumbnailsFinder(data.thumbnails)}\r\n                  className={classes.image}\r\n                />\r\n                <Typography\r\n                  gutterBottom\r\n                  variant=\"body1\"\r\n                  component=\"h6\"\r\n                  className={classes.text}\r\n                >\r\n                  {data.description}\r\n                </Typography>\r\n              </div>\r\n            </Grid>\r\n            <Grid item lg={6} md={6} xl={6} xs={12}>\r\n              <Grid container justify=\"flex-end\">\r\n                {data?.course_select.map((course, k) => (\r\n                  <CourseItem\r\n                    key={k}\r\n                    type={course.info.genre.name}\r\n                    path={pathname}\r\n                    courseItem={course}\r\n                  />\r\n                ))}\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        ) : (\r\n          <Typography component=\"div\" className={classes.autoMargin}>\r\n            {error}\r\n          </Typography>\r\n        )}\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\ninterface LinkDispatchProps {\r\n  requestCourse: (path: PathFinder) => void;\r\n}\r\n\r\nconst mapStateToProps = (state: AppState, ownProps: Props): CourseProps => ({\r\n  classes: ownProps.classes,\r\n  pathname: state.router.location.pathname,\r\n  ...state.single.course,\r\n});\r\n\r\nconst mapDispatchToProps = (\r\n  dispatch: ThunkDispatch<any, any, AppActions>\r\n): LinkDispatchProps => ({\r\n  requestCourse: bindActionCreators(requestCourse, dispatch),\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withStyles(useStyles)(Course));\r\n"],"sourceRoot":""}