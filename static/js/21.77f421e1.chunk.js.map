{"version":3,"sources":["_actions/guide.actions.ts","_actions/course.actions.ts","_actions/exercise.actions.ts","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","_actions/lesson.actions.ts","../node_modules/@material-ui/core/esm/ListItemAvatar/ListItemAvatar.js","components/LearningPages/Guide/GuideItems.tsx","components/LearningPages/Guide/index.tsx"],"names":["requestAllGuide","dispatch","getState","guideState","bank","guides","resetTime","getTheTime","nextLoad","data","type","REQUEST_GUIDES","API","get","then","res","SUCCESS_GUIDES","payload","catch","err","errorHandler","FAILURE_GUIDES","requestGuide","path","guide","newPath","found","find","id","SUCCESS_GUIDE","SAVE_COURSES","addCourses","guide_select","SAVE_EXERCISES","addExercises","course","requestCourse","exercise","requestExercise","REQUEST_GUIDE","SAVE_GUIDES","FAILURE_GUIDE","added","map","lesson","push","requestAllCourse","courseState","courses","REQUEST_COURSES","SUCCESS_COURSES","FAILURE_COURSES","compiler","Compiler","course_select","SUCCESS_COURSE","SAVE_LESSONS","lessons","exercises","requestLesson","REQUEST_COURSE","FAILURE_COURSE","select","info","genre","name","requestAllExercise","exerciseState","REQUEST_EXERCISES","SUCCESS_EXERCISES","FAILURE_EXERCISES","console","log","SUCCESS_EXERCISE","REQUEST_EXERCISE","FAILURE_EXERCISE","_objectWithoutProperties","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","call","requestAllLesson","lessonState","REQUEST_LESSONS","SUCCESS_LESSONS","FAILURE_LESSONS","SUCCESS_LESSON","REQUEST_LESSON","FAILURE_LESSON","ListItemAvatar","React","props","ref","classes","className","other","context","ListContext","_extends","clsx","root","alignItems","alignItemsFlexStart","withStyles","minWidth","flexShrink","marginTop","useStyles","makeStyles","theme","createStyles","width","height","margin","spacing","cardAction","justifyContent","content","minHeight","rightChip","position","cursor","backgroundColor","leftChip","right","CourseItem","index","courseItem","title","thumbnails","grade","Card","CardActionArea","onClick","e","store","Chip","label","color","CardMedia","component","alt","image","thumbnailsFinder","CardContent","Typography","gutterBottom","variant","ExerciseItem","exerciseItem","featured_img","Guide","pathFinder","this","pathname","loading","error","counter","Grid","container","justify","CircularProgress","autoMargin","k","List","ListItem","Avatar","ListItemText","primary","season","secondary","exercise_description","Divider","guideItem","course_description","Component","connect","state","ownProps","router","location","single","bindActionCreators","breakpoints","down","padding"],"mappings":"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","file":"static/js/21.77f421e1.chunk.js","sourcesContent":["import { Dispatch } from \"react\";\r\nimport {\r\n  SAVE_GUIDES,\r\n  FAILURE_GUIDE,\r\n  REQUEST_GUIDE,\r\n  SUCCESS_GUIDE,\r\n  FAILURE_GUIDES,\r\n  REQUEST_GUIDES,\r\n  SUCCESS_GUIDES,\r\n  GuideSelect,\r\n} from \"../_types/guide.types\";\r\nimport { AppState } from \"../_types\";\r\nimport { API } from \"../_helpers/api\";\r\nimport { AppActions } from \"../_types\";\r\nimport { errorHandler } from \"../components/Layout/SnackBar/alert\";\r\nimport { ILesson } from \"../_types/lesson.types\";\r\nimport { getTheTime, PathFinder } from \"../_helpers/constants\";\r\nimport { SAVE_EXERCISES } from \"../_types/exercise.types\";\r\nimport { ICourse, SAVE_COURSES } from \"../_types/course.types\";\r\nimport { requestExercise } from \"./exercise.actions\";\r\nimport { requestCourse } from \"./course.actions\";\r\nimport { ThunkDispatch } from \"redux-thunk\";\r\n\r\nexport const requestAllGuide = () => (\r\n  (dispatch: Dispatch<AppActions>, getState: () => AppState) => {\r\n    const guideState = getState().bank.guides;\r\n    const currentTime = getTheTime();\r\n    const resetTime = currentTime - guideState.nextLoad;\r\n    if (guideState.data && resetTime <= 0) {\r\n      return;\r\n    }\r\n    dispatch({ type: REQUEST_GUIDES });\r\n\r\n    API.get(`/lesson/v2/guide`)\r\n      .then(res => dispatch({\r\n        type: SUCCESS_GUIDES, payload: {\r\n          data: res.data,\r\n          nextLoad: getTheTime(10)\r\n        }\r\n      }))\r\n      .catch(err => errorHandler(err, FAILURE_GUIDES))\r\n  }\r\n)\r\n\r\nexport const requestGuide = (path: PathFinder) => (\r\n  (dispatch: ThunkDispatch<AppState, undefined, AppActions>, getState: () => AppState) => {\r\n    const { guide, ...newPath } = path;\r\n    const found = getState().bank.guides.data.find(guide => guide.id === path.guide);\r\n    if (found) {\r\n\r\n      dispatch({ type: SUCCESS_GUIDE, data: found });\r\n      dispatch({ type: SAVE_COURSES, data: addCourses(found.guide_select) });\r\n      dispatch({ type: SAVE_EXERCISES, data: addExercises(found.guide_select) });\r\n      if (path.course) dispatch(requestCourse(newPath));\r\n      if (path.exercise) dispatch(requestExercise(newPath));\r\n    } else {\r\n\r\n      dispatch({ type: REQUEST_GUIDE });\r\n      API.get(`/lesson/v2/guide?id=${path.guide}`)\r\n        .then(res => {\r\n          dispatch({ type: SUCCESS_GUIDE, data: res.data[0] });\r\n          dispatch({ type: SAVE_GUIDES, data: res.data });\r\n          dispatch({ type: SAVE_COURSES, data: addCourses(res.data[0].guide_select) });\r\n          dispatch({ type: SAVE_EXERCISES, data: addExercises(res.data[0].guide_select) });\r\n          if (path.course) dispatch(requestCourse(newPath));\r\n          if (path.exercise) dispatch(requestExercise(newPath));\r\n        })\r\n        .catch(err => errorHandler(err, FAILURE_GUIDE));\r\n    }\r\n  }\r\n)\r\n\r\nconst addCourses = (guide_select: GuideSelect[]) => {\r\n  const added: ICourse[] = []\r\n  guide_select.map((course) => course.course?.map(lesson => added.push(lesson)))\r\n  return added;\r\n};\r\nconst addExercises = (guide_select: GuideSelect[]) => {\r\n  const added: ILesson[] = []\r\n  guide_select.map((course) => course.exercise?.map(exercise => added.push(exercise)))\r\n  return added;\r\n}","import { Dispatch } from \"react\";\r\nimport {\r\n  SAVE_COURSES,\r\n  FAILURE_COURSE,\r\n  REQUEST_COURSE,\r\n  SUCCESS_COURSE,\r\n  FAILURE_COURSES,\r\n  REQUEST_COURSES,\r\n  SUCCESS_COURSES,\r\n} from \"../_types/course.types\";\r\nimport { AppState } from \"../_types\";\r\nimport { API } from \"../_helpers/api\";\r\nimport { AppActions } from \"../_types\";\r\nimport { errorHandler } from \"../components/Layout/SnackBar/alert\";\r\nimport { getTheTime, PathFinder } from \"../_helpers/constants\";\r\nimport { SAVE_EXERCISES } from \"../_types/exercise.types\";\r\nimport { ILesson, SAVE_LESSONS } from \"../_types/lesson.types\";\r\nimport { requestGuide } from \"./guide.actions\";\r\nimport { ThunkDispatch } from \"redux-thunk\";\r\nimport { requestLesson } from \"./lesson.actions\";\r\nimport { requestExercise } from \"./exercise.actions\";\r\n\r\nexport const requestAllCourse = () => (\r\n  (dispatch: Dispatch<AppActions>, getState: () => AppState) => {\r\n    const courseState = getState().bank.courses;\r\n    const currentTime = getTheTime();\r\n    const resetTime = currentTime - courseState.nextLoad;\r\n    if (courseState.data && resetTime <= 0) {\r\n      return;\r\n    }\r\n    dispatch({ type: REQUEST_COURSES });\r\n\r\n    API.get(`/lesson/v2/course`)\r\n      .then(res => dispatch({\r\n        type: SUCCESS_COURSES, payload: {\r\n          data: res.data,\r\n          nextLoad: getTheTime(10)\r\n        }\r\n      }))\r\n      .catch(err => errorHandler(err, FAILURE_COURSES))\r\n  }\r\n)\r\n\r\nexport const requestCourse = (path: PathFinder) => (\r\n  (dispatch: ThunkDispatch<AppState, undefined, AppActions>, getState: () => AppState) => {\r\n    const found = getState().bank.courses.data.find(course => course.id === path.course);\r\n    const { course, ...newPath } = path;\r\n    if (found) {\r\n\r\n      const compiler = Compiler(found.course_select);\r\n      dispatch({ type: SUCCESS_COURSE, data: found })\r\n      dispatch({ type: SAVE_LESSONS, data: compiler.lessons })\r\n      dispatch({ type: SAVE_EXERCISES, data: compiler.exercises })\r\n      if (path.lesson) dispatch(requestLesson(newPath))\r\n      if (path.exercise) dispatch(requestExercise(newPath))\r\n    }\r\n    else if (path.guide) {\r\n      dispatch(requestGuide(path))\r\n    }\r\n    else if (!found) {\r\n\r\n      dispatch({ type: REQUEST_COURSE });\r\n      API.get(`/lesson/v2/course?id=${path.course}`)\r\n        .then(res => {\r\n          const compiler = Compiler(res.data[0].course_select);\r\n          dispatch({ type: SUCCESS_COURSE, data: res.data[0] })\r\n          dispatch({ type: SAVE_COURSES, data: res.data })\r\n          dispatch({ type: SAVE_LESSONS, data: compiler.lessons })\r\n          dispatch({ type: SAVE_EXERCISES, data: compiler.exercises })\r\n          if (path.lesson) dispatch(requestLesson(newPath))\r\n          if (path.exercise) dispatch(requestExercise(newPath))\r\n        })\r\n        .catch(err => errorHandler(err, FAILURE_COURSE))\r\n    }\r\n  }\r\n)\r\n\r\nconst Compiler = (course_select: ILesson[]) => {\r\n  const lessons: ILesson[] = []\r\n  const exercises: ILesson[] = []\r\n  course_select.map(select => select.info.genre.name === \"Exercise\" ? exercises.push(select) : lessons.push(select))\r\n  return { lessons, exercises };\r\n};\r\n","import { Dispatch } from \"react\";\r\nimport {\r\n  FAILURE_EXERCISE,\r\n  REQUEST_EXERCISE,\r\n  SUCCESS_EXERCISE,\r\n  FAILURE_EXERCISES,\r\n  REQUEST_EXERCISES,\r\n  SUCCESS_EXERCISES,\r\n  SAVE_EXERCISES,\r\n} from \"../_types/exercise.types\";\r\nimport { API } from \"../_helpers/api\";\r\nimport { AppState } from \"../_types\";\r\nimport { AppActions } from \"../_types\";\r\nimport { getTheTime, PathFinder } from \"../_helpers/constants\";\r\nimport { errorHandler } from \"../components/Layout/SnackBar/alert\";\r\nimport { ThunkDispatch } from \"redux-thunk\";\r\nimport { requestGuide } from \"./guide.actions\";\r\nimport { requestCourse } from \"./course.actions\";\r\n\r\nexport const requestAllExercise = () => (\r\n  (dispatch: Dispatch<AppActions>, getState: () => AppState) => {\r\n    const exerciseState = getState().bank.exercises;\r\n    const currentTime = getTheTime();\r\n    const resetTime = currentTime - exerciseState.nextLoad;\r\n    if (exerciseState.data && resetTime <= 0) {\r\n      return;\r\n    }\r\n    dispatch({ type: REQUEST_EXERCISES });\r\n\r\n    API.get(`/lesson/v2?course=125`)\r\n      .then(res => dispatch({\r\n        type: SUCCESS_EXERCISES, payload: {\r\n          data: res.data,\r\n          nextLoad: getTheTime(10)\r\n        }\r\n      }))\r\n      .catch(err => errorHandler(err, FAILURE_EXERCISES))\r\n  }\r\n)\r\n\r\nexport const requestExercise = (path: PathFinder) => (\r\n  (dispatch: ThunkDispatch<AppState, undefined, AppActions>, getState: () => AppState) => {\r\n    const found = getState().bank.exercises.data.find(exercise => exercise.id === path.exercise);\r\n    console.log(path)\r\n    if (found) {\r\n      dispatch({ type: SUCCESS_EXERCISE, data: found })\r\n    }\r\n    else if (path.guide) {\r\n      dispatch(requestGuide(path))\r\n    }\r\n    else if (path.course) {\r\n      dispatch(requestCourse(path))\r\n    }\r\n    else if (!found) {\r\n      dispatch({ type: REQUEST_EXERCISE });\r\n      API.get(`/lesson/v2?id=${path.exercise}`)\r\n        .then(res => {\r\n          dispatch({ type: SUCCESS_EXERCISE, data: res.data[0] })\r\n          dispatch({ type: SAVE_EXERCISES, data: res.data })\r\n        })\r\n        .catch(err => errorHandler(err, FAILURE_EXERCISE))\r\n    }\r\n  }\r\n)","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import { Dispatch } from \"react\";\r\nimport {\r\n  FAILURE_LESSON,\r\n  REQUEST_LESSON,\r\n  SUCCESS_LESSON,\r\n  FAILURE_LESSONS,\r\n  REQUEST_LESSONS,\r\n  SUCCESS_LESSONS,\r\n  SAVE_LESSONS,\r\n} from \"../_types/lesson.types\";\r\nimport { API } from \"../_helpers/api\";\r\nimport { AppState } from \"../_types\";\r\nimport { AppActions } from \"../_types\";\r\nimport { getTheTime, PathFinder } from \"../_helpers/constants\";\r\nimport { errorHandler } from \"../components/Layout/SnackBar/alert\";\r\nimport { requestGuide } from \"./guide.actions\";\r\nimport { requestCourse } from \"./course.actions\";\r\nimport { ThunkDispatch } from \"redux-thunk\";\r\n\r\nexport const requestAllLesson = () => (\r\n  (dispatch: Dispatch<AppActions>, getState: () => AppState) => {\r\n    const lessonState = getState().bank.lessons;\r\n    const currentTime = getTheTime();\r\n    const resetTime = currentTime - lessonState.nextLoad;\r\n    if (lessonState.data && resetTime <= 0) {\r\n      return;\r\n    }\r\n    dispatch({ type: REQUEST_LESSONS });\r\n\r\n    API.get(`/lesson/v2`)\r\n      .then(res => dispatch({\r\n        type: SUCCESS_LESSONS, payload: {\r\n          data: res.data,\r\n          nextLoad: getTheTime(10)\r\n        }\r\n      }))\r\n      .catch(err => errorHandler(err, FAILURE_LESSONS))\r\n  }\r\n)\r\n\r\nexport const requestLesson = (path: PathFinder) => (\r\n  (dispatch: ThunkDispatch<AppState, undefined, AppActions>, getState: () => AppState) => {\r\n    const found = getState().bank.lessons.data.find(lesson => lesson.id === path.lesson);\r\n\r\n    if (found) {\r\n      dispatch({ type: SUCCESS_LESSON, data: found })\r\n    }\r\n    else if (path.guide) {\r\n      dispatch(requestGuide(path))\r\n    }\r\n    else if (path.course) {\r\n      dispatch(requestCourse(path))\r\n    }\r\n    else if (!found) {\r\n      dispatch({ type: REQUEST_LESSON });\r\n      API.get(`/lesson/v2?id=${path.lesson}`)\r\n        .then(res => {\r\n          dispatch({ type: SUCCESS_LESSON, data: res.data[0] })\r\n          dispatch({ type: SAVE_LESSONS, data: res.data })\r\n        })\r\n        .catch(err => errorHandler(err, FAILURE_LESSON))\r\n    }\r\n  }\r\n)\r\n\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport ListContext from '../List/ListContext';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    minWidth: 56,\n    flexShrink: 0\n  },\n\n  /* Styles applied to the root element when the parent `ListItem` uses `alignItems=\"flex-start\"`. */\n  alignItemsFlexStart: {\n    marginTop: 8\n  }\n};\n/**\n * A simple wrapper to apply `List` styles to an `Avatar`.\n */\n\nvar ListItemAvatar = /*#__PURE__*/React.forwardRef(function ListItemAvatar(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\"]);\n\n  var context = React.useContext(ListContext);\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, context.alignItems === 'flex-start' && classes.alignItemsFlexStart),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItemAvatar.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component – normally `Avatar`.\n   */\n  children: PropTypes.element.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiListItemAvatar'\n})(ListItemAvatar);","import React from \"react\";\r\nimport { push } from \"connected-react-router\";\r\nimport {\r\n  Card,\r\n  CardMedia,\r\n  Typography,\r\n  CardContent,\r\n  CardActionArea,\r\n  Chip,\r\n} from \"@material-ui/core\";\r\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\r\n\r\nimport { store } from \"../../../_store/store.config\";\r\nimport { thumbnailsFinder } from \"../../../_helpers/constants\";\r\nimport { ILesson } from \"../../../_types/lesson.types\";\r\nimport { ICourse } from \"../../../_types/course.types\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      width: 300,\r\n      height: 260,\r\n      margin: theme.spacing(1),\r\n    },\r\n    cardAction: {\r\n      justifyContent: \"space-between\",\r\n      margin: \"inherit\",\r\n    },\r\n    content: {\r\n      minHeight: 130,\r\n    },\r\n    rightChip: {\r\n      position: \"absolute\",\r\n      cursor: \"pointer\",\r\n      margin: theme.spacing(1),\r\n      backgroundColor: \"green\",\r\n    },\r\n    leftChip: {\r\n      position: \"absolute\",\r\n      right: 0,\r\n      cursor: \"pointer\",\r\n      margin: theme.spacing(1),\r\n    },\r\n  })\r\n);\r\n\r\ntype Props = {\r\n  courseItem: ICourse;\r\n  index: number;\r\n  type: string;\r\n  path: string;\r\n};\r\n\r\nexport const CourseItem: React.FC<Props> = ({\r\n  index,\r\n  type,\r\n  courseItem,\r\n  path,\r\n}) => {\r\n  const classes = useStyles();\r\n  const { title, id, thumbnails, grade } = courseItem;\r\n\r\n  const clickHandler = (\r\n    e: React.MouseEvent<HTMLButtonElement, MouseEvent>\r\n  ): void => {\r\n    store.dispatch(push(path + \"/\" + type + id));\r\n  };\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardActionArea onClick={clickHandler}>\r\n        <Chip label={index + 1} className={classes.rightChip} />\r\n        <Chip label={grade} className={classes.leftChip} color=\"secondary\" />\r\n        <CardMedia\r\n          component=\"img\"\r\n          alt={title}\r\n          height=\"130\"\r\n          image={thumbnailsFinder(thumbnails)}\r\n          title={title}\r\n        />\r\n        <CardContent className={classes.content}>\r\n          <Typography gutterBottom variant=\"body1\" component=\"h6\">\r\n            {title}\r\n          </Typography>\r\n        </CardContent>\r\n      </CardActionArea>\r\n    </Card>\r\n  );\r\n};\r\n\r\ntype ExerciseProps = {\r\n  exerciseItem: ILesson;\r\n  index: number;\r\n  type: string;\r\n  path: string;\r\n};\r\n\r\nexport const ExerciseItem: React.FC<ExerciseProps> = ({\r\n  exerciseItem,\r\n  index,\r\n  type,\r\n  path,\r\n}) => {\r\n  const classes = useStyles();\r\n  const { title, id, featured_img, info } = exerciseItem;\r\n\r\n  const clickHandler = (\r\n    e: React.MouseEvent<HTMLButtonElement, MouseEvent>\r\n  ): void => {\r\n    store.dispatch(push(path + \"/\" + type + id));\r\n  };\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardActionArea onClick={clickHandler}>\r\n        <Chip label={index + 1} className={classes.rightChip} />\r\n        <Chip\r\n          label={info.grade.name}\r\n          className={classes.leftChip}\r\n          color=\"secondary\"\r\n        />\r\n        <CardMedia\r\n          component=\"img\"\r\n          alt={title}\r\n          height=\"130\"\r\n          image={thumbnailsFinder(featured_img)}\r\n          title={title}\r\n        />\r\n        <CardContent className={classes.content}>\r\n          <Typography gutterBottom variant=\"body1\" component=\"h6\">\r\n            {title}\r\n          </Typography>\r\n        </CardContent>\r\n      </CardActionArea>\r\n    </Card>\r\n  );\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { ThunkDispatch } from \"redux-thunk\";\r\nimport {\r\n  CircularProgress,\r\n  Grid,\r\n  createStyles,\r\n  Theme,\r\n  Typography,\r\n  WithStyles,\r\n  withStyles,\r\n  Divider,\r\n  Chip,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  ListItemAvatar,\r\n  Avatar,\r\n} from \"@material-ui/core\";\r\nimport { AppActions, AppState } from \"../../../_types\";\r\nimport { IGuide } from \"../../../_types/guide.types\";\r\nimport { pathFinder, PathFinder, season } from \"../../../_helpers/constants\";\r\nimport { requestGuide } from \"../../../_actions/guide.actions\";\r\nimport { CourseItem, ExerciseItem } from \"./GuideItems\";\r\n\r\nconst useStyles = (theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      width: \"99vw\",\r\n      minHeight: \"calc(100vh - 128px)\",\r\n      [theme.breakpoints.down(\"xs\")]: {\r\n        minHeight: \"calc(100vh - 112px)\",\r\n        padding: theme.spacing(1),\r\n      },\r\n      padding: theme.spacing(2),\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n    },\r\n    autoMargin: {\r\n      margin: \"auto\",\r\n    },\r\n  });\r\n\r\ninterface GuideProps extends WithStyles<typeof useStyles> {\r\n  data?: IGuide;\r\n  loading: boolean;\r\n  error: string;\r\n  pathname: string;\r\n}\r\n\r\ntype Props = GuideProps & LinkDispatchProps;\r\n\r\nclass Guide extends Component<Props> {\r\n  componentDidMount() {\r\n    const path = pathFinder(this.props.pathname);\r\n    if (path.guide) this.props.requestGuide(path);\r\n  }\r\n\r\n  render() {\r\n    const { classes, data, loading, error, pathname } = this.props;\r\n    let counter = 0;\r\n    return (\r\n      <Grid container justify=\"center\" className={classes.root}>\r\n        {loading ? (\r\n          <CircularProgress color=\"secondary\" className={classes.autoMargin} />\r\n        ) : data ? (\r\n          data.guide_select.map((guide, k) => (\r\n            <List key={k}>\r\n              {guide.exercise && (\r\n                <>\r\n                  <ListItem>\r\n                    <ListItemAvatar>\r\n                      <Avatar>\r\n                        <Chip label={++counter} color=\"secondary\" />\r\n                      </Avatar>\r\n                    </ListItemAvatar>\r\n                    <ListItemText\r\n                      primary={season[counter]}\r\n                      secondary={guide.exercise_description}\r\n                    />\r\n                  </ListItem>\r\n                  <Divider variant=\"inset\" component=\"li\" />\r\n                  <Grid container justify=\"center\">\r\n                    {guide.exercise.map((guideItem, i) => (\r\n                      <ExerciseItem\r\n                        key={i}\r\n                        index={i}\r\n                        type={\"exercise=\"}\r\n                        path={pathname}\r\n                        exerciseItem={guideItem}\r\n                      />\r\n                    ))}\r\n                  </Grid>\r\n                </>\r\n              )}\r\n              {guide.course && (\r\n                <>\r\n                  <ListItem>\r\n                    <ListItemAvatar>\r\n                      <Avatar>\r\n                        <Chip label={++counter} color=\"secondary\" />\r\n                      </Avatar>\r\n                    </ListItemAvatar>\r\n                    <ListItemText\r\n                      primary={season[counter]}\r\n                      secondary={guide.course_description}\r\n                    />\r\n                  </ListItem>\r\n                  <Divider variant=\"inset\" component=\"li\" />\r\n                  <Grid container justify=\"center\">\r\n                    {guide.course?.map((guideItem, i) => (\r\n                      <CourseItem\r\n                        key={i}\r\n                        index={i}\r\n                        type={\"course=\"}\r\n                        path={pathname}\r\n                        courseItem={guideItem}\r\n                      />\r\n                    ))}\r\n                  </Grid>\r\n                </>\r\n              )}\r\n            </List>\r\n          ))\r\n        ) : (\r\n          <Typography component=\"div\" className={classes.autoMargin}>\r\n            {error}\r\n          </Typography>\r\n        )}\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\ninterface LinkDispatchProps {\r\n  requestGuide: (path: PathFinder) => void;\r\n}\r\n\r\nconst mapStateToProps = (state: AppState, ownProps: Props): GuideProps => ({\r\n  pathname: state.router.location.pathname,\r\n  classes: ownProps.classes,\r\n  ...state.single.guide,\r\n});\r\n\r\nconst mapDispatchToProps = (\r\n  dispatch: ThunkDispatch<any, any, AppActions>\r\n): LinkDispatchProps => ({\r\n  requestGuide: bindActionCreators(requestGuide, dispatch),\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withStyles(useStyles)(Guide));\r\n"],"sourceRoot":""}