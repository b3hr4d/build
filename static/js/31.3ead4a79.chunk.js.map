{"version":3,"sources":["../node_modules/@material-ui/icons/LockOutlined.js","components/Layout/Captcha/ReCaptcha.tsx","components/Layout/Captcha/Captcha.tsx","components/AuthPages/LoginPage.tsx"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","_react","_default","createElement","d","ReCaptcha","state","loading","script","loadScript","window","captchaOnLoad","onLoad","document","type","src","url","async","defer","body","appendChild","callback","props","onChange","grecaptcha","render","sitekey","size","theme","ready","setState","this","removeChild","classes","onError","className","root","LinearProgress","color","id","captchaWarning","captcha","Typography","variant","React","withStyles","createStyles","position","minHeight","zIndex","margin","borderRadius","border","Captcha","form","setFieldValue","errors","touched","name","field","store","getState","auth","useCallback","event","action","recaptcha","LoginPage","loggedIn","push","component","maxWidth","style","paddingTop","textAlign","initialValues","username","password","validationSchema","Yup","shape","max","required","onSubmit","resetForm","login","values","mb","align","gutterBottom","item","fullWidth","disabled","mt","my","TextField","label","placeholder","container","xs","RouterLink","to","Component","connect","dispatch","bindActionCreators","loginRequest","logout","logoutRequest"],"mappings":"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","file":"static/js/31.3ead4a79.chunk.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M18 8h-1V6c0-2.76-2.24-5-5-5S7 3.24 7 6v2H6c-1.1 0-2 .9-2 2v10c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V10c0-1.1-.9-2-2-2zM9 6c0-1.66 1.34-3 3-3s3 1.34 3 3v2H9V6zm9 14H6V10h12v10zm-6-3c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2z\"\n}), 'LockOutlined');\n\nexports.default = _default;","import {\r\n  createStyles,\r\n  LinearProgress,\r\n  Theme,\r\n  Typography,\r\n  WithStyles,\r\n  withStyles,\r\n} from \"@material-ui/core\";\r\nimport { FormikErrors } from \"formik\";\r\nimport * as React from \"react\";\r\n\r\ndeclare global {\r\n  interface Window {\r\n    captchaOnLoad: () => void;\r\n    grecaptcha: ReCaptchaInstance;\r\n    webkitAudioContext: {\r\n      new (contextOptions?: AudioContextOptions | undefined): AudioContext;\r\n      prototype: AudioContext;\r\n    };\r\n    zones: any;\r\n  }\r\n}\r\n\r\ninterface ReCaptchaInstance {\r\n  ready: (cb: () => any) => any;\r\n  execute: (options: ReCaptchaExecuteOptions) => Promise<string>;\r\n  render: (id: string, options: ReCaptchaRenderOptions) => any;\r\n}\r\n\r\ninterface ReCaptchaExecuteOptions {\r\n  action: string;\r\n}\r\n\r\ninterface ReCaptchaRenderOptions {\r\n  callback: () => void;\r\n  sitekey: string;\r\n  size: \"normal\";\r\n  theme: \"dark\" | \"light\";\r\n}\r\n\r\nconst useStyles = (theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      position: \"relative\",\r\n      minHeight: 80,\r\n    },\r\n    captcha: {\r\n      zIndex: 2,\r\n      \"& > div:first-child\": {\r\n        margin: \"auto\",\r\n        \"& > div > iframe\": {\r\n          borderRadius: 4,\r\n          border: \"1px solid\",\r\n        },\r\n      },\r\n    },\r\n    captchaWarning: {\r\n      \"& > div:first-child\": {\r\n        margin: \"auto\",\r\n        \"& > div > iframe\": {\r\n          borderRadius: 4,\r\n          border: \"1px solid red\",\r\n        },\r\n      },\r\n    },\r\n  });\r\n\r\ninterface Props extends WithStyles<typeof useStyles> {\r\n  action: string;\r\n  theme: \"light\" | \"dark\";\r\n  onError: error;\r\n  onChange: (val: boolean) => void;\r\n}\r\ntype error =\r\n  | string\r\n  | false\r\n  | FormikErrors<any>\r\n  | string[]\r\n  | FormikErrors<any>[]\r\n  | undefined;\r\n\r\ninterface State {\r\n  readonly loading: boolean;\r\n}\r\n\r\nclass ReCaptcha extends React.PureComponent<Props, State> {\r\n  state: State = {\r\n    loading: true,\r\n  };\r\n\r\n  private script!: HTMLScriptElement;\r\n\r\n  componentDidMount(): void {\r\n    this.loadScript();\r\n  }\r\n\r\n  componentWillUnmount(): void {\r\n    document.body.removeChild(this.script);\r\n  }\r\n\r\n  render() {\r\n    const { classes, onError } = this.props;\r\n\r\n    return (\r\n      <div className={classes.root}>\r\n        {this.state.loading && <LinearProgress color=\"secondary\" />}\r\n        <div\r\n          id=\"g-recaptcha\"\r\n          className={onError ? classes.captchaWarning : classes.captcha}\r\n        />\r\n        <Typography color=\"error\" variant=\"caption\">\r\n          {onError}\r\n        </Typography>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private loadScript = (): void => {\r\n    window.captchaOnLoad = this.onLoad;\r\n\r\n    const url = \"https://www.google.com/recaptcha/api.js\";\r\n    const queryString = \"?onload=captchaOnLoad&render=explicit&hl=fa\";\r\n    const script = document.createElement(\"script\");\r\n    script.type = \"text/javascript\";\r\n    script.src = url + queryString;\r\n    script.async = true;\r\n    script.defer = true;\r\n    this.script = document.body.appendChild(script);\r\n  };\r\n\r\n  private callback = () => {\r\n    this.props.onChange(true);\r\n  };\r\n\r\n  private onLoad = (): void => {\r\n    window.grecaptcha.render(\"g-recaptcha\", {\r\n      callback: this.callback,\r\n      sitekey: \"6Le8wccUAAAAAA0kNONoUC-NKPecGnUGKRY7zMno\",\r\n      size: \"normal\",\r\n      theme: this.props.theme,\r\n    });\r\n\r\n    window.grecaptcha.ready(() => {\r\n      this.setState({ loading: false });\r\n    });\r\n  };\r\n}\r\n\r\nexport default withStyles(useStyles)(ReCaptcha);\r\n","import React, { useCallback } from \"react\";\r\nimport { SwitchProps } from \"formik-material-ui\";\r\nimport ReCaptcha from \"./ReCaptcha\";\r\nimport { store } from \"../../../_store/store.config\";\r\n\r\nexport function Captcha(props: SwitchProps) {\r\n  const {\r\n    form: { setFieldValue, errors, touched },\r\n    field: { name },\r\n  } = props;\r\n\r\n  const theme = store.getState().auth.theme;\r\n  const onChange = useCallback(\r\n    (event) => {\r\n      setFieldValue(name, event ? true : false);\r\n    },\r\n    [setFieldValue, name]\r\n  );\r\n  return (\r\n    <ReCaptcha\r\n      action=\"login\"\r\n      theme={theme}\r\n      onChange={onChange}\r\n      onError={touched.recaptcha && errors.recaptcha}\r\n    />\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport * as Yup from \"yup\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { ThunkDispatch } from \"redux-thunk\";\r\nimport { Field, Form, Formik } from \"formik\";\r\nimport { TextField } from \"formik-material-ui\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport {\r\n  Avatar,\r\n  CssBaseline,\r\n  Box,\r\n  Button,\r\n  Container,\r\n  Link,\r\n  Grid,\r\n  Typography,\r\n  LinearProgress,\r\n} from \"@material-ui/core\";\r\n\r\nimport { AppState } from \"../../_types\";\r\nimport { AppActions } from \"../../_types\";\r\nimport { IUser } from \"../../_types/auth.types\";\r\nimport { Captcha } from \"../Layout/Captcha/Captcha\";\r\nimport { loginRequest, logoutRequest } from \"../../_actions/user.actions\";\r\nimport { push } from \"connected-react-router\";\r\nimport { Path } from \"history\";\r\n\r\ninterface LoginPageProps {\r\n  loading: boolean;\r\n  loggedIn: boolean;\r\n}\r\n\r\ntype Props = LoginPageProps & LinkDispatchProps;\r\n\r\nclass LoginPage extends React.Component<Props> {\r\n  componentDidMount() {\r\n    if (this.props.loggedIn) {\r\n      this.props.push(\"/profile\");\r\n    }\r\n  }\r\n  render() {\r\n    const { loading, loggedIn } = this.props;\r\n    return !loggedIn ? (\r\n      <Container component=\"main\" maxWidth=\"xs\" style={{ paddingTop: \"10px\" }}>\r\n        <CssBaseline />\r\n        <div style={{ textAlign: \"center\" }}>\r\n          <Avatar style={{ margin: \"auto\" }}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Sign in\r\n          </Typography>\r\n          <Formik\r\n            initialValues={{\r\n              username: \"\",\r\n              password: \"\",\r\n              recaptcha: false,\r\n            }}\r\n            validationSchema={Yup.object().shape({\r\n              username: Yup.string()\r\n                .max(255)\r\n                .required(\"Email or Username is required\"),\r\n              password: Yup.string().max(255).required(\"Password is required\"),\r\n              recaptcha: Yup.boolean().required(\"ReCAPTCHA is required\"),\r\n            })}\r\n            onSubmit={(event: IUser, { resetForm }) => {\r\n              this.props.login({\r\n                username: event.username,\r\n                password: event.password,\r\n              });\r\n              resetForm({\r\n                values: {\r\n                  username: event.username,\r\n                  password: \"\",\r\n                  recaptcha: event.recaptcha,\r\n                },\r\n              });\r\n            }}\r\n          >\r\n            <Form>\r\n              <Box mb={3}>\r\n                <Typography\r\n                  color=\"textSecondary\"\r\n                  align=\"center\"\r\n                  gutterBottom\r\n                  variant=\"body2\"\r\n                >\r\n                  Sign in on the internal platform\r\n                </Typography>\r\n              </Box>\r\n              <Grid item>\r\n                <Button\r\n                  fullWidth\r\n                  size=\"large\"\r\n                  variant=\"contained\"\r\n                  type=\"submit\"\r\n                  disabled={true}\r\n                >\r\n                  Login with Google\r\n                </Button>\r\n              </Grid>\r\n              <Box mt={3} mb={1}>\r\n                <Typography\r\n                  align=\"center\"\r\n                  color=\"textSecondary\"\r\n                  variant=\"body1\"\r\n                >\r\n                  or login with username / email address\r\n                </Typography>\r\n              </Box>\r\n              <Box my={1}>\r\n                <Field\r\n                  component={TextField}\r\n                  color=\"secondary\"\r\n                  fullWidth\r\n                  label=\"Email Address/Username\"\r\n                  margin=\"normal\"\r\n                  name=\"username\"\r\n                  id=\"username\"\r\n                  placeholder=\"John\"\r\n                  type=\"username\"\r\n                  variant=\"outlined\"\r\n                />\r\n              </Box>\r\n              <Box my={1}>\r\n                <Field\r\n                  component={TextField}\r\n                  color=\"secondary\"\r\n                  fullWidth\r\n                  label=\"Password\"\r\n                  margin=\"normal\"\r\n                  name=\"password\"\r\n                  type=\"password\"\r\n                  variant=\"outlined\"\r\n                />\r\n              </Box>\r\n              <Box my={1}>\r\n                <Field\r\n                  component={Captcha}\r\n                  color=\"secondary\"\r\n                  fullWidth\r\n                  label=\"Recaptcha\"\r\n                  margin=\"normal\"\r\n                  name=\"recaptcha\"\r\n                  type=\"recaptcha\"\r\n                  variant=\"outlined\"\r\n                />\r\n              </Box>\r\n              {loading && <LinearProgress color=\"secondary\" />}\r\n              <Box my={1}>\r\n                <Button\r\n                  color=\"secondary\"\r\n                  disabled={loading}\r\n                  fullWidth\r\n                  size=\"large\"\r\n                  type=\"submit\"\r\n                  variant=\"contained\"\r\n                >\r\n                  Sign in\r\n                </Button>\r\n              </Box>\r\n              <Grid container style={{ textAlign: \"initial\" }}>\r\n                <Grid item xs>\r\n                  <Link\r\n                    color=\"secondary\"\r\n                    component={RouterLink}\r\n                    to=\"/lostpassword\"\r\n                    variant=\"body2\"\r\n                  >\r\n                    Forgot password?\r\n                  </Link>\r\n                </Grid>\r\n                <Grid item>\r\n                  <Typography color=\"textSecondary\" variant=\"body2\">\r\n                    {\"Don't have an account? \"}\r\n                    <Link\r\n                      color=\"secondary\"\r\n                      component={RouterLink}\r\n                      to=\"/register\"\r\n                      variant=\"body2\"\r\n                    >\r\n                      Sign up\r\n                    </Link>\r\n                  </Typography>\r\n                </Grid>\r\n              </Grid>\r\n            </Form>\r\n          </Formik>\r\n        </div>\r\n      </Container>\r\n    ) : null;\r\n  }\r\n}\r\n\r\ninterface LinkDispatchProps {\r\n  login: (user: IUser) => void;\r\n  logout: () => void;\r\n  push: (path: Path) => void;\r\n}\r\n\r\nconst mapStateToProps = (state: AppState): LoginPageProps => {\r\n  const { loggedIn, loading } = state.auth;\r\n  return {\r\n    loggedIn,\r\n    loading,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (\r\n  dispatch: ThunkDispatch<any, any, AppActions>\r\n): LinkDispatchProps => ({\r\n  login: bindActionCreators(loginRequest, dispatch),\r\n  logout: bindActionCreators(logoutRequest, dispatch),\r\n  push: bindActionCreators(push, dispatch),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginPage);\r\n"],"sourceRoot":""}