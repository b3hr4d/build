{"version":3,"sources":["_actions/guide.actions.ts","_actions/course.actions.ts","_actions/exercise.actions.ts","_actions/lesson.actions.ts","components/LearningPages/Course/CourseItems.tsx","components/LearningPages/Course/index.tsx"],"names":["requestGuide","path","dispatch","getState","guide","newPath","found","bank","guides","data","find","id","type","SUCCESS_GUIDE","SAVE_COURSES","addCourses","guide_select","SAVE_EXERCISES","addExercises","course","requestCourse","exercise","requestExercise","REQUEST_GUIDE","API","get","then","res","SAVE_GUIDES","catch","err","errorHandler","FAILURE_GUIDE","added","map","lesson","push","courses","compiler","Compiler","course_select","SUCCESS_COURSE","SAVE_LESSONS","lessons","exercises","requestLesson","REQUEST_COURSE","FAILURE_COURSE","select","info","genre","name","ENTER_NOTEMODE","SUCCESS_EXERCISE","REQUEST_EXERCISE","FAILURE_EXERCISE","SUCCESS_LESSON","REQUEST_LESSON","FAILURE_LESSON","useStyles","makeStyles","theme","createStyles","root","maxHeight","width","margin","spacing","content","minHeight","rightChip","position","cursor","backgroundColor","CourseItem","courseItem","classes","title","featured_img","Card","className","CardActionArea","onClick","e","typer","store","Grid","container","item","lg","xs","sm","xl","Chip","label","grade","CardMedia","component","alt","height","image","thumbnailsFinder","CardContent","Typography","gutterBottom","variant","Course","pathFinder","this","props","pathname","loading","error","justify","md","thumbnails","text","description","k","key","autoMargin","Component","connect","state","ownProps","router","location","single","bindActionCreators","withStyles","breakpoints","down","padding","palette","secondary","main","opacity"],"mappings":"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","file":"static/js/20.9b0a574b.chunk.js","sourcesContent":["import { ThunkDispatch } from \"redux-thunk\";\r\nimport {\r\n  SAVE_GUIDES,\r\n  FAILURE_GUIDE,\r\n  REQUEST_GUIDE,\r\n  SUCCESS_GUIDE,\r\n  GuideSelect,\r\n} from \"../_types/guide.types\";\r\nimport { AppState } from \"../_types\";\r\nimport { API } from \"../_helpers/api\";\r\nimport { AppActions } from \"../_types\";\r\nimport { requestCourse } from \"./course.actions\";\r\nimport { ILesson } from \"../_types/lesson.types\";\r\nimport { PathFinder } from \"../_helpers/constants\";\r\nimport { requestExercise } from \"./exercise.actions\";\r\nimport { SAVE_EXERCISES } from \"../_types/exercise.types\";\r\nimport { ICourse, SAVE_COURSES } from \"../_types/course.types\";\r\nimport { errorHandler } from \"../components/Layout/SnackBar/alert\";\r\n\r\nexport const requestGuide = (path: PathFinder) => (\r\n  dispatch: ThunkDispatch<AppState, undefined, AppActions>,\r\n  getState: () => AppState\r\n) => {\r\n  const { guide, ...newPath } = path;\r\n  const found = getState().bank.guides.data.find(\r\n    (guide) => guide.id === path.guide\r\n  );\r\n  if (found) {\r\n    dispatch({ type: SUCCESS_GUIDE, data: found });\r\n    dispatch({ type: SAVE_COURSES, data: addCourses(found.guide_select) });\r\n    dispatch({ type: SAVE_EXERCISES, data: addExercises(found.guide_select) });\r\n    if (path.course) dispatch(requestCourse(newPath));\r\n    if (path.exercise) dispatch(requestExercise(newPath));\r\n  } else {\r\n    dispatch({ type: REQUEST_GUIDE });\r\n    API.get(`/lesson/v2/guide?id=${path.guide}`)\r\n      .then((res) => {\r\n        dispatch({ type: SUCCESS_GUIDE, data: res.data[0] });\r\n        dispatch({ type: SAVE_GUIDES, data: res.data });\r\n        dispatch({\r\n          type: SAVE_COURSES,\r\n          data: addCourses(res.data[0].guide_select),\r\n        });\r\n        dispatch({\r\n          type: SAVE_EXERCISES,\r\n          data: addExercises(res.data[0].guide_select),\r\n        });\r\n        if (path.course) dispatch(requestCourse(newPath));\r\n        if (path.exercise) dispatch(requestExercise(newPath));\r\n      })\r\n      .catch((err) => errorHandler(err, FAILURE_GUIDE));\r\n  }\r\n};\r\n\r\nconst addCourses = (guide_select: GuideSelect[]) => {\r\n  const added: ICourse[] = [];\r\n  guide_select.map((course) =>\r\n    course.course?.map((lesson) => added.push(lesson))\r\n  );\r\n  return added;\r\n};\r\nconst addExercises = (guide_select: GuideSelect[]) => {\r\n  const added: ILesson[] = [];\r\n  guide_select.map((course) =>\r\n    course.exercise?.map((exercise) => added.push(exercise))\r\n  );\r\n  return added;\r\n};\r\n","import { ThunkDispatch } from \"redux-thunk\";\r\nimport {\r\n  SAVE_COURSES,\r\n  FAILURE_COURSE,\r\n  REQUEST_COURSE,\r\n  SUCCESS_COURSE,\r\n} from \"../_types/course.types\";\r\nimport { AppState } from \"../_types\";\r\nimport { API } from \"../_helpers/api\";\r\nimport { AppActions } from \"../_types\";\r\nimport { requestGuide } from \"./guide.actions\";\r\nimport { requestLesson } from \"./lesson.actions\";\r\nimport { PathFinder } from \"../_helpers/constants\";\r\nimport { requestExercise } from \"./exercise.actions\";\r\nimport { SAVE_EXERCISES } from \"../_types/exercise.types\";\r\nimport { ILesson, SAVE_LESSONS } from \"../_types/lesson.types\";\r\nimport { errorHandler } from \"../components/Layout/SnackBar/alert\";\r\n\r\nexport const requestCourse = (path: PathFinder) => (\r\n  dispatch: ThunkDispatch<AppState, undefined, AppActions>,\r\n  getState: () => AppState\r\n) => {\r\n  const found = getState().bank.courses.data.find(\r\n    (course) => course.id === path.course\r\n  );\r\n  const { course, ...newPath } = path;\r\n  if (found) {\r\n    const compiler = Compiler(found.course_select);\r\n    dispatch({ type: SUCCESS_COURSE, data: found });\r\n    dispatch({ type: SAVE_LESSONS, data: compiler.lessons });\r\n    dispatch({ type: SAVE_EXERCISES, data: compiler.exercises });\r\n    if (path.lesson) dispatch(requestLesson(newPath));\r\n    if (path.exercise) dispatch(requestExercise(newPath));\r\n  } else if (path.guide) {\r\n    dispatch(requestGuide(path));\r\n  } else if (!found) {\r\n    dispatch({ type: REQUEST_COURSE });\r\n    API.get(`/lesson/v2/course?id=${path.course}`)\r\n      .then((res) => {\r\n        const compiler = Compiler(res.data[0].course_select);\r\n        dispatch({ type: SUCCESS_COURSE, data: res.data[0] });\r\n        dispatch({ type: SAVE_COURSES, data: res.data });\r\n        dispatch({ type: SAVE_LESSONS, data: compiler.lessons });\r\n        dispatch({ type: SAVE_EXERCISES, data: compiler.exercises });\r\n        if (path.lesson) dispatch(requestLesson(newPath));\r\n        if (path.exercise) dispatch(requestExercise(newPath));\r\n      })\r\n      .catch((err) => errorHandler(err, FAILURE_COURSE));\r\n  }\r\n};\r\n\r\nconst Compiler = (course_select: ILesson[]) => {\r\n  const lessons: ILesson[] = [];\r\n  const exercises: ILesson[] = [];\r\n  course_select.map((select) =>\r\n    select.info.genre.name === \"Exercise\"\r\n      ? exercises.push(select)\r\n      : lessons.push(select)\r\n  );\r\n  return { lessons, exercises };\r\n};\r\n","import { ThunkDispatch } from \"redux-thunk\";\r\nimport {\r\n  FAILURE_EXERCISE,\r\n  REQUEST_EXERCISE,\r\n  SUCCESS_EXERCISE,\r\n  SAVE_EXERCISES,\r\n} from \"../_types/exercise.types\";\r\nimport { AppState } from \"../_types\";\r\nimport { API } from \"../_helpers/api\";\r\nimport { AppActions } from \"../_types\";\r\nimport { requestGuide } from \"./guide.actions\";\r\nimport { requestCourse } from \"./course.actions\";\r\nimport { PathFinder } from \"../_helpers/constants\";\r\nimport { ENTER_NOTEMODE } from \"../_types/player.types\";\r\nimport { errorHandler } from \"../components/Layout/SnackBar/alert\";\r\n\r\nexport const requestExercise = (path: PathFinder) => (\r\n  dispatch: ThunkDispatch<AppState, undefined, AppActions>,\r\n  getState: () => AppState\r\n) => {\r\n  const found = getState().bank.exercises.data.find(\r\n    (exercise) => exercise.id === path.exercise\r\n  );\r\n  if (found) {\r\n    dispatch({ type: ENTER_NOTEMODE });\r\n    dispatch({ type: SUCCESS_EXERCISE, data: found });\r\n  } else if (path.guide) {\r\n    dispatch(requestGuide(path));\r\n  } else if (path.course) {\r\n    dispatch(requestCourse(path));\r\n  } else if (!found) {\r\n    dispatch({ type: REQUEST_EXERCISE });\r\n    API.get(`/lesson/v2?id=${path.exercise}`)\r\n      .then((res) => {\r\n        dispatch({ type: ENTER_NOTEMODE });\r\n        dispatch({ type: SUCCESS_EXERCISE, data: res.data[0] });\r\n        dispatch({ type: SAVE_EXERCISES, data: res.data });\r\n      })\r\n      .catch((err) => errorHandler(err, FAILURE_EXERCISE));\r\n  }\r\n};\r\n","import { ThunkDispatch } from \"redux-thunk\";\r\nimport {\r\n  FAILURE_LESSON,\r\n  REQUEST_LESSON,\r\n  SUCCESS_LESSON,\r\n  SAVE_LESSONS,\r\n} from \"../_types/lesson.types\";\r\nimport { API } from \"../_helpers/api\";\r\nimport { AppState } from \"../_types\";\r\nimport { AppActions } from \"../_types\";\r\nimport { requestGuide } from \"./guide.actions\";\r\nimport { requestCourse } from \"./course.actions\";\r\nimport { PathFinder } from \"../_helpers/constants\";\r\nimport { errorHandler } from \"../components/Layout/SnackBar/alert\";\r\n\r\nexport const requestLesson = (path: PathFinder) => (\r\n  dispatch: ThunkDispatch<AppState, undefined, AppActions>,\r\n  getState: () => AppState\r\n) => {\r\n  const found = getState().bank.lessons.data.find(\r\n    (lesson) => lesson.id === path.lesson\r\n  );\r\n\r\n  if (found) {\r\n    dispatch({ type: SUCCESS_LESSON, data: found });\r\n  } else if (path.guide) {\r\n    dispatch(requestGuide(path));\r\n  } else if (path.course) {\r\n    dispatch(requestCourse(path));\r\n  } else if (!found) {\r\n    dispatch({ type: REQUEST_LESSON });\r\n    API.get(`/lesson/v2?id=${path.lesson}`)\r\n      .then((res) => {\r\n        dispatch({ type: SUCCESS_LESSON, data: res.data[0] });\r\n        dispatch({ type: SAVE_LESSONS, data: res.data });\r\n      })\r\n      .catch((err) => errorHandler(err, FAILURE_LESSON));\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport { push } from \"connected-react-router\";\r\nimport {\r\n  Card,\r\n  CardMedia,\r\n  Typography,\r\n  CardContent,\r\n  CardActionArea,\r\n  Chip,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\r\n\r\nimport { store } from \"../../../_store/store.config\";\r\nimport { thumbnailsFinder } from \"../../../_helpers/constants\";\r\nimport { ILesson } from \"../../../_types/lesson.types\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      maxHeight: 280,\r\n      width: \"100%\",\r\n      margin: theme.spacing(1),\r\n    },\r\n    content: {\r\n      minHeight: 130,\r\n    },\r\n    rightChip: {\r\n      position: \"absolute\",\r\n      cursor: \"pointer\",\r\n      margin: theme.spacing(1),\r\n      backgroundColor: \"green\",\r\n    },\r\n  })\r\n);\r\n\r\ntype Props = {\r\n  courseItem: ILesson;\r\n  type: string;\r\n  path: string;\r\n};\r\n\r\nexport const CourseItem: React.FC<Props> = ({ type, courseItem, path }) => {\r\n  const classes = useStyles();\r\n  const { title, id, featured_img, info } = courseItem;\r\n\r\n  const clickHandler = (\r\n    e: React.MouseEvent<HTMLButtonElement, MouseEvent>\r\n  ): void => {\r\n    const typer = type === \"Exercise\" ? \"exercise\" : \"lesson\";\r\n    store.dispatch(push(path + \"/\" + typer + \"=\" + id));\r\n  };\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardActionArea onClick={clickHandler}>\r\n        <Grid container>\r\n          <Grid item lg={4} xs={4} sm={4} xl={4}>\r\n            <Chip label={info.grade.name} className={classes.rightChip} />\r\n            <CardMedia\r\n              component=\"img\"\r\n              alt={title}\r\n              height=\"200\"\r\n              image={thumbnailsFinder(featured_img)}\r\n              title={title}\r\n            />\r\n          </Grid>\r\n          <Grid item lg={8} xs={8} sm={8} xl={8}>\r\n            <CardContent className={classes.content}>\r\n              <Typography gutterBottom variant=\"body1\" component=\"h6\">\r\n                {title}\r\n              </Typography>\r\n            </CardContent>\r\n          </Grid>\r\n        </Grid>\r\n      </CardActionArea>\r\n    </Card>\r\n  );\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { ThunkDispatch } from \"redux-thunk\";\r\nimport {\r\n  Grid,\r\n  createStyles,\r\n  Theme,\r\n  Typography,\r\n  WithStyles,\r\n  withStyles,\r\n  CardMedia,\r\n} from \"@material-ui/core\";\r\n\r\nimport { AppActions, AppState } from \"../../../_types\";\r\nimport { ICourse } from \"../../../_types/course.types\";\r\nimport {\r\n  PathFinder,\r\n  pathFinder,\r\n  thumbnailsFinder,\r\n} from \"../../../_helpers/constants\";\r\nimport { requestCourse } from \"../../../_actions/course.actions\";\r\nimport { CourseItem } from \"./CourseItems\";\r\nimport { LoadingCircle } from \"../../Layout/Loadings\";\r\n\r\nconst useStyles = (theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      width: \"99vw\",\r\n      minHeight: \"calc(100vh - 128px)\",\r\n      [theme.breakpoints.down(\"xs\")]: {\r\n        minHeight: \"calc(100vh - 112px)\",\r\n        padding: theme.spacing(1),\r\n      },\r\n      padding: theme.spacing(2),\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      justifyContent: \"flex-start\",\r\n    },\r\n    autoMargin: {\r\n      margin: \"auto\",\r\n    },\r\n    content: {\r\n      position: \"relative\",\r\n      minHeight: \"calc(100vh - 160px)\",\r\n      [theme.breakpoints.down(\"sm\")]: {\r\n        minHeight: \"100%\",\r\n      },\r\n      border: `1px solid ${theme.palette.secondary.main}`,\r\n      height: \"100%\",\r\n      width: \"100%\",\r\n    },\r\n    text: {\r\n      padding: 20,\r\n    },\r\n    image: {\r\n      width: \"100%\",\r\n      height: \"100%\",\r\n      opacity: \"0.3\",\r\n      position: \"absolute\",\r\n    },\r\n  });\r\n\r\ninterface CourseProps extends WithStyles<typeof useStyles> {\r\n  data?: ICourse;\r\n  loading: boolean;\r\n  error: string;\r\n  pathname: string;\r\n}\r\n\r\ntype Props = CourseProps & LinkDispatchProps;\r\n\r\nclass Course extends Component<Props> {\r\n  componentDidMount() {\r\n    const path = pathFinder(this.props.pathname);\r\n    this.props.requestCourse(path);\r\n  }\r\n\r\n  render() {\r\n    const { classes, data, loading, error, pathname } = this.props;\r\n    return (\r\n      <Grid container justify=\"center\" className={classes.root}>\r\n        {loading ? (\r\n          <LoadingCircle />\r\n        ) : data ? (\r\n          <Grid container spacing={2}>\r\n            <Grid item lg={6} md={6} xl={6} xs={12}>\r\n              <div className={classes.content}>\r\n                <CardMedia\r\n                  image={thumbnailsFinder(data.thumbnails)}\r\n                  className={classes.image}\r\n                />\r\n                <Typography\r\n                  gutterBottom\r\n                  variant=\"body1\"\r\n                  component=\"h6\"\r\n                  className={classes.text}\r\n                >\r\n                  {data.description}\r\n                </Typography>\r\n              </div>\r\n            </Grid>\r\n            <Grid item lg={6} md={6} xl={6} xs={12}>\r\n              <Grid container justify=\"flex-end\">\r\n                {data?.course_select.map((course, k) => (\r\n                  <CourseItem\r\n                    key={k}\r\n                    type={course.info.genre.name}\r\n                    path={pathname}\r\n                    courseItem={course}\r\n                  />\r\n                ))}\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        ) : (\r\n          <Typography component=\"div\" className={classes.autoMargin}>\r\n            {error}\r\n          </Typography>\r\n        )}\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\ninterface LinkDispatchProps {\r\n  requestCourse: (path: PathFinder) => void;\r\n}\r\n\r\nconst mapStateToProps = (state: AppState, ownProps: Props): CourseProps => ({\r\n  classes: ownProps.classes,\r\n  pathname: state.router.location.pathname,\r\n  ...state.single.course,\r\n});\r\n\r\nconst mapDispatchToProps = (\r\n  dispatch: ThunkDispatch<any, any, AppActions>\r\n): LinkDispatchProps => ({\r\n  requestCourse: bindActionCreators(requestCourse, dispatch),\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withStyles(useStyles)(Course));\r\n"],"sourceRoot":""}