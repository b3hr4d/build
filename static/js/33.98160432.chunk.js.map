{"version":3,"sources":["components/Layout/Player/Buttons.tsx","components/Layout/Instruments/Piano/constant.ts","components/Layout/Instruments/Piano/SvgKeys.ts","components/Layout/Instruments/Piano/index.tsx","components/Layout/Player/SeekBar.tsx","components/Layout/Instruments/Piano/PlayMode/PlayerHeader.tsx","components/Layout/Instruments/Piano/GameCanvas/GameFront.tsx","components/Layout/Instruments/Piano/GameCanvas/GameBack.tsx","components/Layout/Instruments/Piano/GameCanvas/SvgLine.tsx","components/Layout/Instruments/Piano/GameCanvas/index.tsx","components/Layout/Instruments/Piano/PlayMode/LessonPlayMode.tsx"],"names":["PlayButton","loading","useState","onAir","setOnAir","playHandler","stopPlayer","startPlayer","keyboardUp","e","code","useEffect","document","addEventListener","removeEventListener","id","color","aria-label","onClick","style","fontSize","rightLine","leftLine","pitchName","pitch","n","t","outLine","v","emulatedKeys","z","s","x","d","c","g","b","h","j","m","l","q","2","w","3","4","r","6","y","7","u","i","9","o","0","p","PianoEvent","isDown","playedKey","preventDefault","key","hasOwnProperty","note","midiNoteOff","keyboardDown","midiNoteOn","mouseUpReset","mouseDown","currentTarget","tabIndex","mouseOver","mouseLeave","mouseUp","SvgKeys","xPos","yPos","front","back","useStyles","makeStyles","theme","createStyles","root","display","flexDirection","justifyContent","flexWrap","margin","minWidth","width","cursor","touchAction","spacing","connectedPiano","connect","state","auth","Melo","melodition","dispatch","drawGamePiano","bindActionCreators","gamePiano","drawNotePiano","notePiano","props","counter","firstkey","keyRefs","console","log","changeMidi","octSize","classes","setKeyRef","ref","octave","pianoLoading","pianoSize","getBoundingClientRect","height","Math","floor","window","innerHeight","playMode","tapSize","rythm","bpm","detectSize","baseLine","pianoLeft","left","noteMode","neededLines","need","up","lines","down","lineSide","spaceSize","notes","linesArray","Array","from","_","notePos","forEach","pos","className","map","oct","xmlns","viewBox","fill","marginRight","undefined","k","lastKey","length","backFill","frontFill","active","neededTracks","some","el","textPos","onMouseUp","onMouseDown","onMouseLeave","onTouchEnd","onTouchMove","onTouchStart","stroke","fontWeight","cx","cy","strokeWidth","points","connectedSeekbar","drawSeekBar","callback","useCallback","node","seekLoading","seekBar","SeekInput","forwardRef","seek","setSeek","useImperativeHandle","changeSeeker","value","orientation","defaultValue","max","songLength","min","onChange","canvasWheel","aria-labelledby","flexGrow","menuButton","title","divider","MenuAppBar","lesson","modeChanger","AppBar","position","Toolbar","IconButton","edge","ArrowForward","Divider","flexItem","Typography","variant","GameFront","drawGame","gameLoading","canvasSize","drawFrontContext","top","zIndex","onWheel","GameBack","backCtx","getContext","clearRect","lineWidth","rect","beginPath","moveTo","lineTo","strokeStyle","fillStyle","drawBackContext","SvgLine","bottom","filter","strokeDasharray","strokeDashoffset","animation","x1","y1","x2","y2","connectedPianoCanvas","boxShadow","LessonPlayerMode","svgWidth","toggleDrawer","event","type","list","setState","playmodeChanger","changeMode","updateDimensions","resizePlayer","this","Grid","container","main","item","xs","direction","justify","alignItems","content","noPad","Piano","ArrowBackIos","Component","ownProps","history","router","location","pathname","single","data","course","drawPiano","withStyles","overflow","backgroundColor","palette","background","paper","minHeight","breakpoints","doubleGrid","maxWidth","padding","centerText","textAlign"],"mappings":"yOAQaA,EAAmC,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAAc,EACrCC,oBAAS,GAD4B,mBACxDC,EADwD,KACjDC,EADiD,KAGzDC,EAAc,WACdF,GACFG,cACAF,GAAS,KAETG,cACAH,GAAS,KAGPI,EAAa,SAACC,GACH,UAAXA,EAAEC,MAAqBT,GACzBI,KASJ,OANAM,qBAAU,WAER,OADAC,SAASC,iBAAiB,QAASL,GAC5B,WACLI,SAASE,oBAAoB,QAASN,OAIxC,kBAAC,IAAD,CACEO,GAAG,cACHC,MAAM,YACNC,aAAW,YACXC,QAASb,GAERF,EACC,kBAAC,IAAD,CAAoBgB,MAAO,CAAEC,SAAU,WAEvC,kBAAC,IAAD,CAAmBD,MAAO,CAAEC,SAAU,c,gOCvCjCC,EAAY,CACrB,EACA,EACA,EACA,EACA,EACA,EACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,IAESC,EAAW,CACpB,EACA,EACA,EACA,EACA,EACA,EACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,IAESC,EAAY,SAACC,GACtB,IAAIC,EAAID,EAAQ,GACZE,EAAI,IAkCR,OAjCU,IAAND,IACAC,EAAI,MAEE,IAAND,IACAC,EAAI,KAEE,IAAND,IACAC,EAAI,MAEE,IAAND,IACAC,EAAI,KAEE,IAAND,IACAC,EAAI,KAEE,IAAND,IACAC,EAAI,MAEE,IAAND,IACAC,EAAI,KAEE,IAAND,IACAC,EAAI,MAEE,IAAND,IACAC,EAAI,KAEE,KAAND,IACAC,EAAI,MAEE,KAAND,IACAC,EAAI,KAED,GAAKA,GAEHC,EAAU,SAACC,GAAD,OAAqB,MAANA,GAAmB,KAANA,GAAkB,KAANA,GAAkB,KAANA,GAErEC,EAAe,CACjBC,EAAG,GACHC,EAAG,GACHC,EAAG,GACHC,EAAG,GACHC,EAAG,GACHN,EAAG,GACHO,EAAG,GACHC,EAAG,GACHC,EAAG,GACHZ,EAAG,GACHa,EAAG,GACHC,EAAG,GACH,IAAK,GACLC,EAAG,GACH,IAAK,GACL,IAAK,GACL,IAAK,GACLC,EAAG,GACHC,EAAG,GACHC,EAAG,GACHC,EAAG,GACHnC,EAAG,GACHoC,EAAG,GACHC,EAAG,GACHpB,EAAG,GACHqB,EAAG,GACHC,EAAG,GACHC,EAAG,GACHC,EAAG,GACHC,EAAG,GACHC,EAAG,GACHC,EAAG,GACHC,EAAG,GACHC,EAAG,GACH,IAAK,GACL,IAAK,GACL,IAAK,IAIIC,EAAb,iDACIC,QAAS,EADb,KAEIC,eAFJ,OAGIlD,WAAa,SAACC,GACVA,EAAEkD,iBACF,IAAMC,EAAMnD,EAAEmD,IACd,GAAI/B,EAAagC,eAAeD,GAAM,CAClC,IAAME,EAAOjC,EAAa+B,GAC1BG,YAAYD,GACZ,EAAKJ,UAAY,OAT7B,KAYIM,aAAe,SAACvD,GACZA,EAAEkD,iBACF,IAAMC,EAAMnD,EAAEmD,IACd,GAAI/B,EAAagC,eAAeD,IACxBA,IAAQ,EAAKF,UAAW,CACxB,IAAMI,EAAOjC,EAAa+B,GAC1BK,YAAWH,GACX,EAAKJ,UAAYE,IAnBjC,KAuBIM,aAAe,WACX,EAAKT,QAAS,GAxBtB,KA0BIU,UAAY,SAAC1D,GACTA,EAAEkD,iBACF,IACMG,EADmBrD,EAAE2D,cACVC,SACjB,EAAKZ,QAAS,EACd,EAAKC,UAAYI,EACjBG,YAAWH,IAhCnB,KAkCIQ,UAAY,SAAC7D,GACTA,EAAEkD,iBACF,IACMG,EADmBrD,EAAE2D,cACVC,SACb,EAAKZ,QAAUK,IAAS,EAAKJ,YAC7B,EAAKA,UAAYI,EACjBG,YAAWH,KAxCvB,KA2CIS,WAAa,SAAC9D,GACVA,EAAEkD,iBACF,IACMG,EADmBrD,EAAE2D,cACVC,SACb,EAAKZ,SACLM,YAAYD,GACZ,EAAKJ,UAAY,OAjD7B,KAoDIc,QAAU,SAAC/D,GACPA,EAAEkD,iBACF,IACMG,EADmBrD,EAAE2D,cACVC,SACjB,EAAKZ,QAAS,EACdM,YAAYD,GACZ,EAAKJ,UAAY,Q,kHCjHVe,EArFC,CAAC,CACfX,KAAM,IACNY,KAAM,GACNC,KAAM,IACN5D,GAAI,QACJ6D,MAAO,6IACN,CACDd,KAAM,KACNY,KAAM,GACNC,KAAM,GACN5D,GAAI,QACJ6D,MAAO,iFACPC,KAAM,4DACL,CACDf,KAAM,IACNY,KAAM,IACNC,KAAM,IACN5D,GAAI,QACJ6D,MAAO,mMACN,CACDd,KAAM,KACNY,KAAM,IACNC,KAAM,GACN5D,GAAI,QACJ6D,MAAO,wFACPC,KAAM,qEACL,CACDf,KAAM,IACNY,KAAM,IACNC,KAAM,IACN5D,GAAI,QACJ6D,MAAO,2JACN,CACDd,KAAM,IACNY,KAAM,IACNC,KAAM,IACN5D,GAAI,QACJ6D,MAAO,2JACN,CACDd,KAAM,KACNY,KAAM,IACNC,KAAM,GACN5D,GAAI,QACJ6D,MAAO,wFACPC,KAAM,qEACL,CACDf,KAAM,IACNY,KAAM,IACNC,KAAM,IACN5D,GAAI,QACJ6D,MAAO,yMACN,CACDd,KAAM,KACNY,KAAM,IACNC,KAAM,GACN5D,GAAI,QACJ6D,MAAO,wFACPC,KAAM,qEACL,CACDf,KAAM,IACNY,KAAM,IACNC,KAAM,IACN5D,GAAI,QACJ6D,MAAO,yMACN,CACDd,KAAM,KACNY,KAAM,IACNC,KAAM,GACN5D,GAAI,QACJ6D,MAAO,wFACPC,KAAM,qEACL,CACDf,KAAM,IACNY,KAAM,IACNC,KAAM,IACN5D,GAAI,QACJ6D,MAAO,2JACN,CACDd,KAAM,IACNY,KAAM,IACNC,KAAM,IACN5D,GAAI,QACJ6D,MAAO,8GCtEHE,EAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXC,KAAM,CACJC,QAAS,OACTC,cAAe,cACfC,eAAgB,SAChBC,SAAU,SACVC,OAAQ,SACRC,SAAU,QACVC,MAAO,OACPC,OAAQ,UACR,wBAAyB,OACzB,sBAAuB,OACvB,qBAAsB,OACtB,mBAAoB,OACpB,kBAAmB,OACnB,cAAe,OACfC,YAAa,QAEfd,KAAM,CACJU,OAAQP,EAAMY,QAAQ,EAAG,SA6OzBC,EAAiBC,aAVC,SAACC,GAAD,MAAsB,CAC5Cf,MAAOe,EAAMC,KAAKhB,MAClBiB,KAAMF,EAAMG,eAGa,SAACC,GAAD,MAAoD,CAC7EC,cAAeC,YAAmBC,IAAWH,GAC7CI,cAAeF,YAAmBG,IAAWL,MAGxBL,EArOQ,SAACW,GAAW,IACtBR,EAAuCQ,EAAvCR,KAAMG,EAAiCK,EAAjCL,cAAeG,EAAkBE,EAAlBF,cADA,EAUpC,IAAI/C,IANNQ,EAJsC,EAItCA,aACAxD,EALsC,EAKtCA,WACA2D,EANsC,EAMtCA,UACAK,EAPsC,EAOtCA,QACAD,EARsC,EAQtCA,WACAD,EATsC,EAStCA,UAGEoC,EAAU,GACVC,EAAW,GACTC,EAAU,GAEhBjG,qBAAU,WAKR,OAJAkG,QAAQC,IAAI,iBACZC,sBAAW,GACXnG,SAASC,iBAAiB,UAAWmD,GACrCpD,SAASC,iBAAiB,QAASL,GAC5B,WACLqG,QAAQC,IAAI,oBACZC,sBAAW,GACXnG,SAASE,oBAAoB,UAAWkD,GACxCpD,SAASE,oBAAoB,QAASN,MAEvC,CAACyF,EAAKhG,QAAS+D,EAAcxD,IAEhC,IAEyBwG,EAFnBC,EAAUnC,IAiCVoC,EAAY,SAACC,GACjB,GAAIA,EAAK,CACP,IAAMvD,EAAMuD,EAAI9C,SAChBuC,EAAQhD,GAAOuD,IAuDnB,OAzFyBH,EAwFTf,EAAKmB,QAvFL,GACZV,EAAU,GACVC,EAAW,IACFK,EAAU,GACnBN,EAAU,GACVC,EAAW,IACFK,EAAU,GACnBN,EAAU,GACVC,EAAW,KAEXD,EAAU,GACVC,EAAW,IA8Eb,yBAAKQ,IApDQ,SAACA,GACd,GAAIA,GAAOlB,EAAKoB,aAAc,CAC5B,IAAMC,EAAYH,EAAII,wBAChB9B,EAAQ6B,EAAU7B,MAClB+B,EAASC,KAAKC,MAAMC,OAAOC,aAAeN,EAAUE,OAAS,KACnE,GAAIvB,EAAK4B,SAAU,CACjB,IAAMC,EA7BO,SAACN,GAClB,IAAMO,EAAmB,EAAX9B,EAAK+B,IAanB,OAVQR,EAASO,EAyBGE,CAAWT,GACrBU,EAAWJ,GAAW7B,EAAK+B,KAAO,EAAI,EAAI/B,EAAK+B,KAAO,EACtDG,EAAYb,EAAUc,KAE5BhC,EAAcQ,EADK,CAAEnB,QAAO+B,SAAQU,WAAUC,aACXL,QAC9B,GAAI7B,EAAKoC,UAAYpC,EAAKqC,YAAa,CAC5C,IAAMC,EAAOtC,EAAKqC,YAAYE,GAAK,GAAK,IAAM,GACxCC,EACJxC,EAAKqC,YAAYI,KAAO,IAAMzC,EAAKqC,YAAYE,GAAK,GAAK,GAAK,GAC1DG,EAAWJ,EAAO,GAAKlH,IAAYC,IACnCwG,EAAUN,EAAS,KAAOiB,EAAQ,GAClCG,EAAYnD,GAASQ,EAAKqC,YAAYO,MAAQ,GAC9CzH,EACQ,GAAZwH,EAAkB,EAAI,EAAgB,GAAZA,EAAkB,GAAK,GAAiB,GAAZA,EAClDE,EAAaC,MAAMC,KACvBD,MAAMN,IACN,SAACQ,EAAG9F,GAAJ,OAAUoF,EAAOI,EAASxF,MAEtB+F,EAAoB,GAC1BJ,EAAWK,SAAQ,SAACvH,EAAGuB,GACrB,IAAMH,GAAMG,EAAI,GAAK2E,EAAW,EAChCoB,EAAQtH,GAAK,CAAEwH,IAAKpG,EAAGc,KAAMvC,YAAUK,IACvCsH,EAAQtH,EAAI,GAAK,CAAEwH,IAAKpG,EAAGc,KAAMvC,YAAUK,EAAI,OAEjD2E,EAAcK,EAAS,CACrBnB,QACA+B,OAAQA,EAAS,IACjBM,UACAc,YACAxH,WACA0H,aACAI,iBAGF9C,EAAcQ,KAYAyC,UAAWpC,EAAQ/B,MAClC6D,MAAMC,KAAKD,MAAM9C,EAAKmB,SAAS,SAAC6B,EAAG9F,GAAJ,MAAU,OAASA,EAAI,MAAImG,KACzD,SAACC,EAAKpG,GACJ,IAAMsC,EAAQQ,EAAKmB,OAASjE,IAAM,EAAI,IAAM,IAC5C,OACE,yBACEqG,MAAM,6BACNzI,GAAIwI,EACJ3F,IAAK2F,EACL9D,MAAOA,EACP+B,OAAO,OACPiC,QAAO,cAAShE,EAAT,QACPiE,KAAK,OACLvI,MACEgC,IAAM8C,EAAKmB,OAAS,EAChB,CAAEuC,YAAa,EAAI1D,EAAKmB,aACxBwC,GAGLnF,EAAQ6E,KAAI,SAACO,EAAGpI,GAAO,IAAD,EACjBqI,EAAUrF,EAAQsF,OAClBV,EAAY3C,IAAYC,EAAW,QAAUkD,EAAE/F,KAC/CmC,EAAKmB,OAASjE,IAAM,GAAK2G,IAAYrI,EAAI,IAC3CqI,IACAT,EAAY,OACZlG,KAEF,IAAI6G,EAAoB,UAATH,EAAE9I,GAAiB,eAAY6I,EAC1CK,EACO,UAATJ,EAAE9I,GAAiB,QAAU,yBACzBmJ,EAAM,UAAGjE,EAAKkE,oBAAR,aAAG,EAAmBC,MAChC,SAACC,GAAD,OAAQA,EAAG7I,MAAQ,KAAOkF,KAEtB4D,EAAmB,UAATT,EAAE9I,GAAiB8I,EAAEnF,KAAOmF,EAAEnF,KAAO,EACrD,OACEoF,IAAYrI,EAAI,GACd,uBACEV,GAAI8I,EAAE9I,GACNoG,IAAKD,EACLqD,UAAW/F,EACXgG,YAAarG,EACbsG,aAAclG,EACdmG,WAAYnG,EACZoG,YAAarG,EACbsG,aAAczG,EACdP,IAAK2F,EAAM,IAAMM,EAAE/F,KAAOX,EAC1BkG,UAAWA,EACXhF,SAAUqC,GAEV,0BACE3F,GAAG,OACHkB,EAAG4H,EAAEjF,MACL8E,KAAiBG,EAAE9I,GACnB8J,OAAQb,IAEA,UAATH,EAAE9I,GACD,0BACEA,GAAG,QACHkB,EAAG4H,EAAEhF,KACL6E,KAAiBO,IAGnB,0BACElJ,GAAG,QACHiB,EAAGsI,EACHtH,EAAG6G,EAAElF,KACL+E,KAAiB,mBACjBtI,SAAS,KACT0J,WAAW,OAEVjB,EAAE/F,MAGNoG,GACC,4BACEa,GAAIlB,EAAEnF,KAAO,EACbsG,GAAInB,EAAElF,KAAO,GACb7B,EAAE,IACF4G,KAAiB,gBACjBmB,OAAmBhB,EAAE9I,GACrBkK,YAAY,MAGD,KAAdvE,KACC,6BAASwE,OAAO,uBAAuBxB,KAAK,sBA0BrD7D,O,+FCvOTsF,EAAmBrF,aAND,SAACC,GAAD,MAAsB,CAC5CE,KAAMF,EAAMG,eAEa,SAACC,GAAD,MAAoD,CAC7EiF,YAAa/E,YAAmB+E,IAAajF,MAEtBL,EAvBe,SAAC,GAA2B,IAAzBG,EAAwB,EAAxBA,KAAMmF,EAAkB,EAAlBA,YACzCC,EAAWC,uBACf,SAACC,GAIC,OAHIA,GAAQtF,EAAKuF,aACfJ,EAAY,CAAEK,QAASF,IAElB,eAET,CAACtF,EAAKuF,YAAaJ,IAGrB,OACE,yBAAKjK,MAAO,CAAEqG,OAAQ,QACpB,kBAACkE,EAAD,CAAWvE,IAAKkE,EAAUpF,KAAMA,QAYvBkF,MAKf,IAAMO,EAAYC,sBAAoC,WAAWxE,GAAS,IAAjBlB,EAAgB,EAAhBA,KAAgB,EAC/C/F,mBAAS,GADsC,mBAChE0L,EADgE,KAC1DC,EAD0D,KAEvEC,8BAAoB3E,GAAK,WACvB,MAAO,CACL4E,aAAcA,MAGlB,IAAMA,EAAe,SAACC,GACC,kBAAVA,GACTH,EAAQG,IAQZ,OACE,kBAAC,IAAD,CACEhL,MAAM,YACNiL,YAAY,WACZhL,aAAW,UACXiL,aAAc,EACdC,IAAKlG,EAAKmG,WACVC,IAAK,EACLC,SAAU,SAACrD,EAAGxI,GAbE,IAACuL,EACE,kBADFA,EAaevL,IAXhC8L,YAAYP,IAYZQ,kBAAgB,kBAChBR,MAAOJ,Q,uPC3DP9G,EAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXC,KAAM,CACJuH,SAAU,GAEZC,WAAY,CACV/C,YAAa3E,EAAMY,QAAQ,IAE7B+G,MAAO,CACLF,SAAU,GAEZG,QAAS,CACPrH,OAAQP,EAAMY,QAAQ,EAAG,SAUhB,SAASiH,EAAT,GAAqD,IAA/BC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,YACrC9F,EAAUnC,IAYhB,OACE,kBAACkI,EAAA,EAAD,CAAQC,SAAS,SAASjM,MAAM,UAAUqI,UAAWpC,EAAQ/B,MAC3D,kBAACgI,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACEC,KAAK,QACLpM,MAAM,UACNC,aAAW,OACXC,QAAS6L,GAET,kBAACM,EAAA,EAAD,OAEF,kBAACC,EAAA,EAAD,CAASrB,YAAY,WAAWsB,UAAQ,EAAClE,UAAWpC,EAAQ2F,UAC5D,kBAACY,EAAA,EAAD,CAAYC,QAAQ,KAAKzM,MAAM,UAAUqI,UAAWpC,EAAQ0F,OAA5D,OACGG,QADH,IACGA,OADH,EACGA,EAAQH,SCvDnB,IAgBee,EAhB0B,SAAC,GAAwB,IAAD,IAArBzH,EAAqB,EAArBA,KAAM0H,EAAe,EAAfA,SAMhD,OACE,4BACExG,IAAK,SAACA,GAAD,OAPgB,SAACA,GACpBA,GAAOlB,EAAK2H,aAAe3H,EAAK4H,YAClCF,EAASxG,GAKK2G,CAAiB3G,IAC/B1B,MAAK,UAAEQ,EAAK4H,kBAAP,aAAE,EAAiBpI,MACxB+B,OAAM,UAAEvB,EAAK4H,kBAAP,aAAE,EAAiBrG,OACzBrG,MAAO,CAAE8L,SAAU,WAAYc,IAAK,EAAG3F,KAAM,EAAG4F,OAAQ,GACxDC,QAAS,SAACxN,GAAD,OAAO8L,YAAY9L,OC4BnByN,EAzCyB,SAAC,GAAc,IAAD,IAAXjI,EAAW,EAAXA,KAgCzC,OACE,4BACEkB,IAAK,SAACA,GAAD,OAjCe,SAACA,GACvB,GAAIA,GAAOlB,EAAK4H,YAAc5H,EAAK2H,YAAa,CAC9C,IAAMO,EAAUhH,EAAIiH,WAAW,MAC/BD,EAAQE,UAAU,EAAG,EAAGpI,EAAK4H,WAAWpI,MAAOQ,EAAK4H,WAAWrG,QAC/D,IAAMZ,EAAUX,EAAKqB,UACfyC,EAASnD,EAAUA,EAAQmD,OAAS,EAAI,GACxCuE,EAAY1H,EAAUA,EAAQmD,GAAQtE,MAAQ,GAC9CpD,EAAI4D,EAAK4H,WAAWrG,OACnB,OAAPZ,QAAO,IAAPA,KAASuC,SAAQ,SAACoF,EAAMpL,GACtBgL,EAAQK,YACR,IAAMxM,EAAIuM,EAAKnG,KACE,OAAbmG,EAAK3K,KAMe,SAAb2K,EAAK3K,KALduK,EAAQM,OAAOzM,EAAG,GAClBmM,EAAQO,OAAO1M,EAAGK,GAClB8L,EAAQG,UAAYA,EACpBH,EAAQQ,YAAc,qBACtBR,EAAQtD,UAOc,UAAb0D,EAAK3K,MACduK,EAAQI,KAAKvM,EAAG,EAAGuM,EAAK9I,MAAOpD,GAC/B8L,EAAQS,UAAY,kBACpBT,EAAQzE,YAOEmF,CAAgB1H,IAC9B1B,MAAK,UAAEQ,EAAK4H,kBAAP,aAAE,EAAiBpI,MACxB+B,OAAM,UAAEvB,EAAK4H,kBAAP,aAAE,EAAiBrG,OACzBrG,MAAO,CAAE6M,OAAQ,MCRRc,EAhCoB,SAAC,GAAyB,IAAvBrJ,EAAsB,EAAtBA,MAAOyC,EAAe,EAAfA,SAC3C,OACE,yBACEzC,MAAOA,EAAQ,EACf+B,OAAQU,EACR+F,QAAS,SAACxN,GAAD,OAAO8L,YAAY9L,IAC5BU,MAAO,CACL4N,OAAQ,EACR3G,MAAO,EACP4F,OAAQ,EACRf,SAAU,WACV+B,OAAQ,gDAGV,+BAAQ,4CACR,6BAAS9D,OAAQ,gBAAiBxB,KAAM,QACxC,0BACEvI,MAAO,CACL8N,gBAAiBxJ,EAAQ,EACzByJ,iBAAkBzJ,EAAQ,EAC1B0J,UAAW,2BAEbC,GAAI,EACJC,GAAI,EACJC,GAAI7J,EAAQ,EACZ8J,GAAI,EACJtE,YAAa,IACbJ,OAAQ,UCcD2E,EALc1J,aARL,SAACC,GAAD,MAAsB,CAC5CE,KAAMF,EAAMG,eAGa,SAACC,GAAD,MAAoD,CAC7EwH,SAAUtH,YAAmBsH,IAAUxH,MAGZL,EAxBO,SAAC,GAAwB,IAAD,IAArBG,EAAqB,EAArBA,KAAM0H,EAAe,EAAfA,SAC3C,OACE,yBACExM,MAAO,CACLsE,MAAK,UAAEQ,EAAK4H,kBAAP,aAAE,EAAiBpI,MACxB+B,OAAM,UAAEvB,EAAK4H,kBAAP,aAAE,EAAiBrG,OACzByF,SAAU,WACVwC,UAAW,8BAGb,kBAAC,EAAD,CAAWxJ,KAAMA,EAAM0H,SAAUA,IACjC,kBAAC,EAAD,CAAU1H,KAAMA,IACfA,EAAK4H,YAAc,kBAAC,EAAY5H,EAAK4H,gB,SC0DtC6B,E,kDACJ,WAAYjJ,GAAe,IAAD,8BACxB,cAAMA,IAMRkJ,SAAW,SAACxM,GAEV,OADkB,IAANA,EAAU,IAAM,KARJ,EAY1ByM,aAAe,SAACC,GACK,YAAfA,EAAMC,OAGN,EAAK/J,MAAMgK,KACb,EAAKC,SAAS,CAAED,MAAM,IAEtB,EAAKC,SAAS,CAAED,MAAM,MAnBA,EAsB1BE,gBAAkB,WAChB,EAAKxJ,MAAMyJ,YAAW,IAvBE,EA+B1BC,iBAAmB,WACZ,EAAK1J,MAAMP,WAAWmB,cACzB,EAAKZ,MAAM2J,gBA/Bb,EAAKrK,MAAQ,CACXgK,MAAM,GAHgB,E,gEA0BxBpI,OAAO9G,iBAAiB,SAAUwP,KAAKF,oB,6CAGvCxI,OAAO7G,oBAAoB,SAAUuP,KAAKF,oB,+BAOlC,IAAD,EACiCE,KAAK5J,MAArCQ,EADD,EACCA,QAASf,EADV,EACUA,WAAY4G,EADtB,EACsBA,OAC7B,OACE,yBAAKzD,UAAWpC,EAAQ/B,MACtB,kBAAC,EAAD,CAAc6H,YAAasD,KAAKJ,gBAAiBnD,OAAQA,IACxD5G,EAAW2B,SACV,kBAACyI,EAAA,EAAD,CAAMC,WAAS,EAAClH,UAAWpC,EAAQuJ,MACjC,kBAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GACb,kBAACJ,EAAA,EAAD,CACEC,WAAS,EACTI,UAAU,SACVC,QAAQ,SACRC,WAAW,SACXxH,UAAWpC,EAAQ6J,SAEnB,kBAAC,IAAD,CAAY7Q,QAASiG,EAAWjG,YAGpC,kBAACqQ,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IACb,kBAACJ,EAAA,EAAD,CACEC,WAAS,EACTI,UAAU,SACVC,QAAQ,SACRC,WAAW,SACXxH,UAAWpC,EAAQ6J,SAEnB,kBAACR,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IACZxK,EAAWmB,aACV,kBAAC,IAAD,CAAe0J,OAAK,IAEpB,kBAAC,EAAD,MAEF,kBAACC,EAAA,EAAD,SAIN,kBAACV,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GACb,kBAACJ,EAAA,EAAD,CACEC,WAAS,EACTI,UAAU,SACVC,QAAQ,eACRC,WAAW,SACXxH,UAAWpC,EAAQ6J,SAEnB,kBAAC,IAAD,MACA,kBAAC3D,EAAA,EAAD,CAAYnM,MAAM,YAAYC,aAAW,aACvC,kBAACgQ,EAAA,EAAD,UAMR,kBAACX,EAAA,EAAD,CAAMC,WAAS,EAAClH,UAAWpC,EAAQuJ,MACjC,kBAAC,IAAD,Y,GA1FmBU,aAqHfpL,uBAnBQ,SACtBC,EACAoL,GAFsB,MAGK,CAC3BC,QAASrL,EAAMsL,OAAOC,SAASC,SAC/BtK,QAASkK,EAASlK,QAClBf,WAAYH,EAAMG,WAClBlB,MAAOe,EAAMC,KAAKhB,MAClB8H,OAAQ/G,EAAMyL,OAAO1E,OAAO2E,KAC5BC,OAAQ3L,EAAMyL,OAAOE,OAAOD,SAGH,SAACtL,GAAD,MAAoD,CAC7E+J,WAAY7J,YAAmB6J,IAAY/J,GAC3CwH,SAAUtH,YAAmBsH,IAAUxH,GACvCwL,UAAWtL,YAAmBC,IAAWH,GACzCiK,aAAc/J,YAAmB+J,IAAcjK,MAGjCL,CAId8L,aAjLgB,SAAC5M,GAAD,aAChBC,YAAa,CACXC,KAAM,CACJO,MAAO,QACP+B,OAAQ,QACRqK,SAAU,SACVC,gBAAiB9M,EAAM+M,QAAQC,WAAWC,OAE5CzB,MAAI,GACF/K,MAAO,QACPoM,SAAU,SACVK,UAAW,sBAHT,cAIDlN,EAAMmN,YAAYzJ,KAAK,MAAQ,CAC9BwJ,UAAW,uBALX,wBAOO,QAPP,GASJpB,QAAS,CACPtJ,OAAQ,OACR/B,MAAO,OACPH,SAAU,UAEZ8M,WAAY,CACV9M,SAAU,SACVG,MAAO,OACP4M,SAAU,OACV,UAAW,CACT9M,OAAQ,OACR+M,QAAS,EACT9K,OAAQ,SAGZ+K,WAAY,CACVC,UAAW,UAEbvS,QAAS,CACPkF,QAAS,OACTqC,OAAQ,MACRiI,UAAW,iCA2IfmC,CAAsBlC","file":"static/js/33.98160432.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { IconButton } from \"@material-ui/core\";\r\nimport { PauseCircleOutline, PlayCircleOutline } from \"@material-ui/icons\";\r\nimport { startPlayer, stopPlayer } from \"../../../_actions/player.actions\";\r\n\r\ninterface IPlayProps {\r\n  loading: boolean;\r\n}\r\nexport const PlayButton: React.FC<IPlayProps> = ({ loading }) => {\r\n  const [onAir, setOnAir] = useState(false);\r\n\r\n  const playHandler = () => {\r\n    if (onAir) {\r\n      stopPlayer();\r\n      setOnAir(false);\r\n    } else {\r\n      startPlayer();\r\n      setOnAir(true);\r\n    }\r\n  };\r\n  const keyboardUp = (e: KeyboardEvent) => {\r\n    if (e.code === \"Space\" && !loading) {\r\n      playHandler();\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    document.addEventListener(\"keyup\", keyboardUp);\r\n    return () => {\r\n      document.removeEventListener(\"keyup\", keyboardUp);\r\n    };\r\n  });\r\n  return (\r\n    <IconButton\r\n      id=\"play-button\"\r\n      color=\"secondary\"\r\n      aria-label=\"play song\"\r\n      onClick={playHandler}\r\n    >\r\n      {onAir ? (\r\n        <PauseCircleOutline style={{ fontSize: \"1.8em\" }} />\r\n      ) : (\r\n        <PlayCircleOutline style={{ fontSize: \"1.8em\" }} />\r\n      )}\r\n    </IconButton>\r\n  );\r\n};\r\n","import { midiNoteOff, midiNoteOn } from \"../../../../_actions/player.actions\";\r\n\r\nexport const rightLine = [\r\n    1,\r\n    2,\r\n    4,\r\n    6,\r\n    7,\r\n    9,\r\n    11,\r\n    13,\r\n    14,\r\n    16,\r\n    18,\r\n    19,\r\n    21,\r\n    23,\r\n    25,\r\n    26,\r\n    28,\r\n    30,\r\n    31,\r\n    33,\r\n    35,\r\n    37,\r\n    38,\r\n    40,\r\n    42,\r\n];\r\nexport const leftLine = [\r\n    0,\r\n    2,\r\n    4,\r\n    6,\r\n    7,\r\n    9,\r\n    11,\r\n    12,\r\n    14,\r\n    16,\r\n    18,\r\n    19,\r\n    21,\r\n    23,\r\n    24,\r\n    26,\r\n    28,\r\n    30,\r\n    31,\r\n    33,\r\n    35,\r\n    36,\r\n    38,\r\n    40,\r\n    42,\r\n    43,\r\n    45,\r\n    47,\r\n];\r\nexport const pitchName = (pitch: number) => {\r\n    let n = pitch % 12;\r\n    let t = \"C\";\r\n    if (n === 1) {\r\n        t = \"Db\";\r\n    }\r\n    if (n === 2) {\r\n        t = \"D\";\r\n    }\r\n    if (n === 3) {\r\n        t = \"Eb\";\r\n    }\r\n    if (n === 4) {\r\n        t = \"E\";\r\n    }\r\n    if (n === 5) {\r\n        t = \"F\";\r\n    }\r\n    if (n === 6) {\r\n        t = \"Gb\";\r\n    }\r\n    if (n === 7) {\r\n        t = \"G\";\r\n    }\r\n    if (n === 8) {\r\n        t = \"Ab\";\r\n    }\r\n    if (n === 9) {\r\n        t = \"A\";\r\n    }\r\n    if (n === 10) {\r\n        t = \"Bb\";\r\n    }\r\n    if (n === 11) {\r\n        t = \"B\";\r\n    }\r\n    return \"\" + t;\r\n};\r\nexport const outLine = (v: number) => v === 101 || v === 81 || v === 60 || v === 40;\r\n\r\nconst emulatedKeys = {\r\n    z: 48,\r\n    s: 49,\r\n    x: 50,\r\n    d: 51,\r\n    c: 52,\r\n    v: 53,\r\n    g: 54,\r\n    b: 55,\r\n    h: 56,\r\n    n: 57,\r\n    j: 58,\r\n    m: 59,\r\n    \",\": 60,\r\n    l: 61,\r\n    \".\": 62,\r\n    \";\": 63,\r\n    \"/\": 64,\r\n    q: 65,\r\n    2: 66,\r\n    w: 67,\r\n    3: 68,\r\n    e: 69,\r\n    4: 70,\r\n    r: 71,\r\n    t: 72,\r\n    6: 73,\r\n    y: 74,\r\n    7: 75,\r\n    u: 76,\r\n    i: 77,\r\n    9: 78,\r\n    o: 79,\r\n    0: 80,\r\n    p: 81,\r\n    \"-\": 82,\r\n    \"[\": 83,\r\n    \"]\": 84,\r\n}\r\n\r\ntype IPianoEvent = React.TouchEvent<SVGGElement> | React.MouseEvent<SVGGElement, MouseEvent>\r\nexport class PianoEvent {\r\n    isDown = false\r\n    playedKey: number | string | null;\r\n    keyboardUp = (e: KeyboardEvent) => {\r\n        e.preventDefault();\r\n        const key = e.key as keyof typeof emulatedKeys;\r\n        if (emulatedKeys.hasOwnProperty(key)) {\r\n            const note = emulatedKeys[key];\r\n            midiNoteOff(note);\r\n            this.playedKey = null;\r\n        }\r\n    };\r\n    keyboardDown = (e: KeyboardEvent) => {\r\n        e.preventDefault();\r\n        const key = e.key as keyof typeof emulatedKeys;\r\n        if (emulatedKeys.hasOwnProperty(key)) {\r\n            if (key !== this.playedKey) {\r\n                const note = emulatedKeys[key];\r\n                midiNoteOn(note);\r\n                this.playedKey = key;\r\n            }\r\n        }\r\n    };\r\n    mouseUpReset = () => {\r\n        this.isDown = false;\r\n    };\r\n    mouseDown = (e: IPianoEvent) => {\r\n        e.preventDefault();\r\n        const ref: SVGGElement = e.currentTarget;\r\n        const note = ref.tabIndex;\r\n        this.isDown = true;\r\n        this.playedKey = note;\r\n        midiNoteOn(note);\r\n    };\r\n    mouseOver = (e: IPianoEvent) => {\r\n        e.preventDefault();\r\n        const ref: SVGGElement = e.currentTarget;\r\n        const note = ref.tabIndex;\r\n        if (this.isDown && note !== this.playedKey) {\r\n            this.playedKey = note;\r\n            midiNoteOn(note);\r\n        }\r\n    };\r\n    mouseLeave = (e: IPianoEvent) => {\r\n        e.preventDefault();\r\n        const ref: SVGGElement = e.currentTarget;\r\n        const note = ref.tabIndex;\r\n        if (this.isDown) {\r\n            midiNoteOff(note);\r\n            this.playedKey = null;\r\n        }\r\n    };\r\n    mouseUp = (e: IPianoEvent) => {\r\n        e.preventDefault();\r\n        const ref: SVGGElement = e.currentTarget;\r\n        const note = ref.tabIndex;\r\n        this.isDown = false;\r\n        midiNoteOff(note);\r\n        this.playedKey = null;\r\n    };\r\n}","const SvgKeys = [{\r\n  note: \"C\",\r\n  xPos: 47,\r\n  yPos: 205,\r\n  id: \"white\",\r\n  front: \"M0.5 0.5H42.5V155.5C42.5 156.881 43.6193 158 45 158H79.5V245C79.5 247.485 77.4853 249.5 75 249.5H5C2.51472 249.5 0.5 247.485 0.5 245V0.5Z\",\r\n}, {\r\n  note: \"Db\",\r\n  xPos: 77,\r\n  yPos: 95,\r\n  id: \"black\",\r\n  front: \"M95 0H45V153C45 154.105 45.8954 155 47 155H93C94.1046 155 95 154.105 95 153V0Z\",\r\n  back: \"M79 130H61C52 130 52 150 52 150H88C88 150 88 130 79 130Z\",\r\n}, {\r\n  note: \"D\",\r\n  xPos: 130,\r\n  yPos: 205,\r\n  id: \"white\",\r\n  front: \"M150.5 0.5H97.5V155.5C97.5 156.881 96.3807 158 95 158H84.5V245C84.5 247.485 86.5147 249.5 89 249.5H159C161.485 249.5 163.5 247.485 163.5 245V158H153C151.619 158 150.5 156.881 150.5 155.5V0.5Z\",\r\n}, {\r\n  note: \"Eb\",\r\n  xPos: 185,\r\n  yPos: 95,\r\n  id: \"black\",\r\n  front: \"M203 0H153V153C153 154.105 153.895 155 155 155H201C202.105 155 203 154.105 203 153V0Z\",\r\n  back: \"M187 130H169C160 130 160 150 160 150H196C196 150 196 130 187 130Z\",\r\n}, {\r\n  note: \"E\",\r\n  xPos: 214,\r\n  yPos: 205,\r\n  id: \"white\",\r\n  front: \"M247.5 0.5H205.5V155.5C205.5 156.881 204.381 158 203 158H168.5V245C168.5 247.485 170.515 249.5 173 249.5H243C245.485 249.5 247.5 247.485 247.5 245V0.5Z\",\r\n}, {\r\n  note: \"F\",\r\n  xPos: 298,\r\n  yPos: 205,\r\n  id: \"white\",\r\n  front: \"M252.5 0.5H291.5V155.5C291.5 156.881 292.619 158 294 158H331.5V245C331.5 247.485 329.485 249.5 327 249.5H257C254.515 249.5 252.5 247.485 252.5 245V0.5Z\",\r\n}, {\r\n  note: \"Gb\",\r\n  xPos: 327,\r\n  yPos: 95,\r\n  id: \"black\",\r\n  front: \"M344 0H294V153C294 154.105 294.895 155 296 155H342C343.105 155 344 154.105 344 153V0Z\",\r\n  back: \"M328 130H310C301 130 301 150 301 150H337C337 150 337 130 328 130Z\",\r\n}, {\r\n  note: \"G\",\r\n  xPos: 383,\r\n  yPos: 205,\r\n  id: \"white\",\r\n  front: \"M390.5 0.5H346.5V155.5C346.5 156.881 345.381 158 344 158H336.5V245C336.5 247.485 338.515 249.5 341 249.5H411C413.485 249.5 415.5 247.485 415.5 245V158H393C391.619 158 390.5 156.881 390.5 155.5V0.5Z\",\r\n}, {\r\n  note: \"Ab\",\r\n  xPos: 427,\r\n  yPos: 95,\r\n  id: \"black\",\r\n  front: \"M443 0H393V153C393 154.105 393.895 155 395 155H441C442.105 155 443 154.105 443 153V0Z\",\r\n  back: \"M427 130H409C400 130 400 150 400 150H436C436 150 436 130 427 130Z\",\r\n}, {\r\n  note: \"A\",\r\n  xPos: 466,\r\n  yPos: 205,\r\n  id: \"white\",\r\n  front: \"M491.5 0.5H445.5V155.5C445.5 156.881 444.381 158 443 158H420.5V245C420.5 247.485 422.515 249.5 425 249.5H495C497.485 249.5 499.5 247.485 499.5 245V158H494C492.619 158 491.5 156.881 491.5 155.5V0.5Z\",\r\n}, {\r\n  note: \"Bb\",\r\n  xPos: 526,\r\n  yPos: 95,\r\n  id: \"black\",\r\n  front: \"M544 0H494V153C494 154.105 494.895 155 496 155H542C543.105 155 544 154.105 544 153V0Z\",\r\n  back: \"M528 130H510C501 130 501 150 501 150H537C537 150 537 130 528 130Z\",\r\n}, {\r\n  note: \"B\",\r\n  xPos: 551,\r\n  yPos: 205,\r\n  id: \"white\",\r\n  front: \"M583.5 0.5H546.5V155.5C546.5 156.881 545.381 158 544 158H504.5V245C504.5 247.485 506.515 249.5 509 249.5H579C581.485 249.5 583.5 247.485 583.5 245V0.5Z\",\r\n}, {\r\n  note: \"C\",\r\n  xPos: 637,\r\n  yPos: 205,\r\n  id: \"white\",\r\n  front: \"M663 249.5H593C590.515 249.5 588.5 247.485 588.5 245V0.5H667.5V245C667.5 247.485 665.485 249.5 663 249.5Z\",\r\n}];\r\n\r\nexport default SvgKeys;\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { ThunkDispatch } from \"redux-thunk\";\r\nimport { gamePiano, notePiano } from \"../../../../_actions/player.actions\";\r\nimport { leftLine, PianoEvent, pitchName, rightLine } from \"./constant\";\r\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core\";\r\nimport { changeMidi } from \"../../../../_actions/midi.actions\";\r\nimport { INotePos } from \"../../../../_types/player.types\";\r\nimport { AppActions, AppState } from \"../../../../_types\";\r\nimport SvgKeys from \"./SvgKeys\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      display: \"flex\",\r\n      flexDirection: \"row-reverse\",\r\n      justifyContent: \"center\",\r\n      flexWrap: \"nowrap\",\r\n      margin: \"0 auto\",\r\n      minWidth: \"215px\",\r\n      width: \"100%\",\r\n      cursor: \"default\",\r\n      \"-webkit-touch-callout\": \"none\",\r\n      \"-webkit-user-select\": \"none\",\r\n      \"-khtml-user-select\": \"none\",\r\n      \"-moz-user-select\": \"none\",\r\n      \"-ms-user-select\": \"none\",\r\n      \"user-select\": \"none\",\r\n      touchAction: \"none\",\r\n    },\r\n    back: {\r\n      margin: theme.spacing(0, 2),\r\n    },\r\n  })\r\n);\r\n\r\ntype Props = ReturnType<typeof mapStateToProps> &\r\n  ReturnType<typeof mapDispatchToProps>;\r\n\r\nconst Piano: React.FC<Props> = (props) => {\r\n  const { /*theme,*/ Melo, drawGamePiano, drawNotePiano } = props;\r\n\r\n  const {\r\n    keyboardDown,\r\n    keyboardUp,\r\n    mouseDown,\r\n    mouseUp,\r\n    mouseLeave,\r\n    mouseOver,\r\n  } = new PianoEvent();\r\n\r\n  let counter = 36;\r\n  let firstkey = 36;\r\n  const keyRefs = {} as SVGGElement[];\r\n\r\n  useEffect(() => {\r\n    console.log(\"Piano mounted\");\r\n    changeMidi(true);\r\n    document.addEventListener(\"keydown\", keyboardDown);\r\n    document.addEventListener(\"keyup\", keyboardUp);\r\n    return () => {\r\n      console.log(\"Piano disMounted\");\r\n      changeMidi(false);\r\n      document.removeEventListener(\"keydown\", keyboardDown);\r\n      document.removeEventListener(\"keyup\", keyboardUp);\r\n    };\r\n  }, [Melo.loading, keyboardDown, keyboardUp]);\r\n\r\n  const classes = useStyles();\r\n\r\n  const counterFunction = (octSize: number) => {\r\n    if (octSize > 6) {\r\n      counter = 24;\r\n      firstkey = 24;\r\n    } else if (octSize > 3) {\r\n      counter = 36;\r\n      firstkey = 36;\r\n    } else if (octSize > 1) {\r\n      counter = 48;\r\n      firstkey = 48;\r\n    } else {\r\n      counter = 60;\r\n      firstkey = 60;\r\n    }\r\n  };\r\n  const detectSize = (height: number) => {\r\n    const rythm = Melo.bpm * 4;\r\n    let tap = 32;\r\n    if (height > 700) {\r\n      tap = height / rythm;\r\n    } else if (height > 500) {\r\n      tap = height / rythm;\r\n    } else if (height > 300) {\r\n      tap = height / rythm;\r\n    } else if (height > 100) {\r\n      tap = height / rythm;\r\n    } else {\r\n      tap = height / rythm;\r\n    }\r\n    return tap;\r\n  };\r\n  const setKeyRef = (ref: SVGGElement | null) => {\r\n    if (ref) {\r\n      const key = ref.tabIndex;\r\n      keyRefs[key] = ref;\r\n    }\r\n  };\r\n\r\n  const setRef = (ref: HTMLDivElement) => {\r\n    if (ref && Melo.pianoLoading) {\r\n      const pianoSize = ref.getBoundingClientRect();\r\n      const width = pianoSize.width;\r\n      const height = Math.floor(window.innerHeight - (pianoSize.height + 64));\r\n      if (Melo.playMode) {\r\n        const tapSize = detectSize(height);\r\n        const baseLine = tapSize * (Melo.bpm <= 4 ? 4 : Melo.bpm) + 8;\r\n        const pianoLeft = pianoSize.left;\r\n        const canvasSize = { width, height, baseLine, pianoLeft };\r\n        drawGamePiano(keyRefs, canvasSize, tapSize);\r\n      } else if (Melo.noteMode && Melo.neededLines) {\r\n        const need = Melo.neededLines.up > 83 ? 102 : 83;\r\n        const lines =\r\n          Melo.neededLines.down < 58 || Melo.neededLines.up > 83 ? 28 : 16;\r\n        const lineSide = need > 83 ? rightLine : leftLine;\r\n        const tapSize = height / 2.1 / (lines / 2);\r\n        const spaceSize = width / (Melo.neededLines.notes + 2);\r\n        const fontSize =\r\n          spaceSize * 0.5 < 7 ? 7 : spaceSize * 0.5 > 12 ? 12 : spaceSize * 0.5;\r\n        const linesArray = Array.from(\r\n          Array(lines),\r\n          (_, i) => need - lineSide[i]\r\n        );\r\n        const notePos: INotePos = {};\r\n        linesArray.forEach((v, i) => {\r\n          const y = ((i + 1) * tapSize) / 2;\r\n          notePos[v] = { pos: y, note: pitchName(v) };\r\n          notePos[v - 1] = { pos: y, note: pitchName(v - 1) };\r\n        });\r\n        drawNotePiano(keyRefs, {\r\n          width,\r\n          height: height / 2.1,\r\n          tapSize,\r\n          spaceSize,\r\n          fontSize,\r\n          linesArray,\r\n          notePos,\r\n        });\r\n      } else {\r\n        drawGamePiano(keyRefs);\r\n      }\r\n    }\r\n  };\r\n  const themeColor = (color: string) => {\r\n    // if (color === \"black\") return theme === \"dark\" ? \"white\" : \"black\";\r\n    // if (color === \"white\") return theme === \"dark\" ? \"black\" : \"white\";\r\n    return color;\r\n  };\r\n  // const themer = theme === \"dark\" ? 1 : 0;\r\n  counterFunction(Melo.octave);\r\n  return (\r\n    <div ref={setRef} className={classes.root}>\r\n      {Array.from(Array(Melo.octave), (_, i) => \"oct\" + (i + 1)).map(\r\n        (oct, i) => {\r\n          const width = Melo.octave - i === 1 ? 668 : 584;\r\n          return (\r\n            <svg\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              id={oct}\r\n              key={oct}\r\n              width={width}\r\n              height=\"100%\"\r\n              viewBox={`0 0 ${width} 275`}\r\n              fill=\"none\"\r\n              style={\r\n                i !== Melo.octave - 1\r\n                  ? { marginRight: 8 / Melo.octave }\r\n                  : undefined\r\n              }\r\n            >\r\n              {SvgKeys.map((k, n) => {\r\n                let lastKey = SvgKeys.length;\r\n                let className = counter === firstkey ? \"first\" : k.note;\r\n                if (Melo.octave - i === 1 && lastKey === n + 1) {\r\n                  lastKey++;\r\n                  className = \"last\";\r\n                  i++;\r\n                }\r\n                let backFill = k.id === \"white\" ? \"#B5B5B5\" : undefined;\r\n                let frontFill =\r\n                  k.id === \"white\" ? \"black\" : \"rgb(255 255 255 / 65%)\";\r\n                const active = Melo.neededTracks?.some(\r\n                  (el) => el.pitch + 36 === counter\r\n                );\r\n                const textPos = k.id === \"white\" ? k.xPos : k.xPos + 6;\r\n                return (\r\n                  lastKey !== n + 1 && (\r\n                    <g\r\n                      id={k.id}\r\n                      ref={setKeyRef}\r\n                      onMouseUp={mouseUp}\r\n                      onMouseDown={mouseDown}\r\n                      onMouseLeave={mouseLeave}\r\n                      onTouchEnd={mouseLeave}\r\n                      onTouchMove={mouseOver}\r\n                      onTouchStart={mouseDown}\r\n                      key={oct + \"-\" + k.note + i}\r\n                      className={className}\r\n                      tabIndex={counter}\r\n                    >\r\n                      <path\r\n                        id=\"back\"\r\n                        d={k.front}\r\n                        fill={themeColor(k.id)}\r\n                        stroke={backFill}\r\n                      />\r\n                      {k.id !== \"white\" ? (\r\n                        <path\r\n                          id=\"front\"\r\n                          d={k.back}\r\n                          fill={themeColor(frontFill)}\r\n                        />\r\n                      ) : (\r\n                        <text\r\n                          id=\"front\"\r\n                          x={textPos}\r\n                          y={k.yPos}\r\n                          fill={themeColor(\"rgb(155 155 155)\")}\r\n                          fontSize=\"25\"\r\n                          fontWeight=\"900\"\r\n                        >\r\n                          {k.note}\r\n                        </text>\r\n                      )}\r\n                      {active && (\r\n                        <circle\r\n                          cx={k.xPos - 8}\r\n                          cy={k.yPos + 20}\r\n                          r=\"6\"\r\n                          fill={themeColor(\"rgb(56 56 56)\")}\r\n                          stroke={themeColor(k.id)}\r\n                          strokeWidth=\"2\"\r\n                        />\r\n                      )}\r\n                      {counter++ === 60 && (\r\n                        <polygon points=\"30,265 40,255 50,265\" fill=\"black\" />\r\n                      )}\r\n                    </g>\r\n                  )\r\n                );\r\n              })}\r\n            </svg>\r\n          );\r\n        }\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: AppState) => ({\r\n  theme: state.auth.theme,\r\n  Melo: state.melodition,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: ThunkDispatch<any, any, AppActions>) => ({\r\n  drawGamePiano: bindActionCreators(gamePiano, dispatch),\r\n  drawNotePiano: bindActionCreators(notePiano, dispatch),\r\n});\r\n\r\nconst connectedPiano = connect(mapStateToProps, mapDispatchToProps)(Piano);\r\n\r\nexport default connectedPiano;\r\n","import React, {\r\n  useState,\r\n  forwardRef,\r\n  useImperativeHandle,\r\n  useCallback,\r\n} from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { ThunkDispatch } from \"redux-thunk\";\r\nimport Slider from \"@material-ui/core/Slider\";\r\nimport { AppActions, AppState } from \"../../../_types\";\r\nimport { canvasWheel, drawSeekBar } from \"../../../_actions/player.actions\";\r\nimport { IMelodition } from \"../../../_types/player.types\";\r\n\r\ntype SeekBarProps = ReturnType<typeof mapStateToProps> &\r\n  ReturnType<typeof mapDispatchToProps>;\r\n\r\nconst Seekbar: React.FC<SeekBarProps> = ({ Melo, drawSeekBar }) => {\r\n  const callback = useCallback(\r\n    (node: any) => {\r\n      if (node && Melo.seekLoading) {\r\n        drawSeekBar({ seekBar: node });\r\n      }\r\n      return () => {};\r\n    },\r\n    [Melo.seekLoading, drawSeekBar]\r\n  );\r\n\r\n  return (\r\n    <div style={{ height: \"40%\" }}>\r\n      <SeekInput ref={callback} Melo={Melo} />\r\n    </div>\r\n  );\r\n};\r\nconst mapStateToProps = (state: AppState) => ({\r\n  Melo: state.melodition,\r\n});\r\nconst mapDispatchToProps = (dispatch: ThunkDispatch<any, any, AppActions>) => ({\r\n  drawSeekBar: bindActionCreators(drawSeekBar, dispatch),\r\n});\r\nconst connectedSeekbar = connect(mapStateToProps, mapDispatchToProps)(Seekbar);\r\n\r\nexport default connectedSeekbar;\r\n\r\ninterface SeekInputProps {\r\n  Melo: IMelodition;\r\n}\r\nconst SeekInput = forwardRef<unknown, SeekInputProps>(({ Melo }, ref) => {\r\n  const [seek, setSeek] = useState(0);\r\n  useImperativeHandle(ref, () => {\r\n    return {\r\n      changeSeeker: changeSeeker,\r\n    };\r\n  });\r\n  const changeSeeker = (value: number) => {\r\n    if (typeof value === \"number\") {\r\n      setSeek(value);\r\n    }\r\n  };\r\n  const seekchanger = (value: number | number[]) => {\r\n    if (typeof value === \"number\") {\r\n      canvasWheel(value);\r\n    }\r\n  };\r\n  return (\r\n    <Slider\r\n      color=\"secondary\"\r\n      orientation=\"vertical\"\r\n      aria-label=\"seekbar\"\r\n      defaultValue={0}\r\n      max={Melo.songLength}\r\n      min={0}\r\n      onChange={(_, e) => seekchanger(e)}\r\n      aria-labelledby=\"vertical-slider\"\r\n      value={seek}\r\n    />\r\n  );\r\n});\r\n","import React from \"react\";\r\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\r\nimport {\r\n  Divider,\r\n  Typography,\r\n  Toolbar,\r\n  AppBar,\r\n  IconButton,\r\n} from \"@material-ui/core\";\r\nimport { ArrowForward } from \"@material-ui/icons\";\r\nimport { ILesson } from \"../../../../../_types/lesson.types\";\r\n// import AccountCircle from \"@material-ui/icons/AccountCircle\";\r\n// import MenuItem from \"@material-ui/core/MenuItem\";\r\n// import Menu from \"@material-ui/core/Menu\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n      flexGrow: 1,\r\n    },\r\n    divider: {\r\n      margin: theme.spacing(0, 2),\r\n    },\r\n  })\r\n);\r\n\r\ninterface Props {\r\n  modeChanger: () => void;\r\n  lesson?: ILesson;\r\n}\r\n\r\nexport default function MenuAppBar({ lesson, modeChanger }: Props) {\r\n  const classes = useStyles();\r\n  // const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\r\n  // const open = Boolean(anchorEl);\r\n\r\n  // const handleMenu = (event: React.MouseEvent<HTMLElement>) => {\r\n  //   setAnchorEl(event.currentTarget);\r\n  // };\r\n\r\n  // const handleClose = () => {\r\n  //   setAnchorEl(null);\r\n  // };\r\n\r\n  return (\r\n    <AppBar position=\"static\" color=\"default\" className={classes.root}>\r\n      <Toolbar>\r\n        <IconButton\r\n          edge=\"start\"\r\n          color=\"inherit\"\r\n          aria-label=\"menu\"\r\n          onClick={modeChanger}\r\n        >\r\n          <ArrowForward />\r\n        </IconButton>\r\n        <Divider orientation=\"vertical\" flexItem className={classes.divider} />\r\n        <Typography variant=\"h6\" color=\"inherit\" className={classes.title}>\r\n          {lesson?.title}\r\n        </Typography>\r\n        {/*<div>\r\n          <IconButton\r\n            aria-label=\"account of current user\"\r\n            aria-controls=\"menu-appbar\"\r\n            aria-haspopup=\"true\"\r\n            onClick={handleMenu}\r\n            color=\"inherit\"\r\n          >\r\n            <AccountCircle />\r\n          </IconButton>\r\n          <Menu\r\n            id=\"menu-appbar\"\r\n            anchorEl={anchorEl}\r\n            anchorOrigin={{\r\n              vertical: \"top\",\r\n              horizontal: \"right\",\r\n            }}\r\n            keepMounted\r\n            transformOrigin={{\r\n              vertical: \"top\",\r\n              horizontal: \"right\",\r\n            }}\r\n            open={open}\r\n            onClose={handleClose}\r\n          >\r\n            <MenuItem onClick={handleClose}>Profile</MenuItem>\r\n            <MenuItem onClick={handleClose}>My account</MenuItem>\r\n          </Menu>\r\n          </div>*/}\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { canvasWheel } from \"../../../../../_actions/player.actions\";\r\nimport { IMelodition } from \"../../../../../_types/player.types\";\r\n\r\ninterface CanvasProps {\r\n  Melo: IMelodition;\r\n  drawGame: (canvas: HTMLCanvasElement) => void;\r\n}\r\nconst GameFront: React.FC<CanvasProps> = ({ Melo, drawGame }) => {\r\n  const drawFrontContext = (ref: HTMLCanvasElement | null) => {\r\n    if (ref && Melo.gameLoading && Melo.canvasSize) {\r\n      drawGame(ref);\r\n    }\r\n  };\r\n  return (\r\n    <canvas\r\n      ref={(ref) => drawFrontContext(ref)}\r\n      width={Melo.canvasSize?.width}\r\n      height={Melo.canvasSize?.height}\r\n      style={{ position: \"absolute\", top: 0, left: 0, zIndex: 2 }}\r\n      onWheel={(e) => canvasWheel(e)}\r\n    />\r\n  );\r\n};\r\nexport default GameFront;\r\n","import React from \"react\";\r\nimport { IMelodition } from \"../../../../../_types/player.types\";\r\n\r\ninterface CanvasProps {\r\n  Melo: IMelodition;\r\n}\r\n\r\nconst GameBack: React.FC<CanvasProps> = ({ Melo }) => {\r\n  const drawBackContext = (ref: HTMLCanvasElement | null) => {\r\n    if (ref && Melo.canvasSize && Melo.gameLoading) {\r\n      const backCtx = ref.getContext(\"2d\")!;\r\n      backCtx.clearRect(0, 0, Melo.canvasSize.width, Melo.canvasSize.height);\r\n      const keyRefs = Melo.pianoSize;\r\n      const length = keyRefs ? keyRefs.length - 1 : 61;\r\n      const lineWidth = keyRefs ? keyRefs[length].width : 0.5;\r\n      const h = Melo.canvasSize.height;\r\n      keyRefs?.forEach((rect, i) => {\r\n        backCtx.beginPath();\r\n        const x = rect.left;\r\n        if (rect.key === \"CF\") {\r\n          backCtx.moveTo(x, 0);\r\n          backCtx.lineTo(x, h);\r\n          backCtx.lineWidth = lineWidth;\r\n          backCtx.strokeStyle = \"rgba(50,50,50,0.8)\";\r\n          backCtx.stroke();\r\n        } else if (rect.key === \"last\") {\r\n          backCtx.moveTo(x, 0);\r\n          backCtx.lineTo(x, h);\r\n          backCtx.lineWidth = lineWidth;\r\n          backCtx.strokeStyle = \"rgba(50,50,50,0.8)\";\r\n          backCtx.stroke();\r\n        } else if (rect.key === \"black\") {\r\n          backCtx.rect(x, 0, rect.width, h);\r\n          backCtx.fillStyle = \"rgba(0,0,0,0.4)\";\r\n          backCtx.fill();\r\n        }\r\n      });\r\n    }\r\n  };\r\n  return (\r\n    <canvas\r\n      ref={(ref) => drawBackContext(ref)}\r\n      width={Melo.canvasSize?.width}\r\n      height={Melo.canvasSize?.height}\r\n      style={{ zIndex: 1 }}\r\n    />\r\n  );\r\n};\r\nexport default GameBack;\r\n","import React from \"react\";\r\nimport { canvasWheel } from \"../../../../../_actions/player.actions\";\r\nimport { ICanvas } from \"../../../../../_types/player.types\";\r\n\r\nconst SvgLine: React.FC<ICanvas> = ({ width, baseLine }) => {\r\n  return (\r\n    <svg\r\n      width={width + 7}\r\n      height={baseLine}\r\n      onWheel={(e) => canvasWheel(e)}\r\n      style={{\r\n        bottom: 0,\r\n        left: -7,\r\n        zIndex: 3,\r\n        position: \"absolute\",\r\n        filter: \"drop-shadow(rgba(0, 0, 0, 0.7) 0px 1px 1px)\",\r\n      }}\r\n    >\r\n      <style>{\"@keyframes draw{to{stroke-dashoffset:0}}\"}</style>\r\n      <polygon points={\"0,0 10,8 0,16\"} fill={\"red\"} />\r\n      <line\r\n        style={{\r\n          strokeDasharray: width + 7,\r\n          strokeDashoffset: width + 7,\r\n          animation: \"draw 1s linear forwards\",\r\n        }}\r\n        x1={0}\r\n        y1={8}\r\n        x2={width + 7}\r\n        y2={8}\r\n        strokeWidth={2.5}\r\n        stroke={\"red\"}\r\n      />\r\n    </svg>\r\n  );\r\n};\r\nexport default SvgLine;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { ThunkDispatch } from \"redux-thunk\";\r\nimport { drawGame } from \"../../../../../_actions/player.actions\";\r\nimport { IMelodition } from \"../../../../../_types/player.types\";\r\nimport { AppActions, AppState } from \"../../../../../_types\";\r\nimport GameFront from \"./GameFront\";\r\nimport GameBack from \"./GameBack\";\r\nimport SvgLine from \"./SvgLine\";\r\n\r\ninterface Props {\r\n  Melo: IMelodition;\r\n  drawGame: (canvas: any) => void;\r\n}\r\n\r\nconst GameCanvas: React.FC<Props> = ({ Melo, drawGame }) => {\r\n  return (\r\n    <div\r\n      style={{\r\n        width: Melo.canvasSize?.width,\r\n        height: Melo.canvasSize?.height,\r\n        position: \"relative\",\r\n        boxShadow: \"inset 0 1px 4px 0px black\",\r\n      }}\r\n    >\r\n      <GameFront Melo={Melo} drawGame={drawGame} />\r\n      <GameBack Melo={Melo} />\r\n      {Melo.canvasSize && <SvgLine {...Melo.canvasSize} />}\r\n    </div>\r\n  );\r\n};\r\nconst mapStateToProps = (state: AppState) => ({\r\n  Melo: state.melodition,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: ThunkDispatch<any, any, AppActions>) => ({\r\n  drawGame: bindActionCreators(drawGame, dispatch),\r\n});\r\n\r\nconst connectedPianoCanvas = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(GameCanvas);\r\n\r\nexport default connectedPianoCanvas;\r\n","import React, { Component, ComponentType } from \"react\";\r\nimport { ThunkDispatch } from \"redux-thunk\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { ArrowBackIos } from \"@material-ui/icons\";\r\nimport {\r\n  createStyles,\r\n  Grid,\r\n  Theme,\r\n  IconButton,\r\n  WithStyles,\r\n  withStyles,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  changeMode,\r\n  drawGame,\r\n  gamePiano,\r\n  resizePlayer,\r\n} from \"../../../../../_actions/player.actions\";\r\nimport { IMelodition } from \"../../../../../_types/player.types\";\r\nimport { AppActions, AppState } from \"../../../../../_types\";\r\nimport { ILesson } from \"../../../../../_types/lesson.types\";\r\nimport { ICourse } from \"../../../../../_types/course.types\";\r\nimport { PlayButton } from \"../../../Player/Buttons\";\r\nimport { LoadingCircle } from \"../../../Loadings\";\r\nimport Seekbar from \"../../../Player/SeekBar\";\r\nimport PlayerHeader from \"./PlayerHeader\";\r\nimport PianoCanvas from \"../GameCanvas\";\r\nimport Piano from \"..\";\r\n\r\nconst useStyles = (theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      width: \"100vw\",\r\n      height: \"100vh\",\r\n      overflow: \"hidden\",\r\n      backgroundColor: theme.palette.background.paper,\r\n    },\r\n    main: {\r\n      width: \"100vw\",\r\n      overflow: \"hidden\",\r\n      minHeight: \"calc(100vh - 64px)\",\r\n      [theme.breakpoints.down(\"xs\")]: {\r\n        minHeight: \"calc(100vh - 56px)\",\r\n      },\r\n      display: \"flex\",\r\n    },\r\n    content: {\r\n      height: \"100%\",\r\n      width: \"100%\",\r\n      flexWrap: \"nowrap\",\r\n    },\r\n    doubleGrid: {\r\n      flexWrap: \"nowrap\",\r\n      width: \"100%\",\r\n      maxWidth: \"100%\",\r\n      \"& > div\": {\r\n        margin: \"auto\",\r\n        padding: 0,\r\n        height: \"100%\",\r\n      },\r\n    },\r\n    centerText: {\r\n      textAlign: \"center\",\r\n    },\r\n    loading: {\r\n      display: \"flex\",\r\n      height: \"83%\",\r\n      boxShadow: \"inset 0 1px 4px 0px black\",\r\n    },\r\n  });\r\n\r\ninterface LessonPlayerModeProps extends WithStyles<typeof useStyles> {\r\n  history: string;\r\n  lesson?: ILesson;\r\n  course?: ICourse;\r\n  theme: \"light\" | \"dark\";\r\n  melodition: IMelodition;\r\n}\r\n\r\ninterface States {\r\n  list: boolean;\r\n}\r\n\r\ntype Props = LessonPlayerModeProps & ReturnType<typeof mapDispatchToProps>;\r\n\r\nclass LessonPlayerMode extends Component<Props, States> {\r\n  constructor(props: Props) {\r\n    super(props);\r\n    this.state = {\r\n      list: false,\r\n    };\r\n  }\r\n\r\n  svgWidth = (i: number): number => {\r\n    const num = i === 1 ? 668 : 584;\r\n    return num;\r\n  };\r\n\r\n  toggleDrawer = (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\r\n    if (event.type === \"keydown\") {\r\n      return;\r\n    }\r\n    if (this.state.list) {\r\n      this.setState({ list: false });\r\n    } else {\r\n      this.setState({ list: true });\r\n    }\r\n  };\r\n  playmodeChanger = () => {\r\n    this.props.changeMode(false);\r\n  };\r\n  componentDidMount() {\r\n    window.addEventListener(\"resize\", this.updateDimensions);\r\n  }\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"resize\", this.updateDimensions);\r\n  }\r\n  updateDimensions = () => {\r\n    if (!this.props.melodition.pianoLoading) {\r\n      this.props.resizePlayer();\r\n    }\r\n  };\r\n  render() {\r\n    const { classes, melodition, lesson } = this.props;\r\n    return (\r\n      <div className={classes.root}>\r\n        <PlayerHeader modeChanger={this.playmodeChanger} lesson={lesson} />\r\n        {melodition.playMode ? (\r\n          <Grid container className={classes.main}>\r\n            <Grid item xs={1}>\r\n              <Grid\r\n                container\r\n                direction=\"column\"\r\n                justify=\"center\"\r\n                alignItems=\"center\"\r\n                className={classes.content}\r\n              >\r\n                <PlayButton loading={melodition.loading} />\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item xs={10}>\r\n              <Grid\r\n                container\r\n                direction=\"column\"\r\n                justify=\"center\"\r\n                alignItems=\"center\"\r\n                className={classes.content}\r\n              >\r\n                <Grid item xs={12}>\r\n                  {melodition.pianoLoading ? (\r\n                    <LoadingCircle noPad />\r\n                  ) : (\r\n                    <PianoCanvas />\r\n                  )}\r\n                  <Piano />\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item xs={1}>\r\n              <Grid\r\n                container\r\n                direction=\"column\"\r\n                justify=\"space-around\"\r\n                alignItems=\"center\"\r\n                className={classes.content}\r\n              >\r\n                <Seekbar />\r\n                <IconButton color=\"secondary\" aria-label=\"play mode\">\r\n                  <ArrowBackIos />\r\n                </IconButton>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        ) : (\r\n          <Grid container className={classes.main}>\r\n            <LoadingCircle />\r\n          </Grid>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (\r\n  state: AppState,\r\n  ownProps: Props\r\n): LessonPlayerModeProps => ({\r\n  history: state.router.location.pathname,\r\n  classes: ownProps.classes,\r\n  melodition: state.melodition,\r\n  theme: state.auth.theme,\r\n  lesson: state.single.lesson.data,\r\n  course: state.single.course.data,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: ThunkDispatch<any, any, AppActions>) => ({\r\n  changeMode: bindActionCreators(changeMode, dispatch),\r\n  drawGame: bindActionCreators(drawGame, dispatch),\r\n  drawPiano: bindActionCreators(gamePiano, dispatch),\r\n  resizePlayer: bindActionCreators(resizePlayer, dispatch),\r\n});\r\n\r\nexport default (connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(\r\n  withStyles(useStyles)(LessonPlayerMode)\r\n) as unknown) as ComponentType<unknown>;\r\n"],"sourceRoot":""}