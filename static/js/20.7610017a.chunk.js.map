{"version":3,"sources":["_actions/guide.actions.ts","_actions/course.actions.ts","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","_actions/exercise.actions.ts","_actions/lesson.actions.ts","components/LearningPages/Course/CourseItems.tsx","components/LearningPages/Course/index.tsx"],"names":["requestAllGuide","dispatch","getState","guideState","bank","guides","resetTime","getTheTime","nextLoad","data","type","REQUEST_GUIDES","API","get","then","res","SUCCESS_GUIDES","payload","catch","err","errorHandler","FAILURE_GUIDES","requestGuide","path","guide","newPath","found","find","id","SUCCESS_GUIDE","SAVE_COURSES","addCourses","guide_select","SAVE_EXERCISES","addExercises","course","requestCourse","exercise","requestExercise","REQUEST_GUIDE","SAVE_GUIDES","FAILURE_GUIDE","added","map","lesson","push","requestAllCourse","courseState","courses","REQUEST_COURSES","SUCCESS_COURSES","FAILURE_COURSES","compiler","Compiler","course_select","SUCCESS_COURSE","SAVE_LESSONS","lessons","exercises","requestLesson","REQUEST_COURSE","FAILURE_COURSE","select","info","genre","name","_objectWithoutProperties","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","call","requestAllExercise","exerciseState","REQUEST_EXERCISES","SUCCESS_EXERCISES","FAILURE_EXERCISES","ENTER_NOTEMODE","SUCCESS_EXERCISE","REQUEST_EXERCISE","FAILURE_EXERCISE","requestAllLesson","lessonState","REQUEST_LESSONS","SUCCESS_LESSONS","FAILURE_LESSONS","SUCCESS_LESSON","REQUEST_LESSON","FAILURE_LESSON","useStyles","makeStyles","theme","createStyles","root","maxHeight","width","margin","spacing","content","minHeight","rightChip","position","cursor","backgroundColor","CourseItem","courseItem","classes","title","featured_img","Card","className","CardActionArea","onClick","e","typer","store","Grid","container","item","lg","xs","sm","xl","Chip","label","grade","CardMedia","component","alt","height","image","thumbnailsFinder","CardContent","Typography","gutterBottom","variant","Course","pathFinder","this","props","pathname","loading","error","justify","md","thumbnails","text","description","k","autoMargin","Component","connect","state","ownProps","router","location","single","bindActionCreators","withStyles","breakpoints","down","padding","palette","secondary","main","opacity"],"mappings":"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","file":"static/js/20.7610017a.chunk.js","sourcesContent":["import { Dispatch } from \"react\";\r\nimport {\r\n  SAVE_GUIDES,\r\n  FAILURE_GUIDE,\r\n  REQUEST_GUIDE,\r\n  SUCCESS_GUIDE,\r\n  FAILURE_GUIDES,\r\n  REQUEST_GUIDES,\r\n  SUCCESS_GUIDES,\r\n  GuideSelect,\r\n} from \"../_types/guide.types\";\r\nimport { AppState } from \"../_types\";\r\nimport { API } from \"../_helpers/api\";\r\nimport { AppActions } from \"../_types\";\r\nimport { errorHandler } from \"../components/Layout/SnackBar/alert\";\r\nimport { ILesson } from \"../_types/lesson.types\";\r\nimport { getTheTime, PathFinder } from \"../_helpers/constants\";\r\nimport { SAVE_EXERCISES } from \"../_types/exercise.types\";\r\nimport { ICourse, SAVE_COURSES } from \"../_types/course.types\";\r\nimport { requestExercise } from \"./exercise.actions\";\r\nimport { requestCourse } from \"./course.actions\";\r\nimport { ThunkDispatch } from \"redux-thunk\";\r\n\r\nexport const requestAllGuide = () => (\r\n  (dispatch: Dispatch<AppActions>, getState: () => AppState) => {\r\n    const guideState = getState().bank.guides;\r\n    const currentTime = getTheTime();\r\n    const resetTime = currentTime - guideState.nextLoad;\r\n    if (guideState.data && resetTime <= 0) {\r\n      return;\r\n    }\r\n    dispatch({ type: REQUEST_GUIDES });\r\n\r\n    API.get(`/lesson/v2/guide`)\r\n      .then(res => dispatch({\r\n        type: SUCCESS_GUIDES, payload: {\r\n          data: res.data,\r\n          nextLoad: getTheTime(10)\r\n        }\r\n      }))\r\n      .catch(err => errorHandler(err, FAILURE_GUIDES))\r\n  }\r\n)\r\n\r\nexport const requestGuide = (path: PathFinder) => (\r\n  (dispatch: ThunkDispatch<AppState, undefined, AppActions>, getState: () => AppState) => {\r\n    const { guide, ...newPath } = path;\r\n    const found = getState().bank.guides.data.find(guide => guide.id === path.guide);\r\n    if (found) {\r\n\r\n      dispatch({ type: SUCCESS_GUIDE, data: found });\r\n      dispatch({ type: SAVE_COURSES, data: addCourses(found.guide_select) });\r\n      dispatch({ type: SAVE_EXERCISES, data: addExercises(found.guide_select) });\r\n      if (path.course) dispatch(requestCourse(newPath));\r\n      if (path.exercise) dispatch(requestExercise(newPath));\r\n    } else {\r\n\r\n      dispatch({ type: REQUEST_GUIDE });\r\n      API.get(`/lesson/v2/guide?id=${path.guide}`)\r\n        .then(res => {\r\n          dispatch({ type: SUCCESS_GUIDE, data: res.data[0] });\r\n          dispatch({ type: SAVE_GUIDES, data: res.data });\r\n          dispatch({ type: SAVE_COURSES, data: addCourses(res.data[0].guide_select) });\r\n          dispatch({ type: SAVE_EXERCISES, data: addExercises(res.data[0].guide_select) });\r\n          if (path.course) dispatch(requestCourse(newPath));\r\n          if (path.exercise) dispatch(requestExercise(newPath));\r\n        })\r\n        .catch(err => errorHandler(err, FAILURE_GUIDE));\r\n    }\r\n  }\r\n)\r\n\r\nconst addCourses = (guide_select: GuideSelect[]) => {\r\n  const added: ICourse[] = []\r\n  guide_select.map((course) => course.course?.map(lesson => added.push(lesson)))\r\n  return added;\r\n};\r\nconst addExercises = (guide_select: GuideSelect[]) => {\r\n  const added: ILesson[] = []\r\n  guide_select.map((course) => course.exercise?.map(exercise => added.push(exercise)))\r\n  return added;\r\n}","import { Dispatch } from \"react\";\r\nimport {\r\n  SAVE_COURSES,\r\n  FAILURE_COURSE,\r\n  REQUEST_COURSE,\r\n  SUCCESS_COURSE,\r\n  FAILURE_COURSES,\r\n  REQUEST_COURSES,\r\n  SUCCESS_COURSES,\r\n} from \"../_types/course.types\";\r\nimport { AppState } from \"../_types\";\r\nimport { API } from \"../_helpers/api\";\r\nimport { AppActions } from \"../_types\";\r\nimport { errorHandler } from \"../components/Layout/SnackBar/alert\";\r\nimport { getTheTime, PathFinder } from \"../_helpers/constants\";\r\nimport { SAVE_EXERCISES } from \"../_types/exercise.types\";\r\nimport { ILesson, SAVE_LESSONS } from \"../_types/lesson.types\";\r\nimport { requestGuide } from \"./guide.actions\";\r\nimport { ThunkDispatch } from \"redux-thunk\";\r\nimport { requestLesson } from \"./lesson.actions\";\r\nimport { requestExercise } from \"./exercise.actions\";\r\n\r\nexport const requestAllCourse = () => (\r\n  (dispatch: Dispatch<AppActions>, getState: () => AppState) => {\r\n    const courseState = getState().bank.courses;\r\n    const currentTime = getTheTime();\r\n    const resetTime = currentTime - courseState.nextLoad;\r\n    if (courseState.data && resetTime <= 0) {\r\n      return;\r\n    }\r\n    dispatch({ type: REQUEST_COURSES });\r\n\r\n    API.get(`/lesson/v2/course`)\r\n      .then(res => dispatch({\r\n        type: SUCCESS_COURSES, payload: {\r\n          data: res.data,\r\n          nextLoad: getTheTime(10)\r\n        }\r\n      }))\r\n      .catch(err => errorHandler(err, FAILURE_COURSES))\r\n  }\r\n)\r\n\r\nexport const requestCourse = (path: PathFinder) => (\r\n  (dispatch: ThunkDispatch<AppState, undefined, AppActions>, getState: () => AppState) => {\r\n    const found = getState().bank.courses.data.find(course => course.id === path.course);\r\n    const { course, ...newPath } = path;\r\n    if (found) {\r\n\r\n      const compiler = Compiler(found.course_select);\r\n      dispatch({ type: SUCCESS_COURSE, data: found })\r\n      dispatch({ type: SAVE_LESSONS, data: compiler.lessons })\r\n      dispatch({ type: SAVE_EXERCISES, data: compiler.exercises })\r\n      if (path.lesson) dispatch(requestLesson(newPath))\r\n      if (path.exercise) dispatch(requestExercise(newPath))\r\n    }\r\n    else if (path.guide) {\r\n      dispatch(requestGuide(path))\r\n    }\r\n    else if (!found) {\r\n\r\n      dispatch({ type: REQUEST_COURSE });\r\n      API.get(`/lesson/v2/course?id=${path.course}`)\r\n        .then(res => {\r\n          const compiler = Compiler(res.data[0].course_select);\r\n          dispatch({ type: SUCCESS_COURSE, data: res.data[0] })\r\n          dispatch({ type: SAVE_COURSES, data: res.data })\r\n          dispatch({ type: SAVE_LESSONS, data: compiler.lessons })\r\n          dispatch({ type: SAVE_EXERCISES, data: compiler.exercises })\r\n          if (path.lesson) dispatch(requestLesson(newPath))\r\n          if (path.exercise) dispatch(requestExercise(newPath))\r\n        })\r\n        .catch(err => errorHandler(err, FAILURE_COURSE))\r\n    }\r\n  }\r\n)\r\n\r\nconst Compiler = (course_select: ILesson[]) => {\r\n  const lessons: ILesson[] = []\r\n  const exercises: ILesson[] = []\r\n  course_select.map(select => select.info.genre.name === \"Exercise\" ? exercises.push(select) : lessons.push(select))\r\n  return { lessons, exercises };\r\n};\r\n","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import { Dispatch } from \"react\";\r\nimport { ThunkDispatch } from \"redux-thunk\";\r\nimport {\r\n  FAILURE_EXERCISE,\r\n  REQUEST_EXERCISE,\r\n  SUCCESS_EXERCISE,\r\n  FAILURE_EXERCISES,\r\n  REQUEST_EXERCISES,\r\n  SUCCESS_EXERCISES,\r\n  SAVE_EXERCISES,\r\n} from \"../_types/exercise.types\";\r\nimport { errorHandler } from \"../components/Layout/SnackBar/alert\";\r\nimport { getTheTime, PathFinder } from \"../_helpers/constants\";\r\nimport { requestCourse } from \"./course.actions\";\r\nimport { requestGuide } from \"./guide.actions\";\r\nimport { AppActions } from \"../_types\";\r\nimport { API } from \"../_helpers/api\";\r\nimport { AppState } from \"../_types\";\r\nimport { ENTER_NOTEMODE } from \"../_types/player.types\";\r\n\r\nexport const requestAllExercise = () => (\r\n  (dispatch: Dispatch<AppActions>, getState: () => AppState) => {\r\n    const exerciseState = getState().bank.exercises;\r\n    const currentTime = getTheTime();\r\n    const resetTime = currentTime - exerciseState.nextLoad;\r\n    if (exerciseState.data && resetTime <= 0) {\r\n      return;\r\n    }\r\n    dispatch({ type: REQUEST_EXERCISES });\r\n\r\n    API.get(`/lesson/v2?course=125`)\r\n      .then(res => dispatch({\r\n        type: SUCCESS_EXERCISES, payload: {\r\n          data: res.data,\r\n          nextLoad: getTheTime(10)\r\n        }\r\n      }))\r\n      .catch(err => errorHandler(err, FAILURE_EXERCISES))\r\n  }\r\n)\r\n\r\nexport const requestExercise = (path: PathFinder) => (\r\n  (dispatch: ThunkDispatch<AppState, undefined, AppActions>, getState: () => AppState) => {\r\n    const found = getState().bank.exercises.data.find(exercise => exercise.id === path.exercise);\r\n    if (found) {\r\n      dispatch({ type: ENTER_NOTEMODE })\r\n      dispatch({ type: SUCCESS_EXERCISE, data: found })\r\n    }\r\n    else if (path.guide) {\r\n      dispatch(requestGuide(path))\r\n    }\r\n    else if (path.course) {\r\n      dispatch(requestCourse(path))\r\n    }\r\n    else if (!found) {\r\n      dispatch({ type: REQUEST_EXERCISE });\r\n      API.get(`/lesson/v2?id=${path.exercise}`)\r\n        .then(res => {\r\n          dispatch({ type: ENTER_NOTEMODE })\r\n          dispatch({ type: SUCCESS_EXERCISE, data: res.data[0] })\r\n          dispatch({ type: SAVE_EXERCISES, data: res.data })\r\n        })\r\n        .catch(err => errorHandler(err, FAILURE_EXERCISE))\r\n    }\r\n  }\r\n)","import { Dispatch } from \"react\";\r\nimport {\r\n  FAILURE_LESSON,\r\n  REQUEST_LESSON,\r\n  SUCCESS_LESSON,\r\n  FAILURE_LESSONS,\r\n  REQUEST_LESSONS,\r\n  SUCCESS_LESSONS,\r\n  SAVE_LESSONS,\r\n} from \"../_types/lesson.types\";\r\nimport { API } from \"../_helpers/api\";\r\nimport { AppState } from \"../_types\";\r\nimport { AppActions } from \"../_types\";\r\nimport { getTheTime, PathFinder } from \"../_helpers/constants\";\r\nimport { errorHandler } from \"../components/Layout/SnackBar/alert\";\r\nimport { requestGuide } from \"./guide.actions\";\r\nimport { requestCourse } from \"./course.actions\";\r\nimport { ThunkDispatch } from \"redux-thunk\";\r\n\r\nexport const requestAllLesson = () => (\r\n  (dispatch: Dispatch<AppActions>, getState: () => AppState) => {\r\n    const lessonState = getState().bank.lessons;\r\n    const currentTime = getTheTime();\r\n    const resetTime = currentTime - lessonState.nextLoad;\r\n    if (lessonState.data && resetTime <= 0) {\r\n      return;\r\n    }\r\n    dispatch({ type: REQUEST_LESSONS });\r\n\r\n    API.get(`/lesson/v2`)\r\n      .then(res => dispatch({\r\n        type: SUCCESS_LESSONS, payload: {\r\n          data: res.data,\r\n          nextLoad: getTheTime(10)\r\n        }\r\n      }))\r\n      .catch(err => errorHandler(err, FAILURE_LESSONS))\r\n  }\r\n)\r\n\r\nexport const requestLesson = (path: PathFinder) => (\r\n  (dispatch: ThunkDispatch<AppState, undefined, AppActions>, getState: () => AppState) => {\r\n    const found = getState().bank.lessons.data.find(lesson => lesson.id === path.lesson);\r\n\r\n    if (found) {\r\n      dispatch({ type: SUCCESS_LESSON, data: found })\r\n    }\r\n    else if (path.guide) {\r\n      dispatch(requestGuide(path))\r\n    }\r\n    else if (path.course) {\r\n      dispatch(requestCourse(path))\r\n    }\r\n    else if (!found) {\r\n      dispatch({ type: REQUEST_LESSON });\r\n      API.get(`/lesson/v2?id=${path.lesson}`)\r\n        .then(res => {\r\n          dispatch({ type: SUCCESS_LESSON, data: res.data[0] })\r\n          dispatch({ type: SAVE_LESSONS, data: res.data })\r\n        })\r\n        .catch(err => errorHandler(err, FAILURE_LESSON))\r\n    }\r\n  }\r\n)\r\n\r\n","import React from \"react\";\r\nimport { push } from \"connected-react-router\";\r\nimport {\r\n  Card,\r\n  CardMedia,\r\n  Typography,\r\n  CardContent,\r\n  CardActionArea,\r\n  Chip,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\r\n\r\nimport { store } from \"../../../_store/store.config\";\r\nimport { thumbnailsFinder } from \"../../../_helpers/constants\";\r\nimport { ILesson } from \"../../../_types/lesson.types\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      maxHeight: 280,\r\n      width: \"100%\",\r\n      margin: theme.spacing(1),\r\n    },\r\n    content: {\r\n      minHeight: 130,\r\n    },\r\n    rightChip: {\r\n      position: \"absolute\",\r\n      cursor: \"pointer\",\r\n      margin: theme.spacing(1),\r\n      backgroundColor: \"green\",\r\n    },\r\n  })\r\n);\r\n\r\ntype Props = {\r\n  courseItem: ILesson;\r\n  type: string;\r\n  path: string;\r\n};\r\n\r\nexport const CourseItem: React.FC<Props> = ({ type, courseItem, path }) => {\r\n  const classes = useStyles();\r\n  const { title, id, featured_img, info } = courseItem;\r\n\r\n  const clickHandler = (\r\n    e: React.MouseEvent<HTMLButtonElement, MouseEvent>\r\n  ): void => {\r\n    const typer = type === \"Exercise\" ? \"exercise\" : \"lesson\";\r\n    store.dispatch(push(path + \"/\" + typer + \"=\" + id));\r\n  };\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardActionArea onClick={clickHandler}>\r\n        <Grid container>\r\n          <Grid item lg={4} xs={4} sm={4} xl={4}>\r\n            <Chip label={info.grade.name} className={classes.rightChip} />\r\n            <CardMedia\r\n              component=\"img\"\r\n              alt={title}\r\n              height=\"200\"\r\n              image={thumbnailsFinder(featured_img)}\r\n              title={title}\r\n            />\r\n          </Grid>\r\n          <Grid item lg={8} xs={8} sm={8} xl={8}>\r\n            <CardContent className={classes.content}>\r\n              <Typography gutterBottom variant=\"body1\" component=\"h6\">\r\n                {title}\r\n              </Typography>\r\n            </CardContent>\r\n          </Grid>\r\n        </Grid>\r\n      </CardActionArea>\r\n    </Card>\r\n  );\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { ThunkDispatch } from \"redux-thunk\";\r\nimport {\r\n  Grid,\r\n  createStyles,\r\n  Theme,\r\n  Typography,\r\n  WithStyles,\r\n  withStyles,\r\n  CardMedia,\r\n} from \"@material-ui/core\";\r\n\r\nimport { AppActions, AppState } from \"../../../_types\";\r\nimport { ICourse } from \"../../../_types/course.types\";\r\nimport {\r\n  PathFinder,\r\n  pathFinder,\r\n  thumbnailsFinder,\r\n} from \"../../../_helpers/constants\";\r\nimport { requestCourse } from \"../../../_actions/course.actions\";\r\nimport { CourseItem } from \"./CourseItems\";\r\nimport { LoadingCircle } from \"../../Layout/Loadings\";\r\n\r\nconst useStyles = (theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      width: \"99vw\",\r\n      minHeight: \"calc(100vh - 128px)\",\r\n      [theme.breakpoints.down(\"xs\")]: {\r\n        minHeight: \"calc(100vh - 112px)\",\r\n        padding: theme.spacing(1),\r\n      },\r\n      padding: theme.spacing(2),\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      justifyContent: \"flex-start\",\r\n    },\r\n    autoMargin: {\r\n      margin: \"auto\",\r\n    },\r\n    content: {\r\n      position: \"relative\",\r\n      minHeight: \"calc(100vh - 160px)\",\r\n      [theme.breakpoints.down(\"sm\")]: {\r\n        minHeight: \"100%\",\r\n      },\r\n      border: `1px solid ${theme.palette.secondary.main}`,\r\n      height: \"100%\",\r\n      width: \"100%\",\r\n    },\r\n    text: {\r\n      padding: 20,\r\n    },\r\n    image: {\r\n      width: \"100%\",\r\n      height: \"100%\",\r\n      opacity: \"0.3\",\r\n      position: \"absolute\",\r\n    },\r\n  });\r\n\r\ninterface CourseProps extends WithStyles<typeof useStyles> {\r\n  data?: ICourse;\r\n  loading: boolean;\r\n  error: string;\r\n  pathname: string;\r\n}\r\n\r\ntype Props = CourseProps & LinkDispatchProps;\r\n\r\nclass Course extends Component<Props> {\r\n  componentDidMount() {\r\n    const path = pathFinder(this.props.pathname);\r\n    this.props.requestCourse(path);\r\n  }\r\n\r\n  render() {\r\n    const { classes, data, loading, error, pathname } = this.props;\r\n    return (\r\n      <Grid container justify=\"center\" className={classes.root}>\r\n        {loading ? (\r\n          <LoadingCircle />\r\n        ) : data ? (\r\n          <Grid container spacing={2}>\r\n            <Grid item lg={6} md={6} xl={6} xs={12}>\r\n              <div className={classes.content}>\r\n                <CardMedia\r\n                  image={thumbnailsFinder(data.thumbnails)}\r\n                  className={classes.image}\r\n                />\r\n                <Typography\r\n                  gutterBottom\r\n                  variant=\"body1\"\r\n                  component=\"h6\"\r\n                  className={classes.text}\r\n                >\r\n                  {data.description}\r\n                </Typography>\r\n              </div>\r\n            </Grid>\r\n            <Grid item lg={6} md={6} xl={6} xs={12}>\r\n              <Grid container justify=\"flex-end\">\r\n                {data?.course_select.map((course, k) => (\r\n                  <CourseItem\r\n                    key={k}\r\n                    type={course.info.genre.name}\r\n                    path={pathname}\r\n                    courseItem={course}\r\n                  />\r\n                ))}\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        ) : (\r\n          <Typography component=\"div\" className={classes.autoMargin}>\r\n            {error}\r\n          </Typography>\r\n        )}\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\ninterface LinkDispatchProps {\r\n  requestCourse: (path: PathFinder) => void;\r\n}\r\n\r\nconst mapStateToProps = (state: AppState, ownProps: Props): CourseProps => ({\r\n  classes: ownProps.classes,\r\n  pathname: state.router.location.pathname,\r\n  ...state.single.course,\r\n});\r\n\r\nconst mapDispatchToProps = (\r\n  dispatch: ThunkDispatch<any, any, AppActions>\r\n): LinkDispatchProps => ({\r\n  requestCourse: bindActionCreators(requestCourse, dispatch),\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withStyles(useStyles)(Course));\r\n"],"sourceRoot":""}